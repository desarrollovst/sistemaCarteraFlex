<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" height="100%" width="100%"
	xmlns:forms="forms.*" xmlns:Data="Data.*" xmlns:Administracion="Administracion.*">
	
	<mx:states>
		<mx:State name="resultado">
			<mx:SetProperty target="{canvas1}" name="width" value="900"/>
			<mx:AddChild relativeTo="{canvas1}" position="lastChild">
				<Data:RowColorDataGrid id="dgReg" x="499" y="55" width="380" height="493" horizontalScrollPolicy="on" sortableColumns="true">
					<Data:columns>
						<mx:DataGridColumn headerText="" dataField="REG" textAlign="center" rendererIsEditor="true" width="30" editorDataField="selected">
							<mx:itemRenderer>
								<mx:Component>
			  						<mx:CheckBox change="outerDocument.seleccionarRegAcred(event)" width="25" fontSize="10" verticalCenter="0"/> 
			  					</mx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn headerText="ACREDITADO" dataField="CDGCL" width="90"/>
						<mx:DataGridColumn headerText="NOMBRE ACREDITADO" dataField="NOMCL" width="150"/>
						<mx:DataGridColumn headerText="SALDO CAPITAL" dataField="SALDO" width="80"/>
						<mx:DataGridColumn headerText="INICIO" dataField="FINICIO" width="70"/>
						<mx:DataGridColumn headerText="GRUPO" dataField="CDGNS" width="60"/>
						<mx:DataGridColumn headerText="CICLO" dataField="CICLO" width="60"/>
						<mx:DataGridColumn headerText="CANTIDAD ENTREGADA" dataField="CANTIDAD" width="80"/>
					</Data:columns>
				</Data:RowColorDataGrid>
			</mx:AddChild>
			<mx:RemoveChild target="{btnAceptar}"/>
			<mx:AddChild relativeTo="{canvas1}" position="lastChild">
				<mx:Button id="btnLimpiar" label="Limpiar" x="726" y="556" click="limpiarResultado()"/>
			</mx:AddChild>
			<mx:AddChild relativeTo="{canvas1}" position="lastChild">
				<mx:Button id="btnRegistrar" label="Registrar" x="802" y="556" click="asignaFondeo()"/>
			</mx:AddChild>
			<mx:AddChild relativeTo="{canvas1}" position="lastChild">
				<mx:Label id="lblCtrlReg" x="499" y="10" width="368.5" fontSize="12" fontWeight="bold" fontStyle="italic"/>
			</mx:AddChild>
			<mx:AddChild relativeTo="{canvas1}" position="lastChild">
				<mx:Label id="lblCtrlMonto" x="499" y="33" width="368.5" fontSize="12" fontWeight="bold" fontStyle="italic"/>
			</mx:AddChild>
		</mx:State>
	</mx:states>
	
	<mx:Script>
		<![CDATA[
		import mx.messaging.AbstractConsumer;
		import mx.events.CloseEvent;
		import Data.Globales;
		import Data.Utils;
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.controls.DataGrid;
		import mx.core.Application;
		import mx.effects.*;
		import mx.events.EffectEvent;
		import mx.events.ValidationResultEvent;
		import mx.managers.PopUpManager;	
		import mx.rpc.events.ResultEvent;
		import mx.rpc.soap.WebService;
		import mx.rpc.xml.SimpleXMLDecoder;
		import mx.utils.ArrayUtil;  
		import mx.validators.Validator;	
	
		private var _xmlEntFed:XML = new XML();
		private var _xmlInfo:XML = new XML();
		private var _xmlOF:XML = new XML();
		private var _xmlLC:XML = new XML();
		private var _xmlMunic:XML = new XML();
		private var _xmlLoc:XML = new XML();
		private var _xmlDisp:XML = new XML();
		private var _xmlReg:XML = new XML();
		private var _xmlRes:XML = new XML();
		private var _xmlCoord:XMLList = new XMLList;
		
		public var acredObj:ArrayCollection = new ArrayCollection();
		public var orgObj:ArrayCollection = new ArrayCollection();
		public var lineaObj:ArrayCollection = new ArrayCollection();
		public var locObj:ArrayCollection = new ArrayCollection();
		public var munObj:ArrayCollection = new ArrayCollection();
		public var entObj:ArrayCollection = new ArrayCollection();
		public var dispObj:ArrayCollection = new ArrayCollection();
		public var coordObj:ArrayCollection = new ArrayCollection();
		public var regObj:ArrayCollection = new ArrayCollection();
		public var sexoObj:ArrayCollection = new ArrayCollection();
		
		public var global:Globales;
		public var wsMS:WebService;	
		public var tipoAccion:int;
		public var titulo:String;
		public var texto:String;
		public var control:Number;
		public var du:Utils;
		private var vResult:ValidationResultEvent;
		
		public function agregaInicial(codigo:String, texto:String):Object{
			var oItem:Object = new Object();
			oItem.codigo = codigo;	
			oItem.nombre = texto;
			return oItem;
		}	
			
		public function asignaFondeo():void{
			var orgFond:String = cboOF.selectedItem.codigo;
			var lineaCred:String = cboLC.selectedItem.codigo;
			var disp:String = cboDisp.selectedItem.codigo;
			var registro:String = "";
			var cadena:Array;
			//tipoAccion = 2 asignacion de fondeo individual
			if(tipoAccion == 2)
				if(validaRegAcred())
					cadena = formateaRegAcred().split(";");
				else
					return; 
			
			initConexion();
			du.sCursor();
			Application.application.bloquear();
			
			if (tipoAccion == 1){
				wsMS.addEventListener(ResultEvent.RESULT, setAsignaFondeo);
				wsMS.setAsignaFondeo.send(orgFond, lineaCred, disp, tipoAccion, registro, Application.application.U_ID);
			}
			else if(tipoAccion == 2){
				du.ejecutaWsMethod(wsMS,function(evt:ResultEvent):void{
					var res:String = evt.result.toString();
					
					if (res.substr(0,1) == "1"){
						wsMS.addEventListener(ResultEvent.RESULT, setAsignaFondeo);
						wsMS.setAsignaFondeo.send(orgFond, lineaCred, disp, tipoAccion, registro, Application.application.U_ID);
					}
					else{
						du.rCursor();
						du.closeWs(wsMS);
						Application.application.desbloquear();
						Alert.show(res.substr(2,res.length-1),titulo,4,null,null,global.iInfo);
					}
				});
				// ENVIA LOS REGISTROS A FONDEAR A LA TABLA FONDEO_CADENA
				wsMS.setAccionFondeoCadena.send(cadena, Application.application.U_ID, "PRONAFIM", orgFond, lineaCred, disp, 1);
			}
		}
		
		public function asignaFondeoAcred(event:CloseEvent):void{
			if(event.detail==Alert.YES){
				tipoAccion = 2;
				titulo = "AsignaciÃ³n Individual de Fondeo";	
				lblTitulo.text = titulo.toUpperCase();
				txtImporte.editable = true;
				limpiarCriteriosSelec();
				buscarInfoDisp();
			} 
		}
		
		public function buscarInfoDisp():void{
			if(cboOF.selectedIndex > 0 && cboLC.selectedIndex > 0 && 
			   cboDisp.selectedIndex > 0 && dtfFecSaldo.selectedDate){
				var wsCat:WebService = new WebService;
				var params:Array = new Array;
				var orgFond:String = cboOF.selectedItem.codigo;
				var lineaCred:String = cboLC.selectedItem.codigo;
				var disp:String = cboDisp.selectedItem.codigo;
				var fecSaldo:String = dtfFecSaldo.text; 
			
				du.initWsCat(wsCat);
				du.sCursor();
					
				_xmlInfo = null;
				
				du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
					_xmlInfo = new XML(evt.result.toString());
				
					du.rCursor();
					du.closeWs(wsCat);
					
					if(_xmlInfo.elements().length() > 0){
						llenaRegistros();
					}	
				});
				params[0] = orgFond;
				params[1] = lineaCred;
				params[2] = disp;
				params[3] = fecSaldo;
				wsCat.getInfoRegistro.send(13, params);
			}
			else{
				//Alert.show("Debe seleccionar todos los datos necesarios para realizar la consulta.",titulo,4,null,null,global.iAlert);
				lblImpDisp.text = "";
				lblImpMarc.text = "";
				lblSaldo.text = "";
			}			
		}
		
		public function calculaRegSel():void{
			var listaAcred:ArrayCollection = dgReg.dataProvider as ArrayCollection;
			var cont:int = 0;
			var cantMarc:Number = 0;
			
			for (var i:int = 0; i < listaAcred.length; i++){
				if(listaAcred[i].REG == true){
					cantMarc += Number(listaAcred[i].SALDO);
					cont++;
				}
			}
			control = cantMarc;
			lblCtrlReg.text = cont.toString() + " Registro(s) seleccionado(s)"; 
			lblCtrlMonto.text = "Monto Marcado: " + global.formatoMoneda(control.toString());
		}
		
		public function cargaCoord():void{
			_xmlCoord = Application.application._xmlSuc.Table.(CDGRG.toString().toLowerCase() == cboRegion.selectedItem.codigo.toString().toLowerCase());
			
			coordObj.removeAll();
			coordObj.refresh();	
			coordObj.addItem(agregaInicial("000", "--Todas--"))
						
			formateaCoord();
			cboCoord.dataProvider = coordObj;
		}			
		
		public function cargaLocalidad():void{
			var wsCat:WebService = new WebService;
			var params:Array = new Array;
			var entFed:String = cboEntFed.selectedItem.codigo;
			var munic:String = cboMunic.selectedItem.codigo;
			
			du.initWsCat(wsCat);
			du.sCursor();
				
			locObj.removeAll();
			locObj.refresh();
					
			du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
				_xmlLoc = new XML(evt.result.toString());
					
				if(_xmlLoc.elements().length() > 0){
					formateaLocalidad();
					cboLocalidad.dataProvider = locObj;
				}
				du.rCursor();
				du.closeWs(wsCat);
			});
			params[0] = entFed;
			params[1] = munic;
			params[2] = "";
			wsCat.getCatalogoGral.send(4, params);
		}
			
		public function cargaMunicipio():void{
			var wsCat:WebService = new WebService;
			var params:Array = new Array;
			var entFed:String = cboEntFed.selectedItem.codigo;
			
			du.initWsCat(wsCat);
			du.sCursor();
			
			munObj.removeAll();
			munObj.refresh();
			locObj.removeAll();
			locObj.refresh();	
				
			du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
				_xmlMunic = new XML(evt.result.toString());
					
				du.rCursor();
				du.closeWs(wsCat);
				
				if(_xmlMunic.elements().length() > 0){
					formateaMunic();
					cboMunic.dataProvider = munObj;
				}
			});
			params[0] = entFed;
			params[1] = "";
			wsCat.getCatalogoGral.send(3, params);
		}
		
		public function cargaRegion():void{ 				  
			_xmlReg = Application.application._xmlReg;
			
			regObj.removeAll();
			regObj.refresh();	
			regObj.addItem(agregaInicial("000", "--Todas--"));
			
			formateaRegion();
			cboRegion.dataProvider = regObj;
			cargaCoord();
		}
		
		public function enviar():void{
			var wsCat:WebService = new WebService;
			var params:Array = new Array;
			if(valida() == true){
				//asignacion de variables para realizar la consulta de seleccion
				var cont:int;
				var tipoMov:int;
				var orgFond:String = cboOF.selectedItem.codigo;
				var lineaCred:String = cboLC.selectedItem.codigo;
				var disp:String = cboDisp.selectedItem.codigo;
				var importe:Number = txtImporte.text != "" ? Number(txtImporte.text) : 0;
				var montoMax:Number = txtMontoMax.text != "" ? Number(txtMontoMax.text) : 0;
				var fecIni:String;
				var fecFin:String;
				var fecSaldo:String;
				var sexo:String;
				var region:String;
				var coord:String = cboCoord.selectedItem.id;
				var entFed:String;
				var munic:String;
				var localidad:String;
				
				//criterio de seleccion: fecha de inicio
				fecIni = dtfFecIni.text;
				fecFin = dtfFecFin.text;
				fecSaldo = dtfFecSaldo.text;	 
				//criterio de seleccion: sexo
				if(chkSexo.selected == true)
					sexo = cboSexo.selectedItem.codigo;	 
				else
					sexo = "";
				//criterio de seleccion: region
				if(chkRegion.selected == true)
					region = cboRegion.selectedItem.codigo;	 
				else
					region = "";
				//citerio de seleccion: sucursal
				if(chkCoord.selected == true)
					coord = cboCoord.selectedItem.codigo;	 
				else
					coord = "";
				//criterio de seleccion: direccion
				if(chkDir.selected == true){
					entFed = cboEntFed.selectedItem.codigo;
					munic = cboMunic.selectedItem.codigo;
					localidad = cboLocalidad.selectedItem.codigo;
				}	 
				else{
					entFed = "";
					munic = "";
					localidad = "";
				}
				
				initConexion();
				du.sCursor();
						
				du.ejecutaWsMethod(wsMS,function(evt:ResultEvent):void {											
					var res:String = evt.result.toString();

					du.rCursor();
					du.closeWs(wsMS);
					
					if(res.substr(0,1) == "1"){
						du.initWsCat(wsCat);
						du.sCursor();
						
						du.ejecutaWsMethod(wsCat,function(ev:ResultEvent):void {											
							_xmlRes = new XML(ev.result.toString());

							du.rCursor();
							du.closeWs(wsCat);
							
							if(_xmlRes.elements().length() - 1 > 0){
								if(tipoAccion == 1){
									var mensaje:String;
									cont = _xmlRes.elements().length() - 1;
									var monto:Number = _xmlRes.Table[cont].SALDO;  
									mensaje = "Se han encontrado " + cont.toString() + " crÃ©dito(s) cuyo monto asciende a " 
											  + global.formatoMoneda(monto.toString()) 
											  + ".\n\nÂ¿Desea iniciar el proceso de AsignaciÃ³n de Fondeo?";
									Alert.show(mensaje,titulo,Alert.YES|Alert.NO,null,manejaAsignaFondeo,global.iQuest);
								}
								else if(tipoAccion == 2){
									currentState = "resultado";
									cont = _xmlRes.elements().length();
									formateaRegistro(ev.result.toString());
									acredObj.removeItemAt(cont-1);
									dgReg.dataProvider = acredObj;
									calculaRegSel();
									modificarColor();
								}
							}
							else
								Alert.show("No se encontrÃ³ informaciÃ³n que coincida con los criterios de consulta.\n\nVerifique la informaciÃ³n selecionada.",titulo,4,null,null,global.iAlert);
						});
						params[0] = Application.application.U_ID;
						wsCat.getListado.send(34, params);
					}
					else
						Alert.show(res.substr(2,res.length - 1),titulo,4,null,null,global.iAlert);
				});
				wsMS.getInfoFondeo.send(tipoAccion, orgFond, lineaCred, disp, importe, montoMax, fecIni, fecFin,
									    sexo, region, coord, entFed, munic, localidad, Application.application.U_ID,
									    fecSaldo);
			}
		}
		
		public function formateaCoord():void{
			var cont:int = _xmlCoord.length();
			var oItem:Object;
			var item:Array = new Array;
			
			for(var i:int = 0; i < cont; i++){
				oItem = new Object();
				oItem.codigo = _xmlCoord.CODIGO[i].toString();
				oItem.nombre = _xmlCoord.NOMBRE[i].toString();
				item.push(oItem);
			}
			coordObj.source = coordObj.source.concat(item);
		}
		
		public function formateaDisp():void{
			var cont:int = _xmlDisp.elements().length();
			var oItem:Object;
			var item:Array = new Array;
				
			dispObj.removeAll();
			dispObj.refresh();
			
			oItem = new Object();
			oItem.codigo = "0";
			oItem.desc = "--Seleccionar--";
			item.push(oItem);	
				
			for(var i:int = 0; i < cont; i++){
				oItem = new Object();
				oItem.codigo = _xmlDisp.Table[i].CODIGO;
				oItem.desc = _xmlDisp.Table[i].DESCRIPCION;
				item.push(oItem);
			}
			dispObj = new ArrayCollection(item);
		}
		
		public function formateaEntFed():void{
			var cont:int = _xmlEntFed.elements().length();
			var oItem:Object;
			var item:Array = new Array;
				
			entObj.removeAll();
			entObj.refresh();
			
			entObj.addItem(agregaInicial("0", "--Todas--"))
				
			for(var i:int = 0; i < cont; i++){
				oItem = new Object();
				oItem.nombre = _xmlEntFed.Table[i].NOMBRE;
				oItem.codigo = _xmlEntFed.Table[i].CODIGO;
				item.push(oItem);
			}
			entObj.source = entObj.source.concat(item);
		}
		
		public function formateaLC():void{
			var cont:int = _xmlLC.elements().length();
			var oItem:Object;
			var item:Array = new Array;
				
			lineaObj.removeAll();
			lineaObj.refresh();
			
			oItem = new Object();
			oItem.codigo = "0";
			oItem.desc = "--Seleccionar--";
			item.push(oItem);	
				
			for(var i:int = 0; i < cont; i++){
				oItem = new Object();
				oItem.codigo = _xmlLC.Table[i].CODIGO;
				oItem.desc = _xmlLC.Table[i].DESCRIPCION;
				item.push(oItem);
			}
			lineaObj = new ArrayCollection(item);
		}
		
		public function formateaLocalidad():void{
			var cont:int = _xmlLoc.elements().length();
			var oItem:Object;
			var item:Array = new Array;
				
			locObj.removeAll();
			locObj.refresh();
			
			locObj.addItem(agregaInicial("0", "--Todas--"))
				
			for (var i:int = 0; i < cont; i++){
				oItem = new Object();
				oItem.nombre = _xmlLoc.Table[i].NOMBRE;
				oItem.codigo = _xmlLoc.Table[i].CODIGO;
				item.push(oItem);
			}
			locObj.source = locObj.source.concat(item);
		}
		
		public function formateaMunic():void{
			var cont:int = _xmlMunic.elements().length();
			var oItem:Object;
			var item:Array = new Array;
				
			munObj.removeAll();
			munObj.refresh();
			
			munObj.addItem(agregaInicial("0", "--Todas--"))
			
			for (var i:int = 0; i < cont; i++){
				oItem = new Object();
				oItem.nombre = _xmlMunic.Table[i].NOMBRE;
				oItem.codigo = _xmlMunic.Table[i].CODIGO;
				item.push(oItem);
			}
			munObj.source = munObj.source.concat(item);
		}
		
		public function formateaOF():void{
			var cont:int = _xmlOF.elements().length();
			var oItem:Object;
			var item:Array = new Array;
				
			orgObj.removeAll();
			orgObj.refresh();
			
			oItem = new Object();
			oItem.codigo = "0";
			oItem.nombre = "--Seleccionar--";
			item.push(oItem);	
				
			for (var i:int = 0; i < cont; i++){
				if(_xmlOF.Table[i].CODIGO == "0002"){
					oItem = new Object();
					oItem.nombre = _xmlOF.Table[i].NOMBRE;
					oItem.codigo = _xmlOF.Table[i].CODIGO;
					item.push(oItem);
				}
			}
			orgObj = new ArrayCollection(item);
		}			
			
		public function formateaRegion():void{
			var cont:int = _xmlReg.elements().length();
			var oItem:Object;
			var item:Array = new Array;
				
			for(var i:int = 0; i < cont; i++){
				oItem = new Object();
				oItem.codigo = _xmlReg.Table[i].CODIGO;
				oItem.nombre = _xmlReg.Table[i].NOMBRE;
				item.push(oItem);
			}
			regObj.source = regObj.source.concat(item);
		}	
		
		public function formateaRegistro(datos:String):void{
			var array:Array;
			var xml:XMLDocument = new XMLDocument( datos ); 
     		var decoder:SimpleXMLDecoder = new SimpleXMLDecoder();  
     		var data:Object = decoder.decodeXML( xml );  
			array = ArrayUtil.toArray(data.NewDataSet.Table);   
			acredObj = new ArrayCollection(array);
		}
		
		public function formateaRegAcred():String{
			var listaAcred:ArrayCollection = dgReg.dataProvider as ArrayCollection;
			var registro:String = "";
			var i:int;
			var contador:int = 250;
			var repeticion:int = 1;
			
			for (i = 0; i < listaAcred.length; i++){
				if(listaAcred[i].REG == true)
					registro += (registro != "" ? ",":"") + listaAcred[i].CDGNS + listaAcred[i].CICLO + listaAcred[i].CDGCL;
					
				if(i == contador){
					registro += ";"
					repeticion = repeticion + 1;
					contador = contador + 250;
				}
			}
			
			for(i = 0; i <= repeticion; i++){
				registro = registro.replace(";,",";");
			}
			
			return registro;
		}
	
		public function formateaSexo():void{
			var oItem:Object;
			var item:Array = new Array;
			
			sexoObj.removeAll();
			sexoObj.refresh();
			
			oItem = new Object();
			oItem.codigo = "0";
			oItem.nombre = "--Todos--";
			item.push(oItem);	
			
			oItem = new Object();
			oItem.codigo = "F";
			oItem.nombre = "Femenino";
			item.push(oItem);
			
			oItem = new Object();
			oItem.codigo = "M";
			oItem.nombre = "Masculino";
			item.push(oItem);
			
			sexoObj = new ArrayCollection(item);
		}
		
		public function init(tipo:int):void{
			var wsCat:WebService = new WebService;
			var params:Array = new Array;
			global = new Globales(); 
			du = new Utils();
			tipoAccion = tipo;
			
			if(tipoAccion == 1)
				titulo = "AsignaciÃ³n de Fondeo";
			else if(tipoAccion == 2){
				titulo = "AsignaciÃ³n Individual de Fondeo";
				txtImporte.editable = true;
			}	
			lblTitulo.text = titulo.toUpperCase();
			formateaSexo();
			cboSexo.dataProvider = sexoObj;
			cargaRegion();
			
			du.initWsCat(wsCat);
			du.sCursor();
				
			du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
				_xmlOF = new XML(evt.result.toString());
					
				if(_xmlOF.elements().length() > 0){
					formateaOF();
					cboOF.dataProvider = orgObj;
				}
				
				du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
				_xmlEntFed = new XML(evt.result.toString());
					
					du.rCursor();
					du.closeWs(wsCat);
						
					if(_xmlEntFed.elements().length() > 0){
						formateaEntFed();
						cboEntFed.dataProvider = entObj;
					}	
					limpiar();
				});
				wsCat.getCatalogoGral.send(2);		
			});
			//Obtiene informacion de las Organizaciones Fondeadoras
			wsCat.getCatalogoGral.send(29);
		}
		
		public function initConexion():void{				
			wsMS = new WebService();			
			wsMS.wsdl = Application.application.wsStr.wsdlServ.toString();
			wsMS.loadWSDL();
		}	
		
		public function limpiar():void{
			if(currentState == "resultado")
				currentState = null;
				
			cboOF.selectedIndex = 0;
			cboLC.dataProvider = null;
			cboDisp.dataProvider = null;
			lblImpDisp.text = "";
			lblImpMarc.text = "";
			lblSaldo.text = "";
			limpiarCriteriosSelec();
		}
		
		public function limpiarCriteriosSelec():void{
			var fecMin:Date = global.obtieneInicioMesAnt(Application.application._Current_Fecha);
			var fecMax:Date = Application.application._Current_Fecha;
			
			txtImporte.text = "";
			txtMontoMax.text = "";
			
			dtfFecIni.selectedDate = Application.application._Current_Fecha;
			dtfFecIni.selectableRange = {rangeStart: fecMin, rangeEnd: fecMax};
			dtfFecFin.selectedDate = Application.application._Current_Fecha;
			dtfFecFin.selectableRange = {rangeStart: fecMin, rangeEnd: fecMax};
			cboSexo.selectedIndex = 0;
			cargaRegion();
			cboEntFed.selectedIndex = 0;
			cboMunic.dataProvider = null;
			cboLocalidad.dataProvider = null;
		}
		
		public function limpiarResultado():void{
			if(currentState == "resultado"){
				dgReg.dataProvider = null;
				lblCtrlReg.text = "";
				lblCtrlMonto.text = "";
				currentState = null;
			}
		}
		
		public function llenaRegistros():void{
			lblImpDisp.text = global.formatoMoneda(Number(_xmlInfo.Table[0].CANTIDAD).toString());
			lblImpMarc.text =  global.formatoMoneda(Number(_xmlInfo.Table[0].MARCADO).toString());
			lblSaldo.text =  global.formatoMoneda(Number(_xmlInfo.Table[0].SALDO).toString());
			txtImporte.text = _xmlInfo.Table[0].SALDO;
			txtMontoMax.text = _xmlInfo.Table[0].MONTOMAX;
			
			if(_xmlInfo.Table[0].FFIN.toString() != ""){
				lblFecEnvio.text = "ÃLTIMO REPORTE ENVIADO EL " + _xmlInfo.Table[0].FENVIO.toString(); 	
			}
		}
		
		private function manejaAsignaFondeo(event:CloseEvent):void{
			if(event.detail==Alert.YES){
				asignaFondeo();
			}
		}
		
		public function modificarColor():void{
			dgReg.rowColorFunction = seleccionarColor; 
		}
		
		private function seleccionarColor(datagrid:DataGrid, rowIndex:int, color:uint):uint{
			var Info:ArrayCollection = dgReg.dataProvider as ArrayCollection;
			var rColor:uint;
			if(Info[rowIndex].REGANT == true)
				rColor = 0xC3C3C3;
			else
				rColor = color;
			return rColor;
		}
		
		public function seleccionarLC():void{
			cboDisp.dataProvider = null;
			
			if(cboLC.selectedIndex > 0){
				var wsCat:WebService = new WebService;
				var params:Array = new Array;
				var orgFond:String = cboOF.selectedItem.codigo;
				var lineaCred:String = cboLC.selectedItem.codigo;
				
				du.initWsCat(wsCat);
				du.sCursor();
						
				_xmlDisp = null;
					
				du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
					_xmlDisp = new XML(evt.result.toString());
					
					du.rCursor();
					du.closeWs(wsCat);
						
					if(_xmlDisp.elements().length() > 0){
						formateaDisp();
						cboDisp.dataProvider = dispObj;
						cboDisp.selectedIndex = 0;	
					}
					buscarInfoDisp();
				});
				params[0] = orgFond;
				params[1] = lineaCred;
				wsCat.getListado.send(22, params);
			}
			else
				buscarInfoDisp();
		}
		
		public function seleccionarOF():void{
			cboLC.dataProvider = null;
			cboDisp.dataProvider = null;
			
			if(cboOF.selectedIndex > 0){
				var wsCat:WebService = new WebService;
				var params:Array = new Array;
				var orgFond:String = cboOF.selectedItem.codigo;
				
				du.initWsCat(wsCat);
				du.sCursor();
						
				_xmlLC = null;
					
				du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
					_xmlLC = new XML(evt.result.toString());
					
					du.rCursor();
					du.closeWs(wsCat);
						
					if(_xmlLC.elements().length() > 0){
						formateaLC();
						cboLC.dataProvider = lineaObj;
						cboLC.selectedIndex = 0;
					}
					buscarInfoDisp();
				});
				params[0] = orgFond;
				wsCat.getListado.send(64, params);
			}	
			else
				buscarInfoDisp();
		}
		
		public function seleccionarRegAcred(event:Event):void{
			var ind:int = dgReg.selectedIndex;
			var vScroll:Number = dgReg.verticalScrollPosition;
			acredObj[ind].REG = CheckBox(event.currentTarget).selected;
			calculaRegSel();
		}	
		
		private function setAsignaFondeo(event:ResultEvent):void{
			wsMS.disconnect();
			du.rCursor();
			Application.application.desbloquear();
			wsMS.removeEventListener(ResultEvent.RESULT, setAsignaFondeo);
			var res:String = event.result.toString();
			if (res.substr(0,1) == "1"){
				if(tipoAccion == 1){
					var cont:int = _xmlRes.elements().length() - 1;
					var monto:Number = _xmlRes.Table[cont].SALDO;
					if(monto < Number(global.formatoNumerico(lblSaldo.text)))
						Alert.show("Â¿Desea completar el proceso realizando la AsignaciÃ³n Individual de Fondeo?",titulo,Alert.YES|Alert.NO,null,asignaFondeoAcred,global.iQuest);
					else{
						Alert.show("Proceso finalizado exitosamente.",titulo,4,null,null,global.iInfo);
						limpiar();
					}	
				}
				if(tipoAccion == 2){
					Alert.show("Proceso finalizado exitosamente.",titulo,4,null,null,global.iInfo);
					limpiar();	
				}	
			}	
			else
				Alert.show(res.substr(2,res.length -1),titulo,4,null,null,global.iAlert);		
		}
			
		public function valida():Boolean{
			if(lblSaldo.text == "" && lblImpDisp.text == "" && lblImpMarc.text == ""){
				Alert.show("Para iniciar el proceso debe seleccionar los criterios de fondeo.",titulo,4,null,null,global.iAlert);
				return false;
			}
			if(tipoAccion == 1 && txtImporte.text == ""){
				Alert.show("Debe capturar el importe que debe asignarse.",titulo,4,null,null,global.iAlert);
				return false;
			}
			if(Number(txtImporte.text) > Number(global.formatoNumerico(lblSaldo.text))){
				Alert.show("El importe capturado no puede ser mayor que el saldo disponible.\n\nVerifique la informaciÃ³n capturada.",titulo,4,null,null,global.iAlert);
				return false;
			}
			if(dtfFecSaldo.selectedDate == null){
				Alert.show("Debe seleccionar la fecha de cÃ¡lculo de saldos.\n\nVerifique la informaciÃ³n capturada.",titulo,4,null,null,global.iAlert);
				return false;
			}
			return true;
		}
		
		public function validaFecha():void{
			dtfFecIni.selectedDate = global.validaFecha(dtfFecIni.selectedDate, dtfFecFin.selectedDate,titulo);
		}
		
		public function validaMonto(event:Event):void{
			numVal.source = TextInput(event.currentTarget);
			vResult = numVal.validate();

			if (vResult.type!=ValidationResultEvent.VALID)
               	TextInput(event.currentTarget).text = "";
		}
		
		public function validaRegAcred():Boolean{
			if(control > Number(global.formatoNumerico(lblImpDisp.text))){
				Alert.show("El importe marcado no puede ser mayor que el importe de la disposiciÃ³n.\n\nVerifique la informaciÃ³n capturada.",titulo,4,null,null,global.iAlert);
				return false;
			}
			return true;
		}
		
		]]>
	</mx:Script>
	
	<mx:NumberValidator id="numVal" property="text" precision="2" required="false"
        allowNegative="true" domain="real" decimalSeparator="." thousandsSeparator=","/>
	
	<mx:Canvas width="500" height="665" backgroundColor="#ffffff" backgroundAlpha="1.0" id="canvas1">
		<mx:Canvas id="cnvFondeo" x="21" y="55" width="460" height="230" styleName="canvasMod">
			<mx:Label id="lblOF" x="70.05" y="13" text="Fondeadora:"/>
			<mx:ComboBox id="cboOF" x="144.05" y="10" width="230" labelField="nombre" change="seleccionarOF()"></mx:ComboBox>
			<mx:Label id="lblLC" x="65.05" y="44" text="LÃ­nea CrÃ©dito:"/>
			<mx:ComboBox id="cboLC" x="144.05" y="41" width="230" labelField="desc" change="seleccionarLC()"></mx:ComboBox>
			<mx:Label id="lblDisp" x="73.05" y="75" text="DisposiciÃ³n:"/>
			<mx:ComboBox id="cboDisp" x="144.05" y="72" width="230" labelField="desc" change="buscarInfoDisp()"/>
			<mx:Label id="lblEtqImpDisp" x="36" y="136" text="Importe DisposiciÃ³n:"/>
			<mx:Label id="lblEtqImpMarc" x="49" y="164" text="Importe Marcado:"/>
			<mx:Label id="lblEtqSaldo" x="277.9" y="145" text="Saldo:"/>
			<mx:Button id="btnBusqDisp" x="378.9" y="43" icon="@Embed(source='assets/images/iconBusq.png')" toolTip="Buscar Info DisposiciÃ³n" width="40" click="buscarInfoDisp()" visible="false"/>
			<mx:Label id="lblImpDisp" x="145" y="136"/>
			<mx:Label id="lblImpMarc" x="145" y="164"/>
			<mx:Label id="lblSaldo" x="320.9" y="145"/>
			<mx:Label id="lblFecSaldo" x="10" y="106" text="Fecha CÃ¡lculo de Saldos:"/>
			<mx:DateField id="dtfFecSaldo" width="110" x="145" y="104" change="buscarInfoDisp()"/>
			<mx:Label id="lblFecEnvio" x="97.95" y="197" width="262.05" fontStyle="italic" fontWeight="bold" textAlign="center"/>
		</mx:Canvas>
		<mx:Canvas id="cnvDir" x="21" y="312" styleName="canvasMod" width="460" height="315">
			<mx:Label id="lblImporte" x="95.5" y="12" text="Importe:"/>
			<mx:Label id="lblFecIni" x="58.5" y="75" text="Fecha de Inicio:"/>
			<mx:Label id="lblSexo" x="105.5" y="107" text="Sexo:"/>
			<mx:Label id="lblRegion" x="97.5" y="139" text="RegiÃ³n:"/>
			<mx:Label id="lblCoord" x="87.5" y="171" text="Sucursal:"/>
			<mx:TextInput id="txtImporte" x="146.5" y="10" width="100" maxChars="13" change="validaMonto(event)" editable="false"/>
			<mx:DateField id="dtfFecIni" width="100" x="146.5" y="73" enabled="true" change="validaFecha()"/>
			<mx:DateField id="dtfFecFin" width="100" x="308" y="73" enabled="true" change="validaFecha()"/>
			<mx:ComboBox id="cboSexo" x="146.5" y="105" width="170" enabled="false" labelField="nombre"/>
			<mx:ComboBox id="cboRegion" x="146.5" y="137" width="170" enabled="false" labelField="nombre" change="cargaCoord()"/>
			<mx:ComboBox id="cboCoord" x="146.5" y="169" width="170" enabled="false" labelField="nombre"/>
			<mx:Label id="lblHasta" x="265" y="75" text="hasta:"/>
			<mx:CheckBox id="chkFecha" x="33" y="75" width="16" change="{dtfFecIni.enabled = dtfFecFin.enabled = chkFecha.selected}" visible="false"/>
			<mx:CheckBox id="chkSexo" x="33" y="107" width="16" change="{cboSexo.enabled = chkSexo.selected}"/>
			<mx:CheckBox id="chkRegion" x="33" y="139" width="16" change="{cboRegion.enabled = chkRegion.selected}"/>
			<mx:CheckBox id="chkCoord" x="33" y="171" width="16" change="{cboCoord.enabled = chkCoord.selected}"/>
			<mx:CheckBox id="chkDir" x="33" y="204" width="16" change="{cboEntFed.enabled = cboMunic.enabled = cboLocalidad.enabled = chkDir.selected}" enabled="false"/>
			<mx:Canvas x="73.5" y="198" width="270" height="102" styleName="canvasMod">
				<mx:Label id="lblEntFed" x="21" y="6" text="Entidad:"/>
				<mx:ComboBox id="cboEntFed" x="72" y="6" width="170" enabled="false" labelField="nombre" change="cargaMunicipio()"/>
				<mx:ComboBox id="cboMunic" x="72" y="38" width="170" enabled="false" labelField="nombre" change="cargaLocalidad()"/>
				<mx:ComboBox id="cboLocalidad" x="72" y="70" width="170" enabled="false" labelField="nombre"/>
				<mx:Label id="lblMunic" x="12" y="38" text="Municipio:"/>
				<mx:Label id="lblLocalidad" x="10" y="70" text="Localidad:"/>
			</mx:Canvas>
			<mx:TextInput id="txtMontoMax" x="146.5" y="42" width="100" maxChars="13" change="validaMonto(event)" editable="false"/>
			<mx:Label id="lblMontoMax" x="19.5" y="44" text="Monto Max. Acreditado:"/>
		</mx:Canvas>
		<mx:Label id="lblConsulta" x="21" y="293" text="Criterios de SelecciÃ³n"/>
		<mx:Button id="btnAceptar" x="417" y="635" icon="@Embed(source='assets/images/iconAccept.png')" click="enviar()"/>
		<mx:Label id="lblFondeo" x="21" y="36" text="Criterios de Fondeo"/>
		<mx:Label id="lblTitulo" x="21" y="10" width="247" fontSize="12" fontWeight="bold" fontStyle="italic"/>
	</mx:Canvas>
</mx:Canvas>