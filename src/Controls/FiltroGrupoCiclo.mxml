<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="280" height="180" backgroundAlpha="1.0" 
	backgroundColor="#FFFFFF" verticalScrollPolicy="off" horizontalScrollPolicy="off" xmlns:Data="Data.*">
	<mx:states>
		<mx:State name="fecha">
			<mx:SetProperty name="height" value="220"/>
			<mx:SetProperty target="{canvas1}" name="height" value="70.5"/>
			<mx:AddChild position="lastChild">
				<mx:Canvas x="17.95" y="131" width="247.5" height="37" styleName="canvasMod" id="canvas0">
					<mx:DateField id="dtfFecha" x="103.25" y="6" width="111"/>
					<mx:Label x="57.25" y="8" text="Fecha:" id="label1"/>
				</mx:Canvas>
			</mx:AddChild>
			<mx:SetProperty target="{btnGenerar}" name="x" value="65"/>
			<mx:SetProperty target="{btnGenerar}" name="y" value="181"/>
			<mx:SetProperty target="{btnLimpiar}" name="x" value="144"/>
			<mx:SetProperty target="{btnLimpiar}" name="y" value="181"/>
		</mx:State>
	</mx:states>
	
	<mx:Metadata>
		[Event(name="enviar", type="enviar")]
	</mx:Metadata>
	
	<mx:Script>
		<![CDATA[
			import Data.Globales;
			import Data.Utils;
			import mx.collections.ArrayCollection;			
			import mx.controls.Alert;
			import mx.core.Application;
			import mx.effects.easing.Elastic;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.soap.WebService;
			import mx.utils.ObjectUtil;
			
			[Bindable]
			public var dpGrupo:XMLList = new XMLList();
			private var _xmlGrupo:XML =  new XML();
			
			public var wsMS:WebService;
			public var rep:String;
			public var titulo:String;
			private var du:Utils;
			private var global:Globales;
			
			public function ejecuta():void{
				btnGenerar.setFocus();
				//rep = 0 indica que el control es utilizado para extraer 
				//los valores de sus controles
				if(rep == "0")
					enviar();
				//rep <> 0 indica que el control es utilizado para generar 
				//el reporte indicado en esta variable
				else if(rep != "0")
					generar();
			}
			
			public function enviar():void{
				dispatchEvent(new Event("enviar"));
			}
			
			//funcion que invoca la generacion de reportes en formato PDF
			public function generar():void{
				if(valida()){
					var wsCat:WebService = new WebService;
					var params:Array = new Array;
					
					du.initWsCat(wsCat);
					du.sCursor();
								
					du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
						_xmlGrupo = new XML(evt.result.toString());
						
						du.rCursor();
						du.closeWs(wsCat);
						
						if(_xmlGrupo.elements().length() > 0){
							dpGrupo = _xmlGrupo.Table.(CODIGO.toString().substr(0, txtGrupo.length).toLowerCase() == txtGrupo.text.toLowerCase());
							if(dpGrupo.elements().length() > 0){
								var id:String = "&id=" + rep;
								var grupo:String = "&grupo=" + txtGrupo.text;
								var ciclo:String = "&ciclo=" + txtCiclo.text;
								var puesto:String = "&puesto=" + Application.application.PUESTO;
								var usuario:String = "&usuario=" + global.obtenerUsuario();
								var nomUsuario:String = "&nomUsuario=" + global.obtenerNombreUsuario();
								var consulta:String = global.urlPdf + id + grupo + ciclo + usuario + nomUsuario;
								Application.application.muestraPdf(consulta);
							}
							else
								Alert.show("No es posible generar el documento del grupo.\n\nVerifique los datos capturados.",titulo,4,null,null,global.iAlert);
						}
						else
							Alert.show("No es posible generar el documento del grupo.\n\nVerifique los datos capturados.",titulo,4,null,null,global.iAlert);	
					});
					params[0] = global.obtenerUsuario();
					params[1] = txtGrupo.text;
					params[2] = txtCiclo.text;
					params[3] = "G";
					wsCat.getListado.send(13, params);
				}
			}			
						
			public function init(rep:String, titulo:String, estatus:String=null):void{
				global = new Globales();
				du = new Utils();
				this.rep = rep;
				this.titulo = titulo;
				currentState = estatus;
				lblTitulo.text = titulo.toUpperCase();
				limpiar();
			}			
						
			public function initConexion():void{				
				wsMS = new WebService();			
				wsMS.wsdl = Application.application.wsStr.wsdlServ.toString();
				wsMS.loadWSDL();
			}	
		
			public function limpiar():void{
				var fec:Date;
				txtGrupo.text = "";
				txtCiclo.text = "";
				txtGrupo.setFocus();
				fec = global.obtenerFechaSistema();
				if(currentState == "fecha")
					dtfFecha.selectedDate = global.seleccionarDiaHabil(new Date(fec.fullYear,fec.month,fec.date)); 
				dispatchEvent(new Event("limpiar"));
			}
				
			public function valida():Boolean{
				if(txtGrupo.text == ""){
					Alert.show("Capture el código de grupo.",titulo,4,null,null,global.iAlert);
					return false;
				}
				if(txtCiclo.text == ""){
					Alert.show("Capture el ciclo del préstamo.",titulo,4,null,null,global.iAlert);
					return false;
				}
				return true;
			}
			
			public function obtieneGrupo():String{
				return txtGrupo.text;
			}
			
			public function obtieneCiclo():String{		
				return txtCiclo.text; 		
			}
						
			public function obtieneFecha():String{
				return dtfFecha.text;
			}
		]]>
	</mx:Script>
	<mx:Label id="lblTitulo" x="16.5" y="10" width="260" fontSize="12" fontWeight="bold" fontStyle="italic"/>
	<mx:Canvas x="17.95" y="53.5" width="247.54999" height="74.5" styleName="canvasMod" id="canvas1">
		<mx:Label id="lblCiclo" x="142.5" y="10" text="Ciclo" width="81" height="20"/>
		<mx:Label id="lblGrupo" x="29.5" y="10" text="Grupo" height="20"/>
		<mx:TextInput id="txtGrupo" x="29.5" y="28.5" maxChars="6" restrict="0-9" enter="ejecuta()"/>
		<mx:TextInput id="txtCiclo" x="142.5" y="28.5" width="45" maxChars="2" restrict="0-9;R;D" enter="ejecuta()"/>
	</mx:Canvas>
	<mx:Label x="16.5" y="34" text="Criterios de Selección" width="124.25"/>
	<mx:Button x="65" y="146" label="Generar" click="ejecuta()" id="btnGenerar"/>
	<mx:Button x="144" y="146" label="Limpiar" width="71" height="24" click="limpiar()" id="btnLimpiar"/>
</mx:Canvas>