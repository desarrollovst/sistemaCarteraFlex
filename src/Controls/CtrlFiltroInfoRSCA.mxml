<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="250" height="200" creationPolicy="all">
 
<mx:Metadata>
	[Event(name="cargaAsesor", type="cargaAsesor")]
	[Event(name="cargaCoord", type="cargaCoord")]
	[Event(name="cargaSucursal", type="cargaSucursal")]
	[Event(name="cargaRegion", type="cargaRegion")]
	[Event(name="selecAsesor", type="selecAsesor")]
	[Event(name="selecCoord", type="selecCoord")]
	[Event(name="selecSuc", type="selecSuc")]
</mx:Metadata>

<mx:Script>
	<![CDATA[
		import Data.Globales;
		import Data.Utils;
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.core.Application;
		import mx.effects.easing.Elastic;
		import mx.managers.PopUpManager;
		import mx.rpc.events.ResultEvent;
		import mx.rpc.events.FaultEvent;
		import mx.rpc.soap.WebService;
		import mx.utils.ObjectUtil;
		import mx.validators.Validator;	
		
		public var _xmlReg:XML =  new XML();
		public var _xmlSucursal:XMLList = new XMLList;
		public var _xmlCoord:XML = new XML();
		public var _xmlAsesor:XML = new XML();
		
		public var regObj:ArrayCollection = new ArrayCollection();
		public var sucursalObj:ArrayCollection = new ArrayCollection();
		public var coordObj:ArrayCollection = new ArrayCollection();
		public var asesorObj:ArrayCollection = new ArrayCollection();
		
		public var wsMS:WebService;
		private var iniSel:String;
		private var iniSelA:String;
		private var du:Utils;
		private var global:Globales;
	
		public function agregaInicial(codigo:String, texto:String):Object{
			var oItem:Object = new Object();
			oItem.codigo = codigo;	
			oItem.nombre = texto;
			return oItem;
		}		
			
		public function cargaAsesor():void{
			var wsCat:WebService = new WebService;
			var params:Array = new Array;

			cboAsesor.enabled = true;
			
			asesorObj.removeAll();
			asesorObj.refresh();
			asesorObj.addItem(agregaInicial("000000", iniSel));
			
			cboAsesor.selectedIndex = 0;				
			
			if(cboCoord.selectedItem.codigo != "00"){
				du.initWsCat(wsCat);
				du.sCursor();
						
				du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
					_xmlAsesor = new XML(evt.result.toString());
						
					du.rCursor();
					du.closeWs(wsCat);	
						
					if(_xmlAsesor.elements().length() > 0){
						formateaAsesor();
					 	if((_xmlAsesor.elements().length() == 1) && (asesorObj[0].codigo == Application.application.U_ID.toString())){
							cboAsesor.selectedIndex = 1;
							cboAsesor.enabled = false;
						}
						else{
							if(Application.application.PUESTO == 'A'){
								var i:int;
								for(i = 0; i < asesorObj.length; i++){
									if(asesorObj[i].codigo == Application.application.U_ID.toString()){
										cboAsesor.selectedIndex = i;
										break;
									}
								}
								cboAsesor.enabled = false;
							}
						}
					}
					else{
						asesorObj.removeAll();
						asesorObj.refresh();
						asesorObj.addItem(agregaInicial("000000", "--Sin Asesor--"));
						
						cboAsesor.enabled = false;
					}
					seleccionaAsesor();
					dispatchEvent(new Event("cargaAsesor"));
				});
				params[0] = cboCoord.selectedItem.codigo;
				params[1] = "";
				wsCat.getCatalogoGral.send(49, params);
			}
			else{
				seleccionaAsesor();
				dispatchEvent(new Event("cargaAsesor"));
			}
		}		
		
		public function cargaCoord():void{
			var wsCat:WebService = new WebService;
			var params:Array = new Array;
			cboCoord.enabled = true;
			cboAsesor.enabled = true;
			
			coordObj.removeAll();
			coordObj.refresh();
			coordObj.addItem(agregaInicial("00", iniSel));
			asesorObj.removeAll();
			asesorObj.refresh();
			asesorObj.addItem(agregaInicial("000000", iniSel));
			
			cboCoord.selectedIndex = 0;
			
			if(cboSucursal.selectedItem.codigo != "000"){
				du.initWsCat(wsCat);
				du.sCursor();
						
				du.ejecutaWsMethod(wsCat,function(ev:ResultEvent):void {											
					_xmlCoord = new XML(ev.result.toString());
						
					du.rCursor();
					du.closeWs(wsCat);	
					
					if(_xmlCoord.elements().length() > 0){
						formateaCoord();
					 	if(_xmlCoord.elements().length() == 1){
							cboCoord.selectedIndex = 1;
							cboCoord.enabled = false;
							//cargaAsesor();
						}
						else{
							if(Application.application.PUESTO == 'A'){
								var n:int;
								n = _xmlCoord.Table.(CDGPE.toString() == Application.application.COORD.toString()).childIndex();
								cboCoord.selectedIndex = n + 1;
								cboCoord.enabled = false;
							} 
							else if(Application.application.PUESTO == 'C'){
								var i:int;
								i = _xmlCoord.Table.(CDGPE.toString() == Application.application.U_ID.toString()).childIndex();
								cboCoord.selectedIndex = i + 1;
								cboCoord.enabled = false;
							}
							else{
								cboCoord.selectedIndex = 0;
								cboCoord.enabled = true;
							}
							//cargaAsesor();
						}
					}
					else{
						coordObj.removeAll();
						coordObj.refresh();
						coordObj.addItem(agregaInicial("00", "--Sin Coordinador--"));
						cboCoord.enabled = false;
						cboCoord.selectedIndex = 0;
						
						asesorObj.removeAll();
						asesorObj.refresh();
						asesorObj.addItem(agregaInicial("000000", "--Sin Asesor--"));
						cboAsesor.enabled = false;
						cboAsesor.selectedIndex = 0;
					}
					modificaCoord();
					dispatchEvent(new Event("cargaCoord"));
				});
				params[0] = "";
				params[1] = "";
				params[2] = cboSucursal.selectedItem.codigo;
				wsCat.getCatalogoGral.send(48, params);
			}
			else{
				modificaCoord();
				dispatchEvent(new Event("cargaCoord"));
				cboAsesor.selectedIndex = 0;
			}
		}			
						
		public function cargaRegion():void{
			_xmlReg = Application.application._xmlReg;
			formateaRegion();
			if(_xmlReg.elements().length() == 1){
				cboRegion.selectedIndex = 1;
				cboRegion.enabled = false;
			}
			cargaSucursal();
		}		
		
		public function cargaSucursal():void{
			_xmlSucursal = Application.application._xmlSuc.Table.(CDGRG.toString().toLowerCase() == cboRegion.selectedItem.codigo.toString().toLowerCase());
			
			sucursalObj.removeAll();
			sucursalObj.refresh();	
			sucursalObj.addItem(agregaInicial("000", iniSelA))
			coordObj.removeAll();
			coordObj.refresh();	
			coordObj.addItem(agregaInicial("00", iniSel))
			asesorObj.removeAll();
			asesorObj.refresh();
			asesorObj.addItem(agregaInicial("000000", iniSel))
			
			cboSucursal.enabled = true;
			cboCoord.enabled = true;
			cboAsesor.enabled = true;
			
			formateaSucursal();
			
			if(_xmlSucursal.length() == 1){
				cboSucursal.selectedIndex = 1;
				cboSucursal.enabled = false;
			}
			dispatchEvent(new Event("cargaSucursal"));
			modificaSucursal();
		}
		
		private function formateaAsesor():void{
			var cont:int = _xmlAsesor.elements().length();
			var oItem:Object;
			var item:Array = new Array();
			
			for(var i:int = 0; i < cont; i++){
				if(_xmlAsesor.Table[i].PUESTO == "A" && Number(_xmlAsesor.Table[i].TELEFONO.toString()) <= 9000){
					oItem = new Object();
					oItem.codigo = _xmlAsesor.Table[i].CODIGO;
					oItem.nombre = _xmlAsesor.Table[i].NOMBREC;
					item.push(oItem);
				}
			}
			asesorObj.source = asesorObj.source.concat(item);
		}	
		
		private function formateaCoord():void{
			var cont:int = _xmlCoord.elements().length();
			var oItem:Object;
			var item:Array = new Array();
			
			for(var i:int = 0; i < cont; i++){
				oItem = new Object();
				oItem.codigo = _xmlCoord.Table[i].CODIGO;
				oItem.nombre = _xmlCoord.Table[i].NOMBRE_PE;
				item.push(oItem);
			}
			coordObj.source = coordObj.source.concat(item);
		}			
					
		private function formateaSucursal():void{
			var cont:int = _xmlSucursal.length();
			var oItem:Object;
			var item:Array = new Array();
			
			for(var i:int = 0; i < cont; i++){
				oItem = new Object();
				oItem.codigo = _xmlSucursal.CODIGO[i].toString();
				oItem.nombre = _xmlSucursal.NOMBRE[i].toString();
				item.push(oItem);
			}
			sucursalObj.source = sucursalObj.source.concat(item);
		}			
		
		private function formateaRegion():void{
			var cont:int = _xmlReg.elements().length();
			var oItem:Object;
			var item:Array = new Array();
			
			for(var i:int = 0; i < cont; i++){
				if(_xmlReg.Table[i].CODIGO != '004'){
					oItem = new Object();
					oItem.codigo = _xmlReg.Table[i].CODIGO;
					oItem.nombre = _xmlReg.Table[i].NOMBRE;
					item.push(oItem);
				}
			}
			regObj.source = regObj.source.concat(item);
		}
		
		public function init(band:Boolean = false):void{
			global = new Globales();
			du = new Utils();
			if(band == false){
				iniSel = "--Todos--";
				iniSelA = "--Todas--";
			}
			else{
				iniSel = "--Seleccionar--";
				iniSelA = "--Seleccionar--";
			}
		}
		
		private function initConexion():void{				
			wsMS = new WebService();			
			wsMS.wsdl = Application.application.wsStr.wsdlServ.toString();
			wsMS.loadWSDL();
		}	
		
		public function limpiar():void{
			cboRegion.enabled = true;
			cboSucursal.enabled = true;
			cboCoord.enabled = true;
			cboAsesor.enabled = true;
			regObj.removeAll();
			regObj.refresh();
			regObj.addItem(agregaInicial("000", iniSelA));
			cboRegion.dataProvider = regObj;		
			cboSucursal.dataProvider = sucursalObj;
			cboCoord.dataProvider = coordObj;
			cboAsesor.dataProvider = asesorObj;	
			cargaRegion();	
		}
		
		private function modificaCoord():void{
			cargaAsesor();	
			seleccionaCoord();
		} 
		
		private function modificaRegion():void{
			cargaSucursal();
		}
		
		private function modificaSucursal():void{
			cargaCoord();
			seleccionaSuc();
		}
		
		public function obtieneAsesor():String{
			return cboAsesor.selectedItem.codigo;
		}
		
		public function obtieneCoord():String{
			return cboCoord.selectedItem.codigo;
		}
		
		public function obtieneIndAsesor():int{
			return cboAsesor.selectedIndex;
		}
		
		public function obtieneIndCoord():int{
			return cboCoord.selectedIndex;
		}
		
		public function obtieneIndRegion():int{
			return cboRegion.selectedIndex;
		}
		
		public function obtieneIndSucursal():int{
			return cboSucursal.selectedIndex;
		}
		
		public function obtieneRegion():String{
			return cboRegion.selectedItem.codigo;
		}
		
		public function obtieneSucursal():String{
			return cboSucursal.selectedItem.codigo;
		}
		
		private function seleccionaAsesor():void{
			dispatchEvent(new Event("selecAsesor"));
		}
		
		private function seleccionaCoord():void{
			dispatchEvent(new Event("selecCoord"));
		}
		
		private function seleccionaSuc():void{
			dispatchEvent(new Event("selecSuc"));
		}
		
	]]>
</mx:Script>
	<mx:NumberValidator id="asesorV" source="{cboAsesor}" property="selectedIndex"
	 minValue="1" triggerEvent="" lowerThanMinError="Asesor Requerido"/>
	
	<mx:Label x="4" y="3" text="Región" width="61.75" height="20"/>
	<mx:ComboBox id="cboRegion" x="4" y="20.5" labelField="nombre" change="modificaRegion()" width="170"/>
	<mx:Label x="4" y="52.5" text="Sucursal" width="81" height="23"/>
	<mx:ComboBox id="cboSucursal" x="4" y="73" labelField="nombre" width="170" change="modificaSucursal()"/>
	<mx:Label x="4" y="105" text="Coordinador" height="20"/>
	<mx:ComboBox id="cboCoord" x="4" y="122.5" labelField="nombre" change="modificaCoord()" width="242.05"/>
	<mx:Label x="4" y="154.5" text="Asesor" width="61.75" height="20"/>
	<mx:ComboBox id="cboAsesor" x="4" y="172" labelField="nombre" change="seleccionaAsesor()" width="242.05"/>	
</mx:Canvas>