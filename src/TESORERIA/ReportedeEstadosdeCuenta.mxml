<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="780" height="436" backgroundAlpha="1.0" 
	backgroundColor="#FFFFFF" creationPolicy="all" creationComplete="initApp()" 
	xmlns:Data="Data.*" xmlns:local="*">
	
	<!--Componente de Reporte de Estados de Cuenta-->
	<mx:Script>
		<![CDATA[
			import Data.ExcelExportXls;
			import Data.Globales;
			import Data.Utils;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.DataGrid;
			import mx.core.Application;
			import mx.effects.easing.Elastic;
			import mx.formatters.NumberFormatter;		
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.soap.WebService;
			import mx.utils.ObjectUtil;
		
			private var _xmlRep:XML =  new XML();
			private var _xmlBancos:XML =  new XML();
			private var _xmlCuentas:XML =  new XML();
			
			private var acBancos:ArrayCollection = new ArrayCollection();
			private var acCuentas:ArrayCollection = new ArrayCollection();
			
			private var wsMS:WebService;
			private var titulo:String;
			private var du:Utils;
			private var global:Globales;
			private var fechai:String;
			private var fechaf:String;
			
			private function cargaReporte(pXmlRep:XML, pcdgib:String):void{
				dgBanorte.visible = false;
				dgBanamex.visible = false;
				dgScotiabank.visible = false;
				dgBancomer.visible = false;
				
				if(pXmlRep.length() > 0){
					if(pcdgib == '00'){
						dgBanorte.visible = true;
						dgBanorte.dataProvider = _xmlRep.Table;
					}
					else if
					(pcdgib == '01'){
						dgBanamex.visible = true;
						dgBanamex.dataProvider = _xmlRep.Table;
					}
					else if
					(pcdgib == '06'){
						dgScotiabank.visible = true;
						dgScotiabank.dataProvider = _xmlRep.Table;
					}
					else if
					(pcdgib == '07'){
						dgBancomer.visible = true;
						dgBancomer.dataProvider = _xmlRep.Table;
					}
					lblTotal.text = _xmlRep.elements().length() + " Registro(s)";
				}
			}
				
			private function exportar():void{
				var dgE:ExcelExportXls = new ExcelExportXls();
				
				if(dgBanorte.visible)
					dgE.loadDGInExcel(dgBanorte,null,titulo + " Banorte del " + fechai + " al " + fechaf);
				else if(dgBanamex.visible)
					dgE.loadDGInExcel(dgBanamex,null,titulo + " Banamex del " + fechai + " al " + fechaf);
				else if(dgScotiabank.visible)
					dgE.loadDGInExcel(dgScotiabank,null,titulo + " SCOTIABANK del " + fechai + " al " + fechaf);
				else if(dgBancomer.visible)
					dgE.loadDGInExcel(dgBancomer,null,titulo + " Bancomer del " + fechai + " al " + fechaf);
			}			
						
			public function generar():void{
				if(valida()){
					var cdgib:String = cbxBanco.selectedItem.codigo;
					var cdgcb:String = cbxCuenta.selectedItem.codigo;
					fechai = dtFechaI.text;
					fechaf = dtFechaF.text;
					
					Application.application.bloquear();
					initConexion();
					du.sCursor();
					
					du.ejecutaWsMethod(wsMS,function(evt:ResultEvent):void {											
						_xmlRep = new XML(evt.result.toString());
						
						du.rCursor();
						du.closeWs(wsMS);
						Application.application.desbloquear();
						
						dgBanorte.dataProvider = null;
						dgBanamex.dataProvider = null;
						dgScotiabank.dataProvider = null;
						dgBancomer.dataProvider = null;
						
						btnExportar.enabled = false;
						lblTotal.text = "";
						
						if(_xmlRep.elements().length() > 0){
							cargaReporte(_xmlRep, cdgib);
							btnExportar.enabled = true; 
						}
						else{
							Alert.show("No se encontraron registros que coincidan con los criterios de consulta.\n\nVerifique los datos seleccionados.",titulo,4,null,null,global.iAlert);
							lblTotal.text = "";
						}
					});
					wsMS.getRepEstadosdeCuenta.send(fechai, fechaf, cdgib, cdgcb);
				}
			}					
			
			private function initApp():void{
				global = new Globales();
				du = new Utils();
				titulo = "Reporte de estados de cuenta";
				lblTitulo.text = titulo.toUpperCase();
				
				var wsCat:WebService = new WebService;
				var params:Array = new Array
							
				Application.application.bloquear();
				du.initWsCat(wsCat);
				
				du.ejecutaWsMethod(wsCat,function(event:ResultEvent):void{
					_xmlBancos = new XML(event.result);
							
					du.ejecutaWsMethod(wsCat,function(event:ResultEvent):void{	
						_xmlCuentas = new XML(event.result);
					
						du.closeWs(wsCat);
						du.rCursor();
						Application.application.desbloquear();
						
						if (_xmlBancos.elements().length() > 0){
							formateaBancos();
							
							if (_xmlCuentas.elements().length() > 0){
								formateaCuentas("");
								limpiar();
							}
						}
					});
					params[0] = "";
					wsCat.getListado.send(62, params);
				});
				params[0] = "P";
				wsCat.getCatalogoGral.send(42, params);
			}	
								
			public function initConexion():void{				
				wsMS = new WebService();			
				wsMS.wsdl = Application.application.wsStr.wsdlRep.toString();
				wsMS.loadWSDL();
			}	
			
			private function formateaBancos():void{
				var cont:int = _xmlBancos.elements().length();
				var oItem:Object;
				var item:Array = new Array();
				
				oItem = new Object();
				oItem.codigo = "";	
				oItem.nombre = "--Seleccionar--";
				item.push(oItem);
				
				for (var i:int = 0; i < cont; i++){
					oItem = new Object();
					oItem.codigo = _xmlBancos.Table[i].CODIGO;	
					oItem.nombre = _xmlBancos.Table[i].NOMBRE;
					item.push(oItem);
				}
				
				acBancos = new ArrayCollection(item);
				cbxBanco.dataProvider = acBancos;
				cbxBanco.selectedIndex = 0;
			}
			
			private function formateaCuentas(cdgib:String):void{
				var cont:int = _xmlCuentas.elements().length();
				var oItem:Object;
				var item:Array = new Array();
				acCuentas =  new ArrayCollection();
				
				oItem = new Object();
				oItem.codigo = "";	
				oItem.numero = "--Seleccionar--";
				item.push(oItem);
				
				if(cdgib != ""){
					for (var i:int = 0; i < cont; i++){
						if(_xmlCuentas.Table[i].CDGIB == cdgib){
							oItem = new Object();
							oItem.codigo = _xmlCuentas.Table[i].CODIGO;	
							oItem.numero = _xmlCuentas.Table[i].NUMERO;
							item.push(oItem);
						}
					}
					
					acCuentas = new ArrayCollection(item);
					cbxCuenta.dataProvider = acCuentas;
					cbxCuenta.selectedIndex = 0;
				}
				else
					acCuentas = new ArrayCollection(item);
					cbxCuenta.dataProvider = acCuentas;
					cbxCuenta.selectedIndex = 0;
			}
			
			public function limpiar():void{
				cbxBanco.selectedIndex = 0;
				cbxCuenta.selectedIndex = 0;
				formateaCuentas("");
				dtFechaI.text = "";
				dtFechaF.text = "";
				lblTotal.text = "";
				
				dgBanorte.dataProvider = null;
				dgBanamex.dataProvider = null;
				dgScotiabank.dataProvider = null;
				dgBancomer.dataProvider = null;
				
				dgBanorte.visible = true;
				dgBanamex.visible = false;
				dgScotiabank.visible = false;
				dgBancomer.visible = false;
				
				btnExportar.enabled = false;
			}
			
			private function valida():Boolean{
				if(cbxBanco.selectedIndex == 0){
					Alert.show("Seleccione el banco.",titulo,4,null,null,global.iAlert);
					return false;
				}
				if(cbxCuenta.selectedIndex == 0){
					Alert.show("Seleccione la cuenta.",titulo,4,null,null,global.iAlert);
					return false;
				}
				if(dtFechaI.text == ""){
					Alert.show("Seleccione la fecha inicial.",titulo,4,null,null,global.iAlert);
					return false;
				}
				if(dtFechaF.text == ""){
					Alert.show("Seleccione la fecha final.",titulo,4,null,null,global.iAlert);
					return false;
				}
				
				var fi:Date = DateField.stringToDate(dtFechaI.text, "DD/MM/YYYY");
				var ff:Date = DateField.stringToDate(dtFechaF.text, "DD/MM/YYYY");
				
				if(ff < fi){
					Alert.show("La fecha final no puede ser menor a la fecha inicial.",titulo,4,null,null,global.iAlert);
					return false;
				}
				return true;
			}	
		]]>
	</mx:Script>
	<mx:Button id="btnExportar" x="657" y="178" label="Exportar Excel" click="exportar()" enabled="false"/>
	<mx:Label id="lblTotal" x="19.95" y="404" width="470.05" fontWeight="bold" fontStyle="italic" fontSize="12"/>
		<mx:Label id="lblTitulo" x="18" y="10" width="352" fontSize="12" fontWeight="bold" fontStyle="italic"/>
		<mx:Canvas x="17.95" y="53" width="352.05" height="109.5" styleName="canvasMod">
			<mx:Label x="0" y="75" text="Fecha Inicio:" width="68.45" height="20" textAlign="right"/>
			<mx:DateField id="dtFechaI" x="70.45" y="73" width="90"/>
			<mx:Label x="23" y="15" text="Banco:" width="45" height="20" textAlign="right" id="lblBanco"/>
			<mx:Label x="24.5" y="45" text="Cuenta:" width="44" height="20" textAlign="right" id="lblCuenta"/>
			<mx:ComboBox x="70" y="13" width="264.05" id="cbxBanco" labelField="nombre" change="formateaCuentas(cbxBanco.selectedItem.codigo)"></mx:ComboBox>
			<mx:ComboBox x="70.5" y="43" width="263.55" id="cbxCuenta" labelField="numero"></mx:ComboBox>
			<mx:Label x="171.45" y="75" text="Fecha Fin:" width="70.4" height="20" textAlign="right"/>
			<mx:DateField id="dtFechaF" x="245.9" y="73" width="90"/>
		</mx:Canvas>
		<mx:Button x="94" y="170.5" label="Generar" click="generar()"/>
		<mx:Button x="173" y="171" label="Limpiar" width="71" height="24" click="limpiar()"/>
		<mx:Label x="18" y="34" text="Criterios de Selección" width="124.25"/>
	<Data:RowColorDataGrid id="dgBanorte" sortableColumns="true" x="19.95" y="210" width="740.05" 
		visible="true" height="186" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<Data:columns>
			<mx:DataGridColumn headerText="FECHA OPERACIÓN" dataField="FOPERACION" width="130"/>
			<mx:DataGridColumn headerText="FECHA" dataField="FECHA" width="100"/>
			<mx:DataGridColumn headerText="REFERENCIA" dataField="REFERENCIA" width="120"/>
			<mx:DataGridColumn headerText="DESCRIPCIÓN" dataField="DESCRIPCION" width="120"/>
			<mx:DataGridColumn headerText="COD. TRANSAC" dataField="CODTRANSAC" width="130"/>
			<mx:DataGridColumn headerText="SUCURSAL" dataField="SUCURSAL" width="100"/>
			<mx:DataGridColumn headerText="DEPÓSITOS" dataField="DEPOSITO" width="100"/>
			<mx:DataGridColumn headerText="RETIROS" dataField="RETIRO" width="100"/>
			<mx:DataGridColumn headerText="SALDO" dataField="SALDO" width="100"/>
			<mx:DataGridColumn headerText="MOVIMIENTO" dataField="MOVTO" width="100"/>
			<mx:DataGridColumn headerText="DESCRIPCIÓN DETALLADA" dataField="DESDDETALLADA" width="200"/>
		</Data:columns>
	</Data:RowColorDataGrid>
	<Data:RowColorDataGrid id="dgBanamex" sortableColumns="true" x="19.95" y="210" width="740.05" 
		visible="false" height="186" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<Data:columns>
			<mx:DataGridColumn headerText="FECHA" dataField="FECHA" width="100"/>
			<mx:DataGridColumn headerText="DESCRIPCIÓN" dataField="DESCRIPCION" width="250"/>
			<mx:DataGridColumn headerText="DEPÓSITOS" dataField="DEPOSITO" width="80"/>
			<mx:DataGridColumn headerText="RETIROS" dataField="RETIRO" width="80"/>
			<mx:DataGridColumn headerText="SALDO" dataField="SALDO" width="80"/>
		</Data:columns>
	</Data:RowColorDataGrid>
	<Data:RowColorDataGrid id="dgScotiabank" sortableColumns="true" x="19.95" y="210" width="740.05" 
		visible="false" height="186" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<Data:columns>
			<mx:DataGridColumn headerText="#" dataField="MOVTO" width="100"/>
			<mx:DataGridColumn headerText="FECHA" dataField="FECHA" width="100"/>
			<mx:DataGridColumn headerText="REFERENCIA NUMERICA" dataField="REFERENCIA" width="170"/>
			<mx:DataGridColumn headerText="IMPORTE" dataField="IMPORTE" width="100"/>
			<mx:DataGridColumn headerText="TIPO" dataField="TIPO" width="100"/>
			<mx:DataGridColumn headerText="TRANSACIÓN" dataField="TRANSACCION" width="200"/>
			<mx:DataGridColumn headerText="SALDO" dataField="SALDO" width="100"/>
			<mx:DataGridColumn headerText="LEYENDA1" dataField="LEYENDA1" width="100"/>
			<mx:DataGridColumn headerText="LEYENDA2" dataField="LEYENDA2" width="100"/>
		</Data:columns>
	</Data:RowColorDataGrid>
	<Data:RowColorDataGrid id="dgBancomer" sortableColumns="true" x="19.95" y="210" width="740.05" 
		visible="false" height="186" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<Data:columns>
			<mx:DataGridColumn headerText="DÍA" dataField="FECHA" width="100"/>
			<mx:DataGridColumn headerText="CONCEPTO/REFERENCIA" dataField="DESCRIPCION" width="250"/>
			<mx:DataGridColumn headerText="CARGO" dataField="CARGO" width="80"/>
			<mx:DataGridColumn headerText="ABONO" dataField="ABONO" width="80"/>
			<mx:DataGridColumn headerText="SALDO" dataField="SALDO" width="80"/>
		</Data:columns>
	</Data:RowColorDataGrid>
</mx:Canvas>