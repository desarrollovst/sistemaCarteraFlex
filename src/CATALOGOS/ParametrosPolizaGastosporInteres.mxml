<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="initApp()" width="100%" 
	xmlns:Data="Data.*" horizontalScrollPolicy="auto" creationPolicy="all"   
	xmlns:Administracion="Administracion.*" height="100%">
	
	<!--Componente de Parametros para reporte de cheques cobrados mensual-->
	<mx:Script>
		<![CDATA[
			import Data.Globales;
			import Data.Utils;
			import Data.DatosParamMarcABC;
			import Data.EventParamMarcABC;
			import Data.ExcelExportXls;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.ComboBox;
			import mx.controls.DataGrid;    				
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.controls.TextInput;
			import mx.core.Application;
			import mx.effects.easing.Elastic;
			import mx.events.CloseEvent;
			import mx.events.DataGridEvent;				
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.events.ValidationResultEvent;
			import mx.formatters.NumberFormatter;
			import mx.formatters.SwitchSymbolFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent
			import mx.rpc.Fault;
			import mx.rpc.soap.WebService;
			
			private var _xmlDatos:XML = new XML();
			
			private var acDatos:ArrayCollection = new ArrayCollection();
			private var acMes:ArrayCollection = new ArrayCollection();
			private var acAnio:ArrayCollection = new ArrayCollection();
						
			private var vResult:ValidationResultEvent;
						
			private var aCdgOrf:Array;
			private var aNomOrf:Array;
			private var aCdgFacFid:Array;
			private var aNomFacFid:Array;
			private var aInteres:Array;
			
			private var wsMS:WebService;
			private var titulo:String;
			private var du:Utils;
			private var global:Globales;
			
			private var impGua:Number = 0;
			private var impCap:Number = 0;
			
			private var tipoAccion:int;
			
			private function actualizar(event:Event):void{
				buscarLista();
			}
			
			private function buscarLista():void{
				dgDatos.dataProvider = null;
				
				lblImpGua.text = "$0.00";
				impGua = 0;
				
				lblImpCap.text = "$0.00";
				impCap = 0;  
				
				if(cbxMes.selectedIndex > 0 && cbxAnio.selectedIndex > 0) {
			   		var wsCat:WebService = new WebService;
					var aParams:Array = new Array;
					
					global.bloquear();
					du.initWsCat(wsCat);
					du.sCursor();
										
					du.ejecutaWsMethod(wsCat,function(event:ResultEvent):void{		
						_xmlDatos = new XML(event.result);
						
						du.rCursor();
						du.closeWs(wsCat);
						global.desbloquear();
						
						if(_xmlDatos.elements().length() > 0){
							formateaDatos();
							dgDatos.dataProvider = acDatos;
							lblRegistros.text = _xmlDatos.elements().length() + " Registro(s)";
							lblImpGua.text = global.formatearMoneda(impGua.toString()); 
							btnExportar.enabled = true;
							
							calcula();
						}
						else{
							btnExportar.enabled = false;
							lblRegistros.text = "0 Registro(s)"
						}
					});
					aParams[0] = cbxAnio.selectedItem.id;
					aParams[1] = cbxMes.selectedItem.id;
					wsCat.getListado.send(76, aParams);
			 	}
			}
			
			private function exportar():void{
				var dgE:ExcelExportXls = new ExcelExportXls();
				dgE.loadDGInExcel(dgDatos,null,titulo);		
			}
			
			private function formateaDatos():void{
				var cont:int = _xmlDatos.elements().length();
				var oItem:Object;
				var item:Array = new Array();
								
				for (var i:int = 0; i < cont; i++){
					oItem = new Object();
					oItem.CDGORF = _xmlDatos.Table[i].CDGORF;
					oItem.NOMORF = _xmlDatos.Table[i].NOMORF;
					oItem.CDGFACFID = _xmlDatos.Table[i].CDGFACFID;
					oItem.NOMFACFID = _xmlDatos.Table[i].NOMFACFID;
					oItem.INTERES = _xmlDatos.Table[i].INTERES;
					item.push(oItem);
					
					impGua = impGua + Number(_xmlDatos.Table[i].INTERES);
				}
				acDatos = new ArrayCollection(item);
			}
			
			private function enviar():void{
				//TIPO 1 - INSERTA (tipoAccion)
				//TIPO 2 - ACTUALIZA (tipoAccion)
				tipoAccion = 2;		
				aCdgOrf = new Array;
				aNomOrf = new Array;
				aCdgFacFid = new Array;
				aNomFacFid = new Array;
				aInteres = new Array;
				
				var n:int = 0;
				var isNum:int = 0;
		
				for(var i:int = 0; i < acDatos.length; i++){
					aCdgOrf[n] = acDatos[i].CDGORF;
					aNomOrf[n] = acDatos[i].NOMORF;
					aCdgFacFid[n] = acDatos[i].CDGFACFID;
					aNomFacFid[n] = acDatos[i].NOMFACFID;
					aInteres[n] = acDatos[i].INTERES;
					
					if (acDatos[i].INTERES == ""){
						Alert.show(aNomOrf[n] + " - " + aNomFacFid[n] + ". No cuenta con un formato valido de interés." ,titulo,4,null,null,global.iInfo);
						return;
					}
					
					if(isNaN(acDatos[i].INTERES)){
						isNum = 1;
					}
					
					if(isNum == 1){
						Alert.show(aNomOrf[n] + " - " + aNomFacFid[n] + ". No cuenta con un formato valido de interés." ,titulo,4,null,null,global.iInfo);
						return;
					}
					n++;
				}
				
				initConexion();
				du.sCursor();
				global.bloquear();
										
				du.ejecutaWsMethod(wsMS,function(evt:ResultEvent):void{																				
					var res:String = evt.result.toString();
					
					du.rCursor();
					du.closeWs(wsMS);
					global.desbloquear();
						
					if(res.substr(0,1) == "1"){
						Alert.show("Se realizo el proceso correctamente",titulo,4,null,null,global.iInfo);
						buscarLista();
					}
					else
						Alert.show(res.substr(2,res.length-1),titulo,4,null,null,global.iAlert);
				}); 
				wsMS.setAccionParametrosGasPolInt.send(aCdgFacFid, cbxAnio.selectedItem.id, cbxMes.selectedItem.id, aInteres, tipoAccion);
			}
			
			private function initApp():void{
				global = new Globales();
				du = new Utils();
				titulo = "Parámetros de Póliza de Gastos por Interés";
				lblTitulo.text = titulo.toUpperCase();
				
				cbxMes.dataProvider = global.formatearMes();
                cbxAnio.dataProvider = global.formatearAnio();
			}
			
			private function initConexion():void{				
				wsMS = new WebService();			
				wsMS.wsdl = Application.application.wsStr.wsdlServ.toString();
				wsMS.loadWSDL();
			}
					
			public function calcula():void{
				var aDatos:ArrayCollection = dgDatos.dataProvider as ArrayCollection;
				impCap = 0;
				
				for (var i:int = 0; i < aDatos.length; i++){
					impCap += Number(aDatos[i].INTERES);
				}
				
				lblImpCap.text = global.formatearMoneda(impCap.toString());
			}
			
			public function validaMonto(event:Event):void{	
				numVal.source = TextInput(event.currentTarget);
				vResult = numVal.validate();

				if (vResult.type!=ValidationResultEvent.VALID)
                	TextInput(event.currentTarget).text = "0";
			}
		]]>
	</mx:Script>
	
	<mx:NumberValidator id="numVal" property="text" precision="2"
	        allowNegative="true" domain="real" decimalSeparator="." thousandsSeparator="," required="false"/>
	        
	<mx:Canvas backgroundAlpha="1.0" backgroundColor="#FFFFFF" width="476" height="575">
		<mx:Canvas id="cnvDetalle0" x="10" y="112" width="456" height="339" cornerRadius="10" borderStyle="solid" borderColor="#7B8B93" visible="true">
			<mx:DataGrid id="dgDatos" x="10" y="10" width="434" height="317" horizontalScrollPolicy="on"  sortableColumns="false" 
				draggableColumns="false" resizableColumns="false" verticalScrollPolicy="on" editable="true">											
				<mx:columns>
					<mx:DataGridColumn headerText="FONDEADOR" dataField="NOMORF" width="150" editable="false"/>
					<mx:DataGridColumn headerText="FIDEICOMISO" dataField="NOMFACFID" width="150" editable="false"/>
					<mx:DataGridColumn headerText="INTERES" dataField="INTERES" width="50" editable="true">
						<mx:itemEditor>
							<mx:Component>
								<mx:TextInput width="30" fontSize="10" verticalCenter="0" focusOut="outerDocument.calcula()" change="outerDocument.validaMonto(event)" restrict="0-9;."/> 
							</mx:Component>
						</mx:itemEditor>
					</mx:DataGridColumn>
				</mx:columns>
			</mx:DataGrid>
		</mx:Canvas>
		<mx:Label x="10" y="10" text="..." fontWeight="bold" fontSize="12" fontStyle="italic" id="lblTitulo" width="358.75"/>
		<mx:Canvas x="10" y="39" width="211" height="65" styleName="canvasMod">
			<mx:Label x="127" y="10" text="Año" width="72" height="20"/>
			<mx:ComboBox id="cbxAnio" labelField="id" x="127" y="28.5" width="72" change="buscarLista()"/>
			<mx:Label x="10" y="10.5" text="Mes" width="81" height="20"/>
			<mx:ComboBox id="cbxMes" labelField="nombre" x="10" y="29" width="111" change="buscarLista()"/>
		</mx:Canvas>
		<mx:Label x="10" y="459" text="0 Registro(s)" fontWeight="bold" fontSize="12" fontStyle="italic" width="358.75" id="lblRegistros"/>
		<mx:Button id="btnExportar" x="10" y="538" label="Exportar Excel" click="exportar()" enabled="false"/>
		<mx:Canvas x="402" y="69" width="64" height="35" cornerRadius="10" borderStyle="solid" borderColor="#7B8B93" visible="true">
			<mx:Button id="btnGuardar" x="10" y="3" icon="@Embed(source='assets/images/iconAccept.png')" click="enviar()" width="40" tabIndex="19"/>
		</mx:Canvas>
		<mx:Label x="10" y="488" text="Importe Capturado:" fontWeight="bold" fontSize="12" fontStyle="italic" width="122" id="lbl1"/>
		<mx:Label x="10" y="509" text="Importe Guardado:" fontWeight="bold" fontSize="12" fontStyle="italic" width="122" id="lbl0"/>
		<mx:Label x="132" y="488" text="$0.00" fontWeight="bold" fontSize="12" fontStyle="italic" width="334" id="lblImpCap"/>
		<mx:Label x="132" y="509" text="$0.00" fontWeight="bold" fontSize="12" fontStyle="italic" width="334" id="lblImpGua"/>
	</mx:Canvas>
</mx:Canvas>