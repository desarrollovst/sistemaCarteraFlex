<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:forms="forms.*" layout="absolute" width="518" 
	height="550" title="Edición" showCloseButton="true" close="cerrar()" xmlns:Forms="OPERAC.Forms.*"
	creationComplete="initApp()" creationPolicy="all">
	
	<mx:Script>
		<![CDATA[
			import Data.Permisos;
			import Data.EventAcred;
			import Data.DatosAcred;
			import Data.Globales;
			import Data.PdfExport;
			import Data.Utils;
			import mx.collections.ArrayCollection;
			import mx.containers.TitleWindow;	
			import mx.controls.Alert;
			import mx.core.Application;		
			import mx.core.UIComponent;
			import mx.managers.PopUpManager;
			import mx.effects.easing.Elastic;
			import mx.rpc.soap.WebService;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			
			[Bindable]
			private var info:DatosAcred;
			private var _xmlAcred:XML =  new XML();
			private var _xmlInegiEqu:XML =  new XML();
			
			public var wsMS:WebService;	
			public var wsReg:WebService;
			public var tipoAccion:int;
			public var band:Boolean;
			public var grupo:String;
			public var acred:String;
			public var titulo:String;
			private var du:Utils;
			private var global:Globales;
			private var permiso:Permisos;
			
			//variables que indican los permisos disponibles para el usuario
			public var consBuro:Boolean = new Boolean();
			
			public function cargaInfoAcred(cdgGrupo:String, nomGrupo:String, acred:String):void{
				var wsCat:WebService = new WebService();
				var Params:Array = new Array();
				tipoAccion = 2;
				this.acred = acred;
				txtGrupo.text = cdgGrupo + " " + nomGrupo;
				permisos();
				
				du.initWsCat(wsCat);
				du.sCursor();
				global.bloquear();
				
				du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
					_xmlAcred = new XML(evt.result);
							
					du.rCursor();
					du.closeWs(wsCat);
					global.desbloquear();
							
					if (_xmlAcred.elements().length() > 0){
						llenaRegistros();
					}
					else{
						global.desbloquear();
						Alert.show("Error en la carga de datos.",titulo,4,null,null,global.iAlert);
					}								
				});
				Params[0] = acred
				wsCat.getInfoAcred.send(1, Params);
			}
			
			public function cerrar():void{
				PopUpManager.removePopUp(this);
			}
			
			public function consultaBuro():void{
				initConexion();
				du.sCursor();
				
				global.bloquear();
											
				var titulo:String = "Consulta Reporte Crédito";
				var acred:String = formDPAcred.txtCodigo.text;
										
				du.ejecutaWsMethod(wsMS,function(evt:ResultEvent):void {											
					var res:String = evt.result.toString();
						
					du.rCursor();
					du.closeWs(wsMS);
					global.desbloquear();
													
					if(res.substr(0,1) == "1"){
						var consulta:String;
						var id:String = "&id=19";
						var codAcred:String = "&acred=" + acred;
						var usuario:String = "&usuario=" + global.obtenerUsuario();
						var nomUsuario:String = "&nomUsuario=" + global.obtenerNombreUsuario();
						var tipo:String = "&tipo=CC";
						
						consulta = global.urlPdf + id + codAcred + usuario + nomUsuario + tipo;					
						var pdfE:PdfExport = new PdfExport();
						pdfE.cargaPdf(consulta);
					}
					else{
						Alert.show(res,titulo,4,null,null,global.iAlert);
					}
				});
				wsMS.setAccionCDC.send(acred, global.obtenerUsuario());	
			}
			
			public function enviar():void{
				if(formDPAcred.obtieneBandCurp()){
					info = new DatosAcred();
					formDPAcred.enviarDatosAcred(info);
					formDirAcred.enviarDatosAcred(info);
					//formDirNegAcred.enviarDatosAcred(info);
					formOtroAcred.enviarDatosAcred(info);
					formPLDAcred.enviarDatosAcred(info);
					formBanco.enviarDatosAcred(info);
					validaFinal();
				}
				else
					Alert.show("El proceso de cálculo de CURP Y RFC se está ejecutando. Intente nuevamente cuando se hayan actualizado los datos.",titulo,4,null,null,global.iAlert);
			}
			
			public function guardaAcred():void{
				acred = info.codigo;
				initConexion();
				du.sCursor();
				global.bloquear();
				wsMS.addEventListener(ResultEvent.RESULT, setAccionAcred);
				wsMS.setAccionAcred.send(tipoAccion, global.obtenerUsuario(), this.grupo, 
											 info.codigo, "", info.nombre, info.segNombre, info.aPaterno, 
											 info.aMaterno, info.sexo, info.fecha, info.cdgPaisNac, 
											 info.cdgEntFedNac, info.cdgNac, info.rfc, info.curp, info.ife, 
											 info.calle, info.entreCalles, info.telefono, info.codPostal,
											 info.pais, info.cdgDirEntFed, info.cdgMun, info.cdgLoc, info.cdgCol,
										     info.edoCivil, info.nivelEsc, info.depend, info.marca, 
										     info.causa, info.enano, info.cantEnano, "", "",info.tipoPers,
										     info.origen, info.destino,/*, info.cdgDirEntFedNeg, info.cdgMunNeg,
										     info.cdgLocNeg, info.coloniaNeg, info.calleNeg, info.codPostalNeg,
										     info.entreCallesNeg, info.telefonoNeg, info.tipoVivienda,
										     info.noExt, info.noInt, info.noExtNeg, info.noIntNeg*/ info.banco,
										     info.clabe, info.cuenta);
			}
			
			public function initApp():void{
				du = new Utils();
				global = new Globales();
				permiso = new Permisos();
				titulo = "Mantenimiento de Acreditado";
				
				//formDirAcred.addEventListener("seleccionarDir", seleccionarDir);
			}
			
			public function initConexion():void{				
				wsMS = new WebService();			
				wsMS.wsdl = Application.application.wsStr.wsdlServ.toString();
				wsMS.loadWSDL();
			}	
			
			private function initConexionCat(wsCat:WebService):WebService{			
				wsCat.wsdl = Application.application.wsStr.wsdlCat.toString();
				wsCat.loadWSDL();
				return wsCat;
			}
			
			public function initConexionReg():void{				
				wsReg = new WebService();			
				wsReg.wsdl = Application.application.wsStr.wsdlReg.toString();
				wsReg.loadWSDL();

			}
			
			public function llenaRegistros():void{
				info = new DatosAcred();
				//Datos personales del Acreditado
				info.codigo = _xmlAcred.Table[0].CODIGO;
				info.nombre = _xmlAcred.Table[0].NOMBRE1;
				info.segNombre = _xmlAcred.Table[0].NOMBRE2;
				info.aPaterno = _xmlAcred.Table[0].PRIMAPE;
				info.aMaterno = _xmlAcred.Table[0].SEGAPE;
				info.sexo = _xmlAcred.Table[0].SEXO;
				info.fecha = _xmlAcred.Table[0].NACIMIENTO;
				info.cdgPaisNac = _xmlAcred.Table[0].NACIOPAI;
				info.cdgEntFedNac = _xmlAcred.Table[0].NACIOEF;
				info.cdgNac = _xmlAcred.Table[0].NACIONALIDAD;
				info.rfc = _xmlAcred.Table[0].RFC;	
				info.curp = _xmlAcred.Table[0].CURP;
				info.ife = _xmlAcred.Table[0].IFE;
				
				//Direccion del Acreditado
				info.calle = _xmlAcred.Table[0].CALLE;
				info.entreCalles = _xmlAcred.Table[0].ENTRECALLES;
				info.telefono = _xmlAcred.Table[0].TELEFONO;
				info.codPostal = _xmlAcred.Table[0].CDGPOSTAL;
				info.pais = _xmlAcred.Table[0].CDGPAI;
				info.cdgDirEntFed = _xmlAcred.Table[0].CDGEF;
				info.dirEntFed = _xmlAcred.Table[0].ENTFED;
				info.cdgMun = _xmlAcred.Table[0].CDGMU;
				info.municipio = _xmlAcred.Table[0].MUNIC;
 				info.cdgLoc = _xmlAcred.Table[0].CDGLO; 
				info.localidad = _xmlAcred.Table[0].LOC;
				info.cdgCol = _xmlAcred.Table[0].CDGCOL;
				info.colonia = _xmlAcred.Table[0].COL;
				info.tipoVivienda = _xmlAcred.Table[0].TIPOVIV;
				info.noExt = _xmlAcred.Table[0].NOEXT;
				info.noInt = _xmlAcred.Table[0].NOINT;
				
				//Otra información del Acreditado
				info.edoCivil = _xmlAcred.Table[0].EDOCIVIL;
				info.nivelEsc = _xmlAcred.Table[0].NIVESCOLAR;
				info.depend = _xmlAcred.Table[0].NODEPEND;
				info.nivelRiesgo = _xmlAcred.Table[0].NIVELRIESGO;
				info.marca = _xmlAcred.Table[0].MARCA;
				info.enano = _xmlAcred.Table[0].ENANO;
				info.cantEnano = _xmlAcred.Table[0].CANTENANO;
			
				//Informacion de PLD
				info.tipoPers = _xmlAcred.Table[0].CDGTIPOPERS;
				info.origen = _xmlAcred.Table[0].CDGORIREC;
				info.destino = _xmlAcred.Table[0].CDGDESREC;
				
				//Información de la dirección de Negocio
				info.calleNeg = _xmlAcred.Table[0].CALLE_NEG;
				info.entreCallesNeg = _xmlAcred.Table[0].ENTRECALLES_NEG;
				info.noExtNeg = _xmlAcred.Table[0].NOEXT_NEG;
				info.noIntNeg = _xmlAcred.Table[0].NOINT_NEG;
				info.telefonoNeg = _xmlAcred.Table[0].TELEFONO_NEG;
				info.codPostalNeg = _xmlAcred.Table[0].CDGPOSTAL_NEG;
				info.cdgDirEntFedNeg = _xmlAcred.Table[0].CDGEF_NEG;
				info.cdgMunNeg = _xmlAcred.Table[0].CDGMU_NEG;
				info.cdgLocNeg = _xmlAcred.Table[0].CDGLO_NEG;
				info.dirEntFedNeg = _xmlAcred.Table[0].NOMEF_NEG;
				info.municipioNeg = _xmlAcred.Table[0].NOMMU_NEG;
				info.localidadNeg = _xmlAcred.Table[0].NOMLO_NEG;
				info.coloniaNeg = _xmlAcred.Table[0].COLONIA_NEG;
				info.poblacionNeg = _xmlAcred.Table[0].POBLACION_NEG;
				
				info.banco = _xmlAcred.Table[0].CDGBANCO;
				info.clabe = _xmlAcred.Table[0].CLABE;
				info.cuenta = _xmlAcred.Table[0].NOCTABANCO;
			
				formDPAcred.init(info);
				formDirAcred.init(info);
				//formDirNegAcred.init(info);
				formOtroAcred.init(info);
				formPLDAcred.init(info);
				formBanco.init(info);
			}
			
			public function permisos():void{
				var perfil_id:String = Application.application.cadPerfil;
				
				if (permiso.permisosConsBuro(Application.application.PERFIL_ID)){
					consBuro = true;	
				}
				btnConsBuro.visible = consBuro;	
			}
			
			public function registraInfoAcred(cdgGrupo:String, nomGrupo:String):void{
				tipoAccion = 1;
				//ASIGNACION DE CODIGO DE GRUPO
				this.grupo = cdgGrupo;
				txtGrupo.text = cdgGrupo + " " + nomGrupo;
				info = null;
				formDPAcred.init(info);
				formDirAcred.init(info);
				//formDirNegAcred.init(info);
				formOtroAcred.init(info);
				formPLDAcred.init(info);
				formBanco.init(info);
			} 
			
			private function setAccionAcred(event:ResultEvent):void{
				wsMS.disconnect();
				du.rCursor();
				
				wsMS.removeEventListener(ResultEvent.RESULT, setAccionAcred);
				var res:String = event.result.toString();
				if(res.substr(0,1) == "1"){
					/*initConexion();
					du.sCursor();
											
					du.ejecutaWsMethod(wsMS,function(evt:ResultEvent):void {											
						var resQEQ:String = evt.result.toString();
							
						du.rCursor();
						du.closeWs(wsMS);
						
						if(resQEQ.substr(0,1) == "1"){
							initConexionReg();
							du.sCursor();
											
							du.ejecutaWsMethod(wsReg,function(evt:ResultEvent):void {											
								var resEnv:String = evt.result.toString();
								
								du.rCursor();
								du.closeWs(wsReg);
							
								Alert.show(resQEQ.substr(2,resQEQ.length -1),titulo,4,null,null,global.iAlert);*/
								global.desbloquear();
								cerrar();
							/*});
							wsReg.setEnviaEmail.send("","tupatrimoniofin@gmail.com",
													 "PEP y Listas Restringidas","Se han encontrado coincidencias en PEP y Listas Restingidas del acreditado: " + acred);		
						}
						else if(resQEQ.substr(0,1) == "2")
							cerrar();
						else
							Alert.show(resQEQ,titulo,4,null,null,global.iAlert);
					});
					//Metodo que Obtiene el estatus de la busqueda de coincidencias como PEP o Listas Negras
					wsMS.setAccionQEQ.send(acred, global.obtenerUsuario());*/
				}
				else if(res.substr(0,1) == "2"){
					global.desbloquear();
					cerrar();
				}
				else{
					global.desbloquear();
					Alert.show(res.substr(2,res.length -1),titulo,4,null,null,global.iAlert);
				}		
			}
			
			/*public function seleccionarDir(event:Event):void{
				if(formDirNegAcred.txtEntFed.text == ""){
					var idSepomex:String = formDirAcred.obtieneCodEntFed() + formDirAcred.obtieneCodMun() + formDirAcred.obtieneCodLoc();
					
					var wsCat:WebService = new WebService();
					var Params:Array = new Array();
					
					du.initWsCat(wsCat);
					du.sCursor();
					
					du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
						_xmlInegiEqu = new XML(evt.result);
								
						du.rCursor();
						du.closeWs(wsCat);
								
						if (_xmlInegiEqu.elements().length() > 0){
							formDirNegAcred.limpiaDatosDir();
							formDirNegAcred.cargaDirNeg(_xmlInegiEqu.Table[0]);
						}							
					});
					Params[0] = idSepomex;
					Params[1] = "";
					Params[2] = "";
					Params[3] = "";
					Params[4] = "";
					wsCat.getCatalogoGral.send(68, Params);
				}
			}*/
			
			public function validaDatosAcred(event:EventAcred):void{
				info = event.customProp;
			}
			
			public function validaFinal():void{
				if (info.guardaDatos == true && info.guardaDir == true && info.guardaOtros == true &&
					info.guardaPLD == true/* && info.guardaDirNeg == true*/ && info.guardaBanco == true){
					validaSituacionAcred();
				}
				else
					Alert.show("Debe capturar los datos requeridos.",titulo,4,null,null,global.iAlert);
			}
		
			//Funcion que verifica que el usuario no se encuentre 
			//registrado en una solicitud o prestamo vigente 
			public function validaSituacionAcred():void{
				if(tipoAccion == 2){
					var band:Boolean;
					initConexion();
					du.sCursor();
						
					du.ejecutaWsMethod(wsMS,function(evt:ResultEvent):void {											
						var res:String = evt.result.toString();
						
						du.rCursor();
						du.closeWs(wsMS);
						
						if(res.substr(0,1) == "1")
							guardaAcred();
						else
							Alert.show(res.substr(2,res.length -1),titulo,4,null,null,global.iAlert);
					});
					wsMS.getValidaSituacionAcred.send(acred, "G", global.obtenerUsuario());
				}
				else
					guardaAcred();
			}
		]]>
	</mx:Script>
	<mx:TabNavigator id="tabNav" width="496" height="419" x="10" y="52" creationPolicy="all">
		<mx:Canvas label="Datos Personales" width="100%" height="100%">
			<Forms:FormDatosPerAcred id="formDPAcred" x="26" height="382" width="440"/>
		</mx:Canvas>
		<mx:Canvas label="Dirección" width="100%" height="100%">	
			<Forms:FormDirAcred id="formDirAcred" x="36" height="370" width="420"/>
		</mx:Canvas>
		<!--<mx:Canvas label="Negocio" width="100%" height="100%">
			<Forms:FormDirNegAcred id="formDirNegAcred" x="36" height="370" width="420"/>
		</mx:Canvas>-->
		<mx:Canvas label="Otros Datos" width="100%" height="100%">	
			<Forms:FormOtroAcred id="formOtroAcred" x="46"/> 
		</mx:Canvas>
		<mx:Canvas label="PLD" width="100%" height="100%">
			<Forms:FormPLDAcred id="formPLDAcred" x="19.5" width="455" y="10"/>
		</mx:Canvas>
		<mx:Canvas label="Banco" width="100%" height="100%">
			<Forms:FormBanco id="formBanco" x="19.5" width="455" y="10"/>
		</mx:Canvas>
	</mx:TabNavigator>
	<mx:Button id="btnCancelar" x="462" y="478" icon="@Embed(source='assets/images/iconCancel.png')" click="cerrar()" width="40"/>
	<mx:Button id="btnAceptar" x="414" y="478" icon="@Embed(source='assets/images/iconAccept.png')" click="enviar()" width="40"/>
	<mx:Canvas x="101" y="7" width="310" height="37" styleName="canvasMod">
		<mx:Label x="13" y="7" text="Grupo Solidario:"/>
		<mx:TextInput id="txtGrupo" x="99" y="5" width="199" editable="false"/>
	</mx:Canvas>
	<mx:Image x="430" y="10" width="57" height="57" scaleContent="true">
		<mx:source>assets/images/user2.png</mx:source>
	</mx:Image>
	<mx:Button id="btnConsBuro" x="10" y="478" click="consultaBuro()" label="Consulta Rep Crédito" visible="false"/>
</mx:TitleWindow>