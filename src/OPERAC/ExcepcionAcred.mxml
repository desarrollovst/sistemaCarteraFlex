<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" showCloseButton="true" close="cerrar()" 
	width="572" height="394" title="Asignación de Excepción" verticalScrollPolicy="off" 
	horizontalScrollPolicy="off" xmlns:Data="Data.*">

	<!--Componente que permite seleccionar las excepciones asignadas por acreditado-->
	<mx:Script>
		<![CDATA[
			import mx.states.State;
			import Data.DatosSolic;
			import Data.Globales;
			import Data.Utils;
			import mx.collections.ArrayCollection;			
			import mx.controls.Alert;
			import mx.controls.CheckBox;
			import mx.core.Application;
			import mx.effects.easing.Elastic;
			import mx.events.IndexChangedEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.soap.WebService;

			public var _xmlAcred:XML = new XML();
			
			public var acredObj:ArrayCollection = new ArrayCollection();
			
			public var wsMS:WebService;
			public var contSel:int;	
			public var excepcion:String;		
			public var grupo:String;
			public var ciclo:String;
			public var tipo:int;
			private var global:Globales;
			private var du:Utils;
			
			private function calculaRegSel():void{
				var listaAcred:ArrayCollection = global.clone(dgAcred.dataProvider as ArrayCollection);
				var cont:int = 0;
				listaAcred.filterFunction = filtrarRegAcredSel;
				listaAcred.refresh();
				cont = listaAcred.length;
				contSel = cont; 
				lblCtrlReg.text = cont.toString() + " Acreditado(s) seleccionado(s)"; 
			}
			
			public function cerrar():void{
				PopUpManager.removePopUp(this);
			}
			
			private function filtrarRegAcred(item:Object):Boolean{
				if(item.CDGEXC == excepcion)
					return true;
				else
					return false; 
			}
			
			private function filtrarRegAcredSel(item:Object):Boolean{
				return item.REG;
			}
			
			private function filtrarArrayExc(item:Object):Boolean{
				if(item.CDGEXC.toString() == excepcion)
					return true;
				else 
					return false;
			}
			
			private function formateaAcred():void{
				var cont:int = _xmlAcred.elements().length();
				var oItem:Object;
				var item:Array = new Array();
				
				for (var i:int = 0; i < cont; i++){
				  	oItem = new Object();
					oItem.REG = false; 
					oItem.CDGCL = _xmlAcred.Table[i].CDGCL;
					oItem.NOMBRE = _xmlAcred.Table[i].NOMBRE_CL;
					oItem.OBSERV = "";	
					item.push(oItem);
				}
				acredObj = new ArrayCollection(item);
			}
			
			public function formateaRegAcred(arr:ArrayCollection):ArrayCollection{
				var listaAcred:ArrayCollection = global.clone(dgAcred.dataProvider as ArrayCollection);
				var registro:String = "";
				var oItem:Object;
				var item:Array = new Array();
				
				listaAcred.filterFunction = filtrarRegAcredSel;
				listaAcred.refresh();
				
				//Codigo que permite eliminar aquellos registros que coinciden 
				//con el tipo de excepcion
				arr.filterFunction = filtrarArrayExc;
				arr.refresh();
				arr.removeAll();
				arr.filterFunction = null
				arr.refresh();
				
				for (var i:int = 0; i < listaAcred.length; i++){
					oItem = new Object();
					oItem.CDGEXC = excepcion;
					oItem.CDGCL = listaAcred[i].CDGCL;
					oItem.OBSERV = listaAcred[i].OBSERV;
					item.push(oItem);
				}
				arr.source = arr.source.concat(item);
				return arr;
			}
			
			public function init(excepcion:String, grupo:String, ciclo:String, tipo:int, arr:ArrayCollection = null):void{
				var wsCat:WebService = new WebService;
				var params:Array = new Array;
				global = new Globales();
				du = new Utils();
				this.excepcion = excepcion;
				this.grupo = grupo;
				this.ciclo = ciclo;
				this.tipo = tipo;
				contSel = 0;
				
				du.initWsCat(wsCat);
				du.sCursor();
				global.bloquear();
				
				du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
					_xmlAcred = XML(evt.result.toString());
					
					du.rCursor();
					du.closeWs(wsCat);
					global.desbloquear();
						
					if(_xmlAcred.elements().length() > 0){
						formateaAcred();
						dgAcred.dataProvider = acredObj;
						if(tipo == 2){
							arr.filterFunction = filtrarRegAcred;
							arr.refresh();
							for(var i:int = 0; i < acredObj.length; i++){
								for(var j:int = 0; j < arr.length; j++){
									if(acredObj[i].CDGCL.toString() == arr[j].CDGCL.toString()){
										acredObj[i].REG = true;
										acredObj[i].OBSERV = arr[j].OBSERV;
										break;	
									}
								}
							}
							calculaRegSel();
						}
					}
				});
				params[0] = grupo;
				params[1] = ciclo;
				wsCat.getListado.send(3, params);				
			}
			
			public function initConexion():void{				
				wsMS = new WebService();			
				wsMS.wsdl = Application.application.wsStr.wsdlServ.toString();
				wsMS.loadWSDL();
			}

			public function seleccionarRegAcred(event:Event):void{
				var ind:int = dgAcred.selectedIndex;
				var vScroll:Number = dgAcred.verticalScrollPosition;
				acredObj[ind].REG = CheckBox(event.currentTarget).selected;
				calculaRegSel();
			}
					
			//Boton que selecciona todos los acredores de la lista -- Ricardo Diaz -- 17/05/2016		
			private function seleccionarTodos(event:MouseEvent):void{		
				for(var i:int = 0; i < acredObj.length; i++)
					acredObj[i].REG = true;
				dgAcred.dataProvider = acredObj;
				calculaRegSel();
			}
		]]>
	</mx:Script>
	
	<mx:Button x="490.5" y="318" label="Cerrar" click="cerrar()"/>
	<mx:Button x="354.5" y="318" label="Seleccionar Todos" click="seleccionarTodos(event)"/>
	<Data:RowColorDataGrid id="dgAcred" x="17.5" y="10" width="537" height="300" alpha="1.0" sortableColumns="true" 
		horizontalScrollPolicy="auto" editable="true">
		<Data:columns>
			<mx:DataGridColumn headerText="" dataField="REG" textAlign="center" rendererIsEditor="true" width="30" editorDataField="selected">
				<mx:itemRenderer>
					<mx:Component>
			  			<mx:CheckBox change="outerDocument.seleccionarRegAcred(event)" width="25" fontSize="10" verticalCenter="0" /> 
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn headerText="ACREDITADO" dataField="CDGCL" width="90"/>
			<mx:DataGridColumn headerText="NOMBRE ACREDITADO" dataField="NOMBRE" width="200"/>
			<mx:DataGridColumn headerText="OBSERVACION" editable="true" headerWordWrap="true" dataField="OBSERV" width="150">
				<mx:itemEditor>
					<mx:Component>
						<mx:TextInput width="30" fontSize="10" verticalCenter="0"/> 
					</mx:Component>
				</mx:itemEditor>
			</mx:DataGridColumn>
		</Data:columns>
	</Data:RowColorDataGrid>
	<mx:Label id="lblCtrlReg" x="17.5" y="319" width="268.05" fontWeight="bold" fontStyle="italic" fontSize="12"/>
</mx:TitleWindow>