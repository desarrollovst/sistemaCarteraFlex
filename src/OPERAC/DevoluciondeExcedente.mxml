<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="initApp()" width="100%" 
	xmlns:forms="forms.*" xmlns:Data="Data.*" horizontalScrollPolicy="off" creationPolicy="all" 
	xmlns:Administracion="Administracion.*" height="100%">
	
	<!--Componente de Devolucion de Excedente-->
	<mx:Script>
		<![CDATA[
			import Data.Permisos;
			import Data.Globales;
			import Data.Utils;
			import mx.collections.ArrayCollection;	
			import mx.controls.Alert;
			import mx.controls.ComboBox;
			import mx.core.Application;
			import mx.effects.easing.Elastic;
			import mx.events.CloseEvent;	
			import mx.events.DataGridEvent;				
			import mx.events.FlexEvent;
			import mx.events.ListEvent;	
			import mx.events.ValidationResultEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.Fault;
			import mx.rpc.soap.WebService;
			import mx.rpc.xml.SimpleXMLDecoder;
			import mx.utils.ArrayUtil;  
			          
			public var _xmlAcred:XML = new XML();	            
			public var _xmlInfo:XML = new XML();
			public var _xmlCta:XML = new XML();
			public var _xmlMesa:XML = new XML();
			public var _xmlChq:XML = new XML();
			
			public var wsMS:WebService;	
			public var titulo:String;
			public var rep:String;
			public var consMesa:Boolean;
			public var secPago:String;
			public var banco:String;
			public var cdgclns:String;
			public var cdgclnsRel:String; 
			public var ciclo:String;
			public var cicloRel:String;
			public var tipoCred:String;
			public var coord:String;
			public var estatus:String;
			private var du:Utils;
			private var global:Globales;
			private var permiso:Permisos;
			private var vResult:ValidationResultEvent;
		
			public var acredObj:ArrayCollection = new ArrayCollection();
							
			public function activarControles():void{
				if(permiso.permisosBusqAcred(Application.application.PERFIL_ID) == true){
					txtCodAcred.editable = true;
					btnBusqAcred.visible = true;
				}
			}				
							
			public function actualizarAcred(event:Event):void{
				var comAcredGrupo:MttoBusqAcredGrupo = event.currentTarget as MttoBusqAcredGrupo;
				txtCodAcred.text = comAcredGrupo.obtenerCodigo();
				txtAcred.text = comAcredGrupo.obtenerNombre();	
				comAcredGrupo.removeEventListener("enviar", actualizarAcred);			
			}
			
			public function actualizarCta(event:Event):void{
				var comMttoCta:MttoCuenta = event.currentTarget as MttoCuenta;
				txtCodCuenta.text = comMttoCta.dgCuenta.selectedItem.CODIGO;	
				buscarCuenta();		
			}
			
			public function actualizarRangoCheque():void{
				if (_xmlChq.elements().length() > 0){
					var cheque:Number = Number(_xmlChq.Table[0].CHQSIG);
					txtCheque.text = cheque.toString();
				}
				else
					txtCheque.text = "";
			}
			
			public function buscarAcred(event:FlexEvent):void{
				if(event.currentTarget.text != "" && event.currentTarget.length == 6){ 
					var wsCat:WebService = new WebService;
					var params:Array = new Array;
					var acred:String = event.currentTarget.text;
					var grupo:String = txtCodigo.text;
					
					du.initWsCat(wsCat);
					du.sCursor();
						
					du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
						_xmlAcred = new XML(evt.result);
							
						du.rCursor();
						du.closeWs(wsCat);
								
						if(_xmlAcred.elements().length() > 0){
							txtAcred.text = _xmlAcred.Table[0].NOMBRE_CL;							
						}
						else{
							Alert.show("Código de cliente incorrecto.\n\nVerifique el dato capturado.",titulo,4,null,null,global.iAlert);
							txtAcred.text = "";
						}					
					});
					//metodo que verifica que el cliente pertenezca al grupo
					params[0] = grupo;
					params[1] = acred;
					params[2] = "";
					wsCat.getInfoAcred.send(3, params);
				}
				else{
					Alert.show("Capture el código de acreditado.",titulo,4,null,null,global.iAlert);
					txtAcred.text = "";
				}
			}
			
			public function buscarCuenta():void{
				var wsCat:WebService = new WebService;
				var params:Array = new Array;
				
				if (txtCodCuenta.text != ""){
					txtCuenta.setFocus();
					du.initWsCat(wsCat);
					du.sCursor();
					global.bloquear();
					
					du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {																				
						_xmlCta = new XML(evt.result);
							
						du.rCursor();
						du.closeWs(wsCat);
						global.desbloquear();
						
						if (_xmlCta.elements().length() > 0){
							banco = _xmlCta.Table[0].CDGIB;
							txtCuenta.text = _xmlCta.Table[0].BANCO;
							buscarSigCheque();
						}
						else{
							txtCuenta.text = "";
							Alert.show("No se ha encontrado información de la cuenta.\n\nVerifique los datos capturados.",titulo,4,null,null,global.iAlert);
						}
					});
					params[0] = "4";
					params[1] = txtCodCuenta.text;
					params[2] = "";
					params[3] = global.obtenerUsuario();
					params[4] = coord;
					wsCat.getInfoRegistro.send(3, params);
				}	
			}
			
			public function buscarDevExc():void{
				var wsCat:WebService = new WebService;
				var params:Array = new Array;
				
				if (txtCodigo.text != "" && txtCiclo.text != "" && cboTipoCred.selectedIndex > 0){
					cdgclns = txtCodigo.text;
					ciclo = txtCiclo.text;
					tipoCred = cboTipoCred.selectedItem.id;
					btnBuscar.setFocus();
					
					limpiarInfo();
					
					du.initWsCat(wsCat);
					du.sCursor();
					global.bloquear();
					
					du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {																				
						_xmlInfo = new XML(evt.result);
						
						du.rCursor();
						du.closeWs(wsCat);
						global.desbloquear();
						
						if (_xmlInfo.elements().length() > 0){
							lblNombre.text = _xmlInfo.Table[0].NOMBRE;
							txtMonto.text = _xmlInfo.Table[0].MONTO;
							lblDev.text = _xmlInfo.Table[0].DESCRIPCION;
							dtfFecha.selectedDate = global.convCadenaFecha(_xmlInfo.Table[0].FECHA);
							coord = _xmlInfo.Table[0].CDGCO;
							ciclo = _xmlInfo.Table[0].CICLO;
							secPago = _xmlInfo.Table[0].SECMOV;
							estatus = _xmlInfo.Table[0].ESTATUS;
							consMesa = Boolean(Number(_xmlInfo.Table[0].CONSMESA));
							cdgclnsRel = _xmlInfo.Table[0].CDGCLNSREL;
							cicloRel = _xmlInfo.Table[0].CICLOREL;
							
							txtCodCuenta.editable = true;
							btnBusqCta.visible = true;
							
							if(consMesa == true){
								activarControles();
								
								du.initWsCat(wsCat);
								du.sCursor();
									
								du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
									_xmlMesa = XML(evt.result.toString());
									
									du.rCursor();
									du.closeWs(wsCat);		
									
									if(_xmlMesa.elements().length() > 0){
										txtCodAcred.text = _xmlMesa.Table[0].TESORERO;
										txtAcred.text = _xmlMesa.Table[0].NOMTESO;
									}
									else
										Alert.show("No se encontró el registro del tesorero del grupo.\n\nVerifique los datos seleccionados.",titulo,4,null,null,global.iAlert);
								});
								if(cdgclnsRel == "" && cicloRel == ""){
									params[0] = cdgclns;
									params[1] = ciclo;
								}
								else{
									params[0] = cdgclnsRel;
									params[1] = cicloRel;
								}	
								//Obtiene informacion de la mesa directiva
								wsCat.getInfoGrupo.send(8, params);
							}
							else{
								txtCodAcred.text = cdgclns;
								txtAcred.text = lblNombre.text;
							}
						}
						else{
							lblNombre.text = "";
							Alert.show("No se ha encontrado información del grupo.\n\nVerifique los datos capturados.",titulo,4,null,null,global.iAlert);
						}
					});
					params[0] = cdgclns;
					params[1] = ciclo;
					params[2] = tipoCred;
					params[3] = global.obtenerUsuario();
					//Obtiene informacion de la devolucion de Excedente por imprimir
					wsCat.getInfoGeneral.send(6, params);
				}	
			}
			
			public function buscarSigCheque():void{
				if(txtCodCuenta.text != "" && txtCuenta.text != ""){
					var wsCat:WebService = new WebService;
					var params:Array = new Array;
					var codCuenta:String = txtCodCuenta.text;
					
					du.initWsCat(wsCat);
					du.sCursor();
								
					du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {																				
						_xmlChq = new XML(evt.result);
							
						du.rCursor();
						du.closeWs(wsCat);
						
						actualizarRangoCheque();
					});
					params[0] = codCuenta;
					params[1] = coord;
					wsCat.getInfoRegistro.send(5, params);
				}
			}
			
			public function enviar():void{
				if(valida()){
					var cuenta:String = txtCodCuenta.text;
					var fecha:String = dtfFecha.text;
					var codAcred:String = txtCodAcred.text;
					var acred:String = txtAcred.text;
					var cheque:String = txtCheque.text;
					var monto:Number = Number(txtMonto.text);
					
					initConexion();
					du.sCursor();
							
					du.ejecutaWsMethod(wsMS,function(evt:ResultEvent):void {																				
						var res:String = evt.result.toString();
						
						if(res.substr(0,1) == "1"){	
							
							du.ejecutaWsMethod(wsMS,function(evt:ResultEvent):void {																				
							var res:String = evt.result.toString();
						
								du.rCursor();
								du.closeWs(wsMS);
							
								if(res.substr(0,1) == "1"){	
									var id:String = "&id=" + rep;
									var grupo:String = "&grupo=" + cdgclns;
									var consCiclo:String = "&ciclo=" + ciclo;
									var consClns:String = "&clns=" + tipoCred;
									var consCuenta:String = "&cuenta=" + cuenta;
									var consCheque:String = "&chqIni=" + cheque;
									var consulta:String = global.urlPdf + id + grupo + consCiclo + consClns + consCuenta + consCheque;
									Application.application.muestraPdf(consulta);
									
									limpiar();
									limpiarInfo();
								}
								else{
									Alert.show(res.substr(2,res.length-1),titulo,4,null,null,global.iAlert);
								}
							});
							//Metodo que actualiza el registro de devolucion de Excedente
							wsMS.setDevExcedente.send(cdgclns, ciclo, tipoCred, Number(secPago), fecha, monto, cuenta, cheque, 
													  codAcred, acred, global.obtenerUsuario());
						}
						else{
							Alert.show(res.substr(2,res.length-1),titulo,4,null,null,global.iAlert);
							du.rCursor();
							du.closeWs(wsMS);
						}
					});
					wsMS.getValidaRangoCheques.send(coord, cuenta, cheque);
				}
			}
			
			public function initApp():void{
				permiso = new Permisos();
				global = new Globales();
				du = new Utils();
				rep = "40";
				titulo = "Devolución de Excedente";
				lblTitulo.text = titulo.toUpperCase();
				cboTipoCred.dataProvider = global.tipoCred;
				limpiar();
			}
			
			public function initConexion():void{				
				wsMS = new WebService();			
				wsMS.wsdl = Application.application.wsStr.wsdlServ.toString();
				wsMS.loadWSDL();
			}			
			
			private function limpiar():void{
				txtCodigo.text = "";
				txtCiclo.text = ""; 
				cboTipoCred.selectedIndex = 1;
				cdgclns = "";
				ciclo = "";
				tipoCred = "";
			}
			
			private function limpiarInfo():void{
				lblNombre.text = "";
				txtCodAcred.text = "";
				txtAcred.text = "";
				txtCodAcred.editable = false;
				txtMonto.text = "";
				btnBusqAcred.visible = false;
				dtfFecha.enabled = false;
				lblDev.text = "";
				txtCodCuenta.text = "";
				txtCuenta.text = "";
				txtCheque.text = "";
				txtCodCuenta.editable = false;
				btnBusqCta.visible = false;
			}
			
			public function mostrarBusqAcred():void{
				var comAcredGrupo:MttoBusqAcredGrupo = new MttoBusqAcredGrupo();
				comAcredGrupo = MttoBusqAcredGrupo(PopUpManager.createPopUp(this,MttoBusqAcredGrupo,true));
				PopUpManager.centerPopUp(comAcredGrupo);
				comAcredGrupo.init(cdgclnsRel);
				comAcredGrupo.addEventListener("enviar", actualizarAcred);
			}
			
			public function muestraFormCta():void{
				var comMttoCta:MttoCuenta = new MttoCuenta();
				comMttoCta = MttoCuenta(PopUpManager.createPopUp(this,MttoCuenta,true));
				comMttoCta.init(5);
				comMttoCta.addEventListener("enviar", actualizarCta);
				PopUpManager.centerPopUp(comMttoCta);
			}
			
			public function valida():Boolean{
				if(txtMonto.text == "" || Number(txtMonto.text) <= 0){
					Alert.show("Debe capturar el monto de la devolución.",titulo,4,null,null,global.iAlert);
					return false;
				}
				if(txtCodAcred.text == "" || txtAcred.text == ""){
					Alert.show("Debe capturar los datos del cliente.",titulo,4,null,null,global.iAlert);
					return false;
				}
				if(txtCuenta.text == ""){
					Alert.show("Debe seleccionar la Cuenta Bancaria.",titulo,4,null,null,global.iAlert);
					return false;
				}
				if(txtCheque.text == ""){
					Alert.show("Debe capturar el número de cheque.",titulo,4,null,null,global.iAlert);
					return false;
				}
				return true;
			}
			
			public function validaMonto(event:Event):void{	
				numVal.source = TextInput(event.currentTarget);
				vResult = numVal.validate();

				if (vResult.type!=ValidationResultEvent.VALID)
                	TextInput(event.currentTarget).text = "";
			}
		]]>
	</mx:Script>
	
	<mx:NumberValidator id="numVal" property="text" precision="2"
        allowNegative="true" domain="real" decimalSeparator="." thousandsSeparator="," required="false"/>
	
	<mx:Canvas backgroundAlpha="1.0" backgroundColor="#FFFFFF" width="610" height="370">
		<mx:Canvas id="cnvDetalle" x="10" y="84" width="590" height="240.70001" styleName="canvasMod" visible="true" enabled="true">
			<mx:Label id="lblFecha" x="98.65" y="75.95" text="Fecha:" width="50" textAlign="right"/>
			<mx:Label id="lblEtiqCuenta" x="98.65" y="168.9" text="Cuenta:" width="50" textAlign="right"/>
			<mx:Label id="lblMonto" x="98.65" y="107.95" text="Monto:" width="50" textAlign="right"/>
			<mx:Label id="lblCheque" x="58.65" y="200.9" text="Num. Cheque:" width="90" textAlign="right"/>
			<mx:Label id="lblEtqDev" x="33.5" y="138.9" text="Causa de Devolución:" width="115.15" textAlign="right"/>
			<mx:Button id="btnBusqAcred" x="495.15" y="42.95" icon="@Embed(source='assets/images/iconBusq.png')" toolTip="Buscar Cliente" click="mostrarBusqAcred()" visible="false"/>
			<mx:DateField id="dtfFecha" x="156.65" y="73.95" width="100" enabled="false"/>
			<mx:TextInput id="txtMonto" x="156.65" y="105.95" width="100" maxChars="9" restrict="0-9;." change="validaMonto(event)" editable="false"/>
			<mx:TextInput id="txtCodCuenta" x="156.65" y="166.9" width="45" maxChars="2" restrict="0-9" enter="buscarCuenta()" editable="false"/>
			<mx:TextInput id="txtCuenta" x="222.65" y="165.9" width="231.5" editable="false"/>
			<mx:Button id="btnBusqCta" x="462.15" y="166.9" icon="@Embed(source='assets/images/iconBusq.png')" click="muestraFormCta()" toolTip="Buscar Cuenta" visible="false"/>
			<mx:TextInput id="txtCheque" x="156.65" y="198.9" width="100" maxChars="2" editable="false"/>
			<mx:Label id="lblEtqNombre" x="93.65" y="13" text="Nombre:" fontSize="12" fontWeight="bold" fontStyle="italic" textAlign="right"/>
			<mx:Label id="lblNombre" x="156.65" y="13" width="247.5" fontSize="12" fontWeight="bold" fontStyle="italic"/>
			<mx:Label x="98.65" y="44" text="Cliente:" width="50" textAlign="right"/>
			<mx:Label x="224.65" y="43.95" text="Nombre:" width="54" textAlign="right"/>
			<mx:TextInput id="txtCodAcred" x="156.65" y="42" width="60" maxChars="6" restrict="0-9" enter="{buscarAcred(event)}" editable="false"/>
			<mx:TextInput id="txtAcred" x="286.65" y="41.95" width="200.5" editable="false"/>
			<mx:Label id="lblDev" x="156.65" y="137.95" width="297.5" fontSize="12" fontWeight="bold" fontStyle="italic"/>
		</mx:Canvas>
		<mx:Canvas x="508.5" y="39" width="81.5" height="37" styleName="canvasMod" visible="true">
			<mx:Button id="btnBuscar" x="8" y="3" icon="@Embed(source='assets/images/iconBusq.png')" click="buscarDevExc()" toolTip="Buscar Crédito" />
		</mx:Canvas>
		<mx:Canvas x="10" y="39" width="490.5" height="37" styleName="canvasMod" visible="true">
			<mx:Label id="lblCodGrupo" x="47.5" y="8" text="Código:" textAlign="right"/>
			<mx:Label id="lblCiclo" x="178.5" y="8" text="Ciclo:" textAlign="right"/>
			<mx:Label id="lblTipoCred" x="277.45" y="8" text="Tipo:" textAlign="right"/>
			<mx:TextInput id="txtCodigo" x="96.5" y="6" width="68" enter="buscarDevExc()" maxChars="6" restrict="0-9"/>
			<mx:TextInput id="txtCiclo" x="217.5" y="6" width="40.5" maxChars="2" restrict="0-9" enter="buscarDevExc()"/>
			<mx:ComboBox id="cboTipoCred" x="316.45" y="5" width="124.5" labelField="desc" enabled="false"></mx:ComboBox>
		</mx:Canvas>
		<mx:Label id="lblTitulo" x="10" y="10" width="380.5" fontSize="12" fontWeight="bold" fontStyle="italic"/>
		<mx:Button id="btnAceptar" x="520" y="332.7" icon="@Embed(source='assets/images/iconAccept.png')" click="enviar()" enabled="true" toolTip="Aceptar" width="80"/>
	</mx:Canvas>
</mx:Canvas>