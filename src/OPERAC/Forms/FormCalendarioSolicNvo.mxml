<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="670" height="204" creationPolicy="all" xmlns:Data="Data.*">
	<mx:Metadata>
		[Event(name="enviarDatosSolic", type="Data.EventSolic")]
	</mx:Metadata>
	
	<mx:Script>
		<![CDATA[
			import Data.DatosSolic;
			import Data.EventSolic;
			import Data.Globales;
			import Data.Utils;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.Application;
			import mx.events.ValidationResultEvent;			
			import mx.managers.PopUpManager;
			import mx.rpc.soap.WebService;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.validators.Validator;
			
			private var _xmlHora:XML =  new XML();
			
			public var horaObj:ArrayCollection = new ArrayCollection();
			public var minObj:ArrayCollection = new ArrayCollection();
			
			public var datos:DatosSolic = new DatosSolic();
			
			public var wsMS:WebService;   					 //variable utilizada para las llamadas asincronas de WS
			public var tipoAccion:int;
			public var estatus:String;
			public var reunion:String;
			public var dia:String;
			private var du:Utils;
			private var global:Globales;
			private var vResult:ValidationResultEvent;
			
			public function activaControles(_xmlControl:XML):void{
				var periodicidad:String = _xmlControl.Table[0].FIJAPER;
				var multPer:String = _xmlControl.Table[0].PERIODICIDAD;
				var pagoCap:String = _xmlControl.Table[0].FIJAPGC;
				var pagoInt:String = _xmlControl.Table[0].FIJAPGI;
				var plazo:String = _xmlControl.Table[0].FIJAPLA;
				//Periodicidad de pago
				if(periodicidad == "S")
					cnvPeriodicidad.enabled = false;
				else if(periodicidad == "N")
					cnvPeriodicidad.enabled = true;
				//Multiplos de periodicidad
				if(multPer == "S")
					cnvMultPer.enabled = false;
				else if(multPer == "N")
					cnvMultPer.enabled = true;
				//Periodos de gracia Pago Capital
				if(pagoCap == "S")
					pagoCapital.enabled = false;
				else if(pagoCap == "N")
					pagoCapital.enabled = true;
				//Periodos de gracia Pago Interes 
				if(pagoInt == "S")
					pagoInteres.enabled = false;
				else if(pagoInt == "N")
					pagoInteres.enabled = true;
				//Plazo
				if(plazo == "S"){
					duracion.enabled = false;
				}
				else if(plazo == "N"){
					duracion.enabled = true;
				}
			}
			
			//funcion que actualiza la informacion del dia de pago
			public function actualizaDiaJunta(dia:String):void{
				if(dia != "")
					this.dia = dia;
				datos.diaJunta = this.dia;
			}
			
			//funcion que actualiza la hora de reunion 
			public function actualizaHora(hora:String, min:String):void{
				var i:int;
				for(i = 0; i < horaObj.length; i++){
					if(horaObj[i].hora == hora){
						cboHora.selectedIndex = i;
						break;
					}	
				}
				for(i = 0; i < minObj.length; i++){
					if(minObj[i].min == min){
						cboMinuto.selectedIndex = i;
						break;
					}	
				}	
			}
			
			//funcion que actualiza la informacion del dia de reunion
			public function actualizaReunion(dia:String):void{
				if(dia != "")
					this.reunion = dia;
				diaJunta.selectedValue = this.reunion;
			}
			
			public function cargaParamsProd(_xmlParam:XML):void{
				periodicidad.selectedValue = _xmlParam.Table[0].PERIODICIDAD;
				txtMultiplos.text = _xmlParam.Table[0].MULTPER;
				txtPagoCapital.text = _xmlParam.Table[0].PERIGRCAP;
				txtPagoInteres.text = _xmlParam.Table[0].PERIGRINT;
				txtDuracion.text = _xmlParam.Table[0].PLAZO;
			}
			
			public function desactivaControles():void{
				cnvPeriodicidad.enabled = false;
				cnvDuracion.enabled = false;
				cnvPagos.enabled = false;
				cnvMultPer.enabled = false;
			}
			
			public function desactivaContHorario():void{
				cnvDiaJunta.enabled = false;
				cnvHorario.enabled = false;
			}
			
			public function enviarDatosSolic(formData:DatosSolic):void{
				var invalidArray:Array = Validator.validateAll([horaV, minutoV]);
				var j:int;
				
				if(invalidArray.length == 0 && periodicidad.selection != null && diaJunta.selection != null){	
					formData.periodicidad = periodicidad.selectedValue.toString();
					formData.reunion = diaJunta.selectedValue.toString();
					formData.diaJunta = datos.diaJunta;
					formData.diasGracia = Number(txtDiasGracia.text);
					formData.duracion  = Number(txtDuracion.text);
					formData.multPerio = Number(txtMultiplos.text);
					formData.horario = cboHora.text + ":" + cboMinuto.text; 
					formData.pagoCapital = Number(txtPagoCapital.text);
					formData.pagoInteres = Number(txtPagoInteres.text);
					formData.guardaCalendario = true;
				}
				else{
					formData.guardaCalendario = false;
				}
				var event:EventSolic = new EventSolic("enviarDatosSolic", formData);
				dispatchEvent(event);
			}
			
			private function formateaHorario():void{
				var i:int;
				var oItem:Object;
				var horaMin:int = _xmlHora.Table[0].HORAMIN; 
				var horaMax:int = _xmlHora.Table[0].HORAMAX;
				var itemHr:Array = new Array();
				var itemMin:Array = new Array();
				
				oItem = new Object();
				oItem.id = "0";	
				oItem.hora = "--";
				itemHr.push(oItem);
				
				for (i = horaMin; i <= horaMax; i++){
					oItem = new Object();
					oItem.id = global.insertarCaracter(i.toString(),"0",2 - i.toString().length,1); 
					oItem.hora = global.insertarCaracter(i.toString(),"0",2 - i.toString().length,1);  	
					itemHr.push(oItem);
				}
				horaObj = new ArrayCollection(itemHr);
				
				oItem = new Object();
				oItem.id = "0";	
				oItem.min = "--";
				itemMin.push(oItem);
				
				for (i = 0; i < 60; i++){
					oItem = new Object();
					oItem.id = global.insertarCaracter(i.toString(),"0",2 - i.toString().length,1); 
					oItem.min = global.insertarCaracter(i.toString(),"0",2 - i.toString().length,1);  	
					itemMin.push(oItem);
				}
				minObj = new ArrayCollection(itemMin);
			}
			
			public function init(info:DatosSolic, tipoAccion:int, estatus:String):void{
				var wsCat:WebService = new WebService;
				var params:Array = new Array;
				this.tipoAccion = tipoAccion;
				this.estatus = estatus;
				global = new Globales();
				du = new Utils();
				
				var diasFecEnt:int;
				var fec:Date = global.obtenerFechaSistema();
				var fecEnt:Date; 
				
				du.initWsCat(wsCat);
				du.sCursor();
				
				du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
					diasFecEnt = int(evt.result.toString());
					
					du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
						_xmlHora = XML(evt.result.toString());
					
						du.rCursor();
						du.closeWs(wsCat);
					
						fecEnt = new Date(fec.getFullYear(), fec.getMonth(), fec.getDate() + diasFecEnt);
						formateaHorario();
						cboHora.dataProvider = horaObj;
						cboMinuto.dataProvider = minObj;
					
						if(tipoAccion == 1){
							actualizaReunion(fecEnt.getDay().toString());
							actualizaDiaJunta(fecEnt.getDay().toString());
						}
						if (info != null){
							datos = info;
							
							if(info.situacion == 'A' || info.situacion == 'R' || estatus == "evaluacion" || estatus == "entrega")
								desactivaControles();
							
							if(estatus == "evaluacion" || estatus == "entrega")
								desactivaContHorario();
							
							periodicidad.selectedValue = info.periodicidad;
							actualizaReunion(info.reunion);
							actualizaDiaJunta(info.diaJunta);
							actualizaHora(info.horario.substr(0,2), info.horario.substr(3,2));
							txtDiasGracia.text = info.diasGracia.toString();
							txtDuracion.text = info.duracion.toString();
							txtPagoCapital.text = info.pagoCapital.toString();
							txtPagoInteres.text = info.pagoInteres.toString();
							txtMultiplos.text = info.multPerio.toString();
						}	
					});
					//Metodo que permite conocer el horario minimo y maximo de reunion
					wsCat.getCatalogoGral.send(15, params)							
				});
				wsCat.getCatalogoGral.send(13, params);
			}
			
			public function initConexion():void{				
				wsMS = new WebService();			
				wsMS.wsdl = Application.application.wsStr.wsdlServ.toString();
				wsMS.loadWSDL();
			}		
			
			public function validaHora(event:Event):void{
				horaVal.source = TextInput(event.currentTarget);
				vResult = horaVal.validate();

				if (vResult.type!=ValidationResultEvent.VALID)
                	TextInput(event.currentTarget).text = "";
			}
			
			public function validaMinuto(event:Event):void{
				minutoVal.source = TextInput(event.currentTarget);
				vResult = minutoVal.validate();

				if (vResult.type!=ValidationResultEvent.VALID)
                	TextInput(event.currentTarget).text = "";
			}
	]]>
	</mx:Script>
	
	<mx:NumberValidator id="horaV" source="{cboHora}" property="selectedIndex"
	 minValue="1" triggerEvent="" lowerThanMinError="Hora Requerida"/>
	 
	 <mx:NumberValidator id="minutoV" source="{cboMinuto}" property="selectedIndex"
	 minValue="1" triggerEvent="" lowerThanMinError="Minutos Requeridos"/>
	
	<mx:NumberValidator id="horaVal" property="text" maxValue="23" minValue="0"
        allowNegative="false" required="false" lowerThanMinError="Capture la hora correctamente" exceedsMaxError="Capture la hora correctamente"/>
        
    <mx:NumberValidator id="minutoVal" property="text" maxValue="59" minValue="0" 
        allowNegative="false" required="false" lowerThanMinError="Capture los minutos correctamente" exceedsMaxError="Capture los minutos correctamente"/>

	<!--<mx:StringValidator id="horaV" source="{txtHora}" property="text" minLength="2" maxLength="2"  tooShortError="Formato incorrecto" required="true" requiredFieldError="Horario de junta requerido"/>
	<mx:StringValidator id="minutoV" source="{txtMinuto}" property="text" minLength="2" maxLength="2"  tooShortError="Formato incorrecto" required="true" requiredFieldError="Horario de junta requerido"/>--> 
	
	<mx:Canvas id="cnvPeriodicidad" x="10" y="29" width="190" height="68" styleName="canvasMod">
		<mx:RadioButtonGroup id="periodicidad"/>
		<mx:RadioButton id="rdbSemanal" x="10" y="4" label="Semanal" groupName="periodicidad" value="S"/>
		<mx:RadioButton id="rdbQuincenal" x="10" y="36" label="Quincenal" groupName="periodicidad" value="Q"/>
		<mx:RadioButton id="rdbCatorcenal" x="106" y="4" label="Bisemanal" groupName="periodicidad" value="C"/>
		<mx:RadioButton id="rdbMensual" x="106" y="36" label="Mensual" groupName="periodicidad" value="M"/>
	</mx:Canvas>
	<mx:Canvas id="cnvDiaJunta" x="208" y="29" width="232" height="68" styleName="canvasMod">
		<mx:RadioButtonGroup id="diaJunta" change="{actualizaReunion(diaJunta.selectedValue.toString())}"/>
		<mx:RadioButton id="rdbLunes" x="10" y="5" label="Lunes" groupName="diaJunta" value="1"/>
		<mx:RadioButton id="rdbMartes" x="78" y="5" label="Martes" groupName="diaJunta" value="2"/>
		<mx:RadioButton id="rdbMiercoles" x="149" y="5" label="Miércoles" groupName="diaJunta" value="3"/>
		<mx:RadioButton id="rdbJueves" x="10" y="37" label="Jueves" groupName="diaJunta" value="4"/>
		<mx:RadioButton id="rdbViernes" x="78" y="37" label="Viernes" groupName="diaJunta" value="5"/>
	</mx:Canvas>
	<mx:Canvas id="cnvDuracion" x="448" y="29" width="212" height="68" styleName="canvasMod">
		<mx:Label id="lblDiasGracia" x="10" y="10" text="Días de Gracia para depositar:"/>
		<mx:TextInput id="txtDiasGracia" x="169" y="8" width="30" restrict="0-9" maxChars="2"/>
		<mx:FormItem id="duracion" label="Plazo:" x="119" y="36">
			<mx:TextInput id="txtDuracion" width="30" restrict="0-9" maxChars="2"/>	
		</mx:FormItem>
	</mx:Canvas>
	<mx:Canvas id="cnvPagos" x="448" y="118" width="212" height="68" styleName="canvasMod">
		<mx:FormItem id="pagoCapital" label="Para pago de capital:" x="46" y="7">
			<mx:TextInput id="txtPagoCapital" width="30" restrict="0-9" maxChars="2"/>	
		</mx:FormItem>
		<mx:FormItem id="pagoInteres" label="Para pago de interés:" x="45" y="36">
			<mx:TextInput id="txtPagoInteres" width="30" restrict="0-9" maxChars="2"/>	
		</mx:FormItem>
	</mx:Canvas>
	<mx:Label x="10" y="10" text="Periodicidad del préstamo"/>
	<mx:Label x="208" y="10" text="Día de Junta"/>
	<mx:Label x="448" y="99" text="Periodos de gracia"/>
	<mx:Canvas id="cnvMultPer" x="208" y="118" width="232" height="29" styleName="canvasMod">
		<mx:Label id="lblMultiplos" x="30" y="3" text="Multiplos de Periodicidad:"/>
		<mx:TextInput id="txtMultiplos" x="160" y="1" width="40" restrict="0-9" maxChars="2"/>
	</mx:Canvas>
	<mx:Canvas id="cnvHorario" x="208" y="155" width="232" height="31" styleName="canvasMod" visible="true">
		<mx:Label id="lblHorario" x="15" y="4" text="Horario:"/>
		<mx:Label id="lblHoras" x="187" y="4" text="horas"/>
		<!--<mx:TextInput id="txtHora" x="97" y="0" width="30" change="validaHora(event)" maxChars="2" restrict="0-9" />
		<mx:TextInput id="txtMinuto" x="135" y="0" width="30" change="validaMinuto(event)" maxChars="2" restrict="0-9"/>-->
		<Data:CustomComboBox id="cboHora" labelField="hora" x="66" y="2" width="54"/>
		<Data:CustomComboBox id="cboMinuto" labelField="min" x="128" y="2" width="54"/>
		<mx:Label id="lblEtiqueta" x="121" y="4" text=":" width="6" textAlign="center"/>
	</mx:Canvas>
</mx:Canvas>