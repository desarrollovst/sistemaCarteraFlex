<?xml version="1.0" encoding="utf-8"?>
<mx:Form xmlns:mx="http://www.adobe.com/2006/mxml" width="400" height="300" creationPolicy="all">
	<mx:Metadata>
		[Event(name="enviarDatosAcred", type="Data.EventAcred")]
	</mx:Metadata>

	<mx:Validator id="cantidadV" source="{txtEnano}" property="text" 
	invalid="{txtEnano.setFocus()}" triggerEvent="" requiredFieldError="Cantidad Requerida"/> 

	<mx:Script>
		<![CDATA[
			import Data.Permisos;
			import OPERAC.MttoListaNegra;
			import Data.EventAcred;
			import Data.DatosAcred;
			import Data.Utils;
			import Data.Globales;
			import mx.controls.Alert;
			import mx.validators.Validator;
			import mx.collections.ArrayCollection;
			import mx.core.Application;			
			import mx.managers.PopUpManager;
			import mx.effects.easing.Elastic;
			import mx.rpc.soap.WebService;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.validators.Validator;
			import mx.events.ValidationResultEvent;	
			
			private var _xmlNivelEsc:XML =  new XML();
			
			public var nivelEscObj:ArrayCollection = new ArrayCollection();
			public var datos:DatosAcred = new DatosAcred();
			
			public var wsMS:WebService;   //variable utilizada para las llamadas asincronas de WS			
			public var causa:String;
			private var du:Utils;
			private var global:Globales;
			private var permiso:Permisos;
			private var vResult:ValidationResultEvent;
			
			private function actualizaCausa(event:Event):void{
				var comMttoLista:MttoListaNegra = event.currentTarget as MttoListaNegra; 
				causa = comMttoLista.cboCausa.selectedItem.id;	
			}
			
			private function actualizaEstado(event:Event):void{
				chkMarca.selected = !chkMarca.selected;	
			}
			
			public function initConexion():void{				
				wsMS = new WebService();			
				wsMS.wsdl = Application.application.wsStr.wsdlServ.toString();
				wsMS.loadWSDL();
			}	
			
			public function enviarDatosAcred(formData:DatosAcred):void{
				if(valida()){
					formData.nivelEsc = "";
					formData.edoCivil = "";
					
					formData.depend = Number(txtDependientes.text);
					
					if (rdbSoltero.selected == true)
						formData.edoCivil = "S";
					if (rdbCasado.selected == true)
						formData.edoCivil =	"C";
					if (rdbDivorciado.selected == true)
						formData.edoCivil = "D";
					if (rdbViudo.selected == true)
						formData.edoCivil = "V";
					if (rdbUnion.selected == true)
						formData.edoCivil = "U";
				
					for(var i:int = 0; i < nivelEscObj.length; i++){
						if (nivelEscObj[i].nombre == cboNivelEsc.text && cboNivelEsc.text != "--Seleccionar--")
							formData.nivelEsc = nivelEscObj[i].id;
					}
					formData.marca = Number(chkMarca.selected);
					formData.causa = causa;
					formData.enano = Number(chkEnano.selected);
					formData.cantEnano = Number(txtEnano.text); 
					formData.guardaOtros = true;
				}
				else
					formData.guardaOtros = false;	
				
				var event:EventAcred = new EventAcred("enviarDatosAcred", formData);
				dispatchEvent(event);
			}
			
			public function formateaNivel():void{
				var cont:int = _xmlNivelEsc.elements().length();
				var oItem:Object;
				var item:Array = new Array();
				
				oItem = new Object();
				oItem.id = "-1";	
				oItem.nombre = "--Seleccionar--";
				item.push(oItem);
				
				oItem = new Object();
				oItem.id = "C";	
				oItem.nombre = "Carrera Corta";
				item.push(oItem);
				
				oItem = new Object();
				oItem.id = "O";	
				oItem.nombre = "Doctorado";
				item.push(oItem);
				
				oItem = new Object();
				oItem.id = "L";	
				oItem.nombre = "Licenciatura";
				item.push(oItem);
				
				oItem = new Object();
				oItem.id = "R";	
				oItem.nombre = "Maestría";
				item.push(oItem);
				
				oItem = new Object();
				oItem.id = "N";	
				oItem.nombre = "Ninguna";
				item.push(oItem);
				
				oItem = new Object();
				oItem.id = "B";	
				oItem.nombre = "Preparatoria";
				item.push(oItem);
				
				oItem = new Object();
				oItem.id = "P";	
				oItem.nombre = "Primaria";
				item.push(oItem);
				
				oItem = new Object();
				oItem.id = "S";	
				oItem.nombre = "Secundaria";
				item.push(oItem);
				
				oItem = new Object();
				oItem.id = "T";	
				oItem.nombre = "Técnico";
				item.push(oItem);
				
				oItem = new Object();
				oItem.id = "U";	
				oItem.nombre = "Técnico Superior";
				item.push(oItem);
				
				nivelEscObj = new ArrayCollection(item);
			}
			
			public function init(info:DatosAcred):void{
				causa = "";
				global = new Globales();
				permiso = new Permisos();
				permisos();
				formateaNivel();
				cboNivelEsc.dataProvider = nivelEscObj;
				
				if (info != null){
					var j:int;
					switch(info.edoCivil){
						case "S":  
							rdbSoltero.selected = true;
							break;
						case "C":
							rdbCasado.selected = true;
							break;
						case "D":
							rdbDivorciado.selected = true;
							break;
						case "V":
							rdbViudo.selected = true;
							break;
						case "U":
							rdbUnion.selected = true;
							break;		
					}
					for(var i:int = 0; i < nivelEscObj.length; i++){
						if (nivelEscObj[i].id == info.nivelEsc)
							cboNivelEsc.selectedIndex = i;
					}
					txtDependientes.text = info.depend.toString();
					lblNivel.text = info.nivelRiesgo;
					chkMarca.selected = info.marca == 1 ? true: false;
					chkEnano.selected = info.enano == 1 ? true: false;
					txtEnano.text = info.cantEnano.toString();
				}
			}
			
			private function mostrarFormLista():void{
				var tipo:int;
				var comMttoLista:MttoListaNegra = new MttoListaNegra();
				
				if(chkMarca.selected == true)
					tipo = 3;
				else
					tipo = 4;
					
				comMttoLista = MttoListaNegra(PopUpManager.createPopUp(this,MttoListaNegra,true)); 
				PopUpManager.centerPopUp(comMttoLista);
				comMttoLista.init(tipo);
				comMttoLista.addEventListener("enviar", actualizaCausa);
				comMttoLista.addEventListener("cerrar", actualizaEstado);
			}
			
			
			public function permisos():void{
				var perfil_id:String = Application.application.cadPerfil;
				var cont:int;
				
				if (permiso.permisosListaNegra(Application.application.PERFIL_ID)){
					marca.visible = true;	
				}
				
				if (permiso.permisosMarcaEnano(Application.application.PERFIL_ID)){
					enano.visible = true;
					cantEnano.visible = true;	
				}
			}
		
			public function valida():Boolean{
				if(chkEnano.selected){
					if(Number(txtEnano.text) <= 0)
						txtEnano.text = "";						
					var invalidArray:Array = Validator.validateAll([cantidadV]);
					
					if(invalidArray.length == 0)
						return true;
					else
						return false;
				}	
				return true;
			}
			
			public function validaMonto(event:Event):void{
				numVal.source = TextInput(event.currentTarget);
				vResult = numVal.validate();

				if (vResult.type!=ValidationResultEvent.VALID)
                	TextInput(event.currentTarget).text = "";
			}
			
	]]>
	</mx:Script>
	
	<mx:NumberValidator id="numVal" property="text" precision="2" required="false"
     allowNegative="true" domain="real" decimalSeparator="." thousandsSeparator=","/>
	
	<mx:FormItem label="Estado Civil:" id="edoCivil" visible="true" width="320" height="79">
		<mx:Canvas width="171" height="76" styleName="canvasMod">
			<mx:RadioButton id="rdbCasado" label="Casado" x="94" y="0"/>
			<mx:RadioButton id="rdbDivorciado" label="Divorciado" x="10" y="24"/>
			<mx:RadioButton id="rdbViudo" label="Viudo" x="94" y="24"/>
			<mx:RadioButton id="rdbUnion" label="Unión Libre" x="10" y="49"/>
			<mx:RadioButton id="rdbSoltero" label="Soltero" x="10" y="0"/>
		</mx:Canvas>
		
	</mx:FormItem>
	<mx:FormItem label="Nivel Escolar:" id="nivelEscolar" visible="true">
		<mx:ComboBox id="cboNivelEsc" labelField="nombre"/>
	</mx:FormItem>
	<mx:FormItem label="Número de Dependientes:" id="dependientes" visible="true">
		<mx:TextInput id="txtDependientes" width="50" restrict="0-9" maxChars="2"/>
	</mx:FormItem>
	<mx:FormItem id="nivel" label="Nivel de Riesgo:" visible="true">
		<mx:Label id="lblNivel" width="150" textDecoration="underline" fontWeight="bold"/>
	</mx:FormItem>
	<mx:FormItem id="marca" visible="false">
		<mx:CheckBox id="chkMarca" width="150" label="Lista Negra" change="mostrarFormLista()"/>
	</mx:FormItem>
	<mx:FormItem id="enano" visible="false">
		<mx:CheckBox id="chkEnano" width="150" label="Monto Máximo de Crédito"/>
	</mx:FormItem>
	<mx:FormItem id="cantEnano" label="Cantidad:" visible="false">
		<mx:TextInput id="txtEnano" width="80" restrict="0-9;." change="validaMonto(event)"/>
	</mx:FormItem>
</mx:Form>