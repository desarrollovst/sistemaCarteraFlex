<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="400" height="390" creationPolicy="all">
<mx:DataGrid id="dgEntidad" x="158" y="230" width="171" height="70" visible="false" showHeaders="false" itemClick="selecEntidad()" keyDown="presDGEntidad(event)">
	<mx:columns>
		<mx:DataGridColumn dataField="nombre"/>
	</mx:columns>	
</mx:DataGrid>
<mx:DataGrid id="dgMunicipio" x="157" y="261" width="171" height="70" visible="false" showHeaders="false" itemClick="selecMunic()" keyDown="presDGMunicipio(event)">
	<mx:columns>
		<mx:DataGridColumn dataField="nombre"/>
	</mx:columns>	
</mx:DataGrid>
<mx:DataGrid id="dgLocalidad" x="157" y="293" width="171" height="70" visible="false" showHeaders="false" itemClick="selecLocalidad()" keyDown="presDGLocalidad(event)">
	<mx:columns>
		<mx:DataGridColumn dataField="nombre"/>
	</mx:columns>	
</mx:DataGrid>
<mx:DataGrid id="dgColonia" x="157" y="326" width="171" height="70" visible="false" showHeaders="false" itemClick="selecColonia()" keyDown="presDGColonia(event)">
	<mx:columns>
		<mx:DataGridColumn dataField="nombre"/>
	</mx:columns>	
</mx:DataGrid>
	<mx:Metadata>
		[Event(name="enviarDatosProsp", type="Data.EventProsp")]
	</mx:Metadata>
	
	<mx:Validator id="calleV" source="{txtCalle}" property="text" 
	invalid="{txtCalle.setFocus()}" triggerEvent="" requiredFieldError="Nombre de Calle Requerido"/>
	
	<mx:Validator id="NoExtv" source="{txtNoExt}" property="text" 
	invalid="{txtNoExt.setFocus()}" triggerEvent="" requiredFieldError="Número Exterior Requerido"/>
	
	<mx:Validator id="codPostalV" source="{txtCodPostal}" property="text" 
	invalid="{txtCodPostal.setFocus()}" triggerEvent="" requiredFieldError="Código Postal Requerido"/>
	
	<mx:Validator id="entFedV" source="{txtEntFed}" property="text" 
	invalid="{txtEntFed.setFocus()}" triggerEvent="" requiredFieldError="Nombre de Entidad Federativa Requerido"/>
	
	<mx:Validator id="municipioV" source="{txtMunicipio}" property="text" 
	invalid="{txtMunicipio.setFocus()}" triggerEvent="" requiredFieldError="Nombre de Municipio Requerido"/>
	
	<mx:Validator id="localidadV" source="{txtLocalidad}" property="text" 
	invalid="{txtLocalidad.setFocus()}" triggerEvent="" requiredFieldError="Nombre de Localidad Requerido"/>
	
	<mx:Validator id="coloniaV" source="{txtColonia}" property="text" 
	invalid="{txtColonia.setFocus()}" triggerEvent="" requiredFieldError="Nombre de Colonia Requerido"/>

	<mx:Script>
		<![CDATA[
			import Data.EventProsp;
			import Data.DatosProsp;
			import Data.Utils;
			import Data.Globales;
			import mx.validators.Validator;
			import mx.collections.ArrayCollection;
			import mx.core.Application;			
			import mx.managers.PopUpManager;
			import mx.controls.Alert;
			import mx.effects.easing.Elastic;
			import mx.rpc.soap.WebService;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.utils.StringUtil;
			
			[Bindable]
			private var _xmlDir:XML =  new XML();
			[Bindable]
			private var _xmlColonia:XML =  new XML();
			[Bindable]
			private var _xmlEntidad:XML =  new XML();
			[Bindable]
			private var _xmlMunicipio:XML =  new XML();
			[Bindable]
			private var _xmlLocalidad:XML =  new XML();
			
			public var coordObj:ArrayCollection = new ArrayCollection();
			public var entObj:ArrayCollection = new ArrayCollection();
			public var munObj:ArrayCollection = new ArrayCollection();
			public var locObj:ArrayCollection = new ArrayCollection();
			public var colObj:ArrayCollection = new ArrayCollection();
						
			public var coord:Array = new Array();
			
			public var datos:DatosProsp = new DatosProsp();
			
			private var global:Globales;
			private var wsMS:WebService;
			private var du:Utils;
			public var texto:String;
			
			//Realiza la busqueda de direccion del acreditado utilizando el codigo postal
			public function buscaCodPostal():void{ 
				var wsCat:WebService = new WebService();
				var params:Array = new Array();
				txtCodPostal.text = StringUtil.trim(txtCodPostal.text);
				if (txtCodPostal.text != "" && txtCodPostal.length == 5){
					du.initWsCat(wsCat);
					du.sCursor();
					
					_xmlDir = null;
				
					du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
						_xmlDir = new XML(evt.result.toString());
					
						limpiaDatosDir();
						
						du.rCursor();
						du.closeWs(wsCat);
						wsCat = null;
						
						if(_xmlDir.elements().length() > 0){
							txtEntFed.text = _xmlDir.Table[0].ENTFED;
							txtMunicipio.text = _xmlDir.Table[0].MUNIC;
							txtLocalidad.text = _xmlDir.Table[0].LOC;
							txtColonia.text = _xmlDir.Table[0].COL;	
						
							datos.cdgDirEntFed = _xmlDir.Table[0].CDGEF;		
							datos.cdgMun = _xmlDir.Table[0].CDGMU;
							datos.cdgLoc = _xmlDir.Table[0].CDGLO;
							datos.cdgCol = _xmlDir.Table[0].CDGCOL;	
							
							obtieneMunicipio();
							obtieneLocalidad();
							obtieneColonia();
						}
					});
					params[0] = txtCodPostal.text;
					//obtiene la ubicacion de un domicilio con la informacion del codigo postal
					wsCat.getCatalogoGral.send(6, params);
				}
				else{
					txtCodPostal.text = "";
					obtieneMunicipio();
					obtieneLocalidad();
					obtieneColonia();
				}
			}
			
			public function buscaColonia():void{
				if(txtColonia.text != ''){	
					dgColonia.selectedIndex = -1;
					texto = txtColonia.text;					
					colObj.filterFunction = filtraColonia;
					colObj.refresh();
					if(colObj.length > 0){
						dgColonia.validateNow();
						dgColonia.scrollToIndex(0);
						dgColonia.selectedIndex = 0;
						dgColonia.visible = true;
						this.setChildIndex(dgColonia,this.numChildren - 1);	
					}	
					else
						dgColonia.visible = false;								
				}
				else{
					colObj.filterFunction = null;
					colObj.refresh();
					dgColonia.visible = false;
				}
			}
			
			public function buscaEntidad():void{
				if(txtEntFed.text != ''){	
					dgEntidad.selectedIndex = -1;
					texto = txtEntFed.text;					
					entObj.filterFunction = filtraEntidad;
					entObj.refresh();
					if(entObj.length > 0){
						dgEntidad.validateNow();
						dgEntidad.scrollToIndex(0);
						dgEntidad.selectedIndex = 0;
						dgEntidad.visible = true;
						this.setChildIndex(dgEntidad,this.numChildren - 1);
					}	
					else
						dgEntidad.visible = false;								
				}
				else{
					entObj.filterFunction = null;
					entObj.refresh();
					dgEntidad.visible = false;
				}
			}
			
			public function buscaLocalidad():void{
				if(txtLocalidad.text != ''){	
					dgLocalidad.selectedIndex = -1;
					texto = txtLocalidad.text;					
					locObj.filterFunction = filtraLocalidad;
					locObj.refresh();
					if(locObj.length > 0){
						dgLocalidad.validateNow();
						dgLocalidad.scrollToIndex(0);
						dgLocalidad.selectedIndex = 0;
						dgLocalidad.visible = true;
						this.setChildIndex(dgLocalidad,this.numChildren - 1);	
					}	
					else
						dgLocalidad.visible = false;							
				}
				else{
					locObj.filterFunction = null;
					locObj.refresh();
					dgLocalidad.visible = false;
				}
			}
			
			public function buscaMunicipio():void{
				if(txtMunicipio.text != ''){	
					dgMunicipio.selectedIndex = -1;
					texto = txtMunicipio.text;					
					munObj.filterFunction = filtraMunicipio;
					munObj.refresh();
					if(munObj.length > 0){
						dgMunicipio.validateNow();
						dgMunicipio.scrollToIndex(0);
						dgMunicipio.selectedIndex = 0;
						dgMunicipio.visible = true;
						
						this.setChildIndex(dgMunicipio,this.numChildren - 1);		
					}	
					else
						dgMunicipio.visible = false;								
				}
				else{
					munObj.filterFunction = null;
					munObj.refresh();
					dgMunicipio.visible = false;
				}
			}
			
			public function enviarDatosProsp(formData:DatosProsp):void{
				var invalidArray:Array = Validator.validateAll([calleV, entFedV, municipioV, localidadV, coloniaV]);
				if(invalidArray.length == 0){	
					formData.calle = StringUtil.trim(txtCalle.text);
					formData.entreCalles = StringUtil.trim(txtEntreCalles.text);
					formData.noExt = StringUtil.trim(txtNoExt.text);
					formData.noInt = StringUtil.trim(txtNoInt.text);
					formData.telefono = StringUtil.trim(txtTelefono.text);
					formData.codPostal = txtCodPostal.text;
					formData.cdgDirEntFed = datos.cdgDirEntFed;
					formData.cdgMun = datos.cdgMun;
					formData.cdgLoc = datos.cdgLoc;
					formData.cdgCol = datos.cdgCol;
					formData.cdgPais = "MEX";
					formData.guardaDir = true;
				}
				else{
					formData.guardaDir = false;
				}
				var event:EventProsp = new EventProsp("enviarDatosProsp", formData);
				dispatchEvent(event);
			}
			
			private function filtraCaptura(item:Object):Boolean{
				var isMatch:Boolean = false
				if(texto.toLowerCase().search(item.nombre.toLowerCase()) != -1)
					isMatch = true 
				return isMatch; 
			}
			
			public function filtraColonia(item:Object):Boolean{
				var isMatch:Boolean = false
				if(item.nombre.toString().substr(0, texto.length).toLowerCase() == texto.toLowerCase())
					isMatch = true 
				return isMatch; 
			}
			
			public function filtraEntidad(item:Object):Boolean{
				var isMatch:Boolean = false
				if(item.nombre.toString().substr(0, texto.length).toLowerCase() == texto.toLowerCase())
					isMatch = true 
				return isMatch; 
			}
			
			public function filtraLocalidad(item:Object):Boolean{
				var isMatch:Boolean = false
				if(item.nombre.toString().substr(0, texto.length).toLowerCase() == texto.toLowerCase())
					isMatch = true 
				return isMatch; 
			}
			
			public function filtraMunicipio(item:Object):Boolean{
				var isMatch:Boolean = false
				if(item.nombre.toString().substr(0, texto.length).toLowerCase() == texto.toLowerCase())
					isMatch = true 
				return isMatch; 
			}
			
			public function formateaColonia():void{
				var i:int;
				var cont:int = _xmlColonia.elements().length();
				var item:Array = new Array();
				var oItem:Object;
				
				colObj.filterFunction = null;
				colObj.refresh();
				colObj.removeAll();
				colObj.refresh();
				
				for (i = 0; i < cont; i++){
					oItem = new Object();
					oItem.nombre = _xmlColonia.Table[i].NOMBRE;
					oItem.codigo = _xmlColonia.Table[i].CODIGO;
					oItem.codPostal = _xmlColonia.Table[i].CDGPOSTAL;
					item.push(oItem);
				}
				colObj = new ArrayCollection(item);
			}
			
			public function formateaEntidad():void{
				var i:int;
				var cont:int = _xmlEntidad.elements().length();
				var item:Array = new Array();
				var oItem:Object;
				
				entObj.filterFunction = null;
				entObj.refresh();
				entObj.removeAll();
				entObj.refresh();
				
				for (i = 0; i < cont; i++){
					oItem = new Object();
					oItem.nombre = _xmlEntidad.Table[i].NOMBRE;
					oItem.codigo = _xmlEntidad.Table[i].CODIGO;
					item.push(oItem);
				}
				entObj = new ArrayCollection(item);
			}
			
			public function formateaLocalidad():void{
				var i:int;
				var cont:int = _xmlLocalidad.elements().length();
				var item:Array = new Array();
				var oItem:Object;
				
				locObj.filterFunction = null;
				locObj.refresh();
				locObj.removeAll();
				locObj.refresh();
				
				for (i = 0; i < cont; i++){
					oItem = new Object();
					oItem.nombre = _xmlLocalidad.Table[i].NOMBRE;
					oItem.codigo = _xmlLocalidad.Table[i].CODIGO;
					item.push(oItem);
				}
				locObj = new ArrayCollection(item);
			}
			
			public function formateaMunicipio():void{
				var i:int;
				var cont:int = _xmlMunicipio.elements().length();
				var item:Array = new Array();
				var oItem:Object;
				
				munObj.filterFunction = null;
				munObj.refresh();
				munObj.removeAll();
				munObj.refresh();
				
				for (i = 0; i < cont; i++){
					oItem = new Object();
					oItem.nombre = _xmlMunicipio.Table[i].NOMBRE;
					oItem.codigo = _xmlMunicipio.Table[i].CODIGO;
					item.push(oItem);
				}
				munObj = new ArrayCollection(item);
			}
			
			public function init(info:DatosProsp):void{
				var wsCat:WebService = new WebService();
				global = new Globales();
				du = new Utils();
				
				du.initWsCat(wsCat);
				du.sCursor();
					
				_xmlEntidad = null;
				
				du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
					_xmlEntidad = new XML(evt.result.toString());
					
					if(_xmlEntidad.elements().length() > 0){
						formateaEntidad();
						dgEntidad.dataProvider = entObj;
					}
					
					du.rCursor();
					du.closeWs(wsCat);
					wsCat = null;
					
					if (info != null){
						txtCalle.text = info.calle;
						txtEntreCalles.text = info.entreCalles;
						txtNoExt.text = info.noExt;
						txtNoInt.text = info.noInt;
						txtTelefono.text = info.telefono;
						txtCodPostal.text = info.codPostal;
						txtEntFed.text = info.dirEntFed;
						txtMunicipio.text = info.municipio;
						txtLocalidad.text = info.localidad;
						txtColonia.text = info.colonia;	
						
						datos.cdgDirEntFed = info.cdgDirEntFed;		
						datos.cdgMun = info.cdgMun;
						datos.cdgLoc = info.cdgLoc;
						datos.cdgCol = info.cdgCol;	
						
						obtieneMunicipio();
						obtieneLocalidad();
						obtieneColonia();
						
						txtEntFed.addEventListener(KeyboardEvent.KEY_DOWN, presEntidad);
					}	
				});
				//Obtiene informacion de la entidad federativa
				wsCat.getCatalogoGral.send(2);
			}
			
			public function initConexion():void{				
				wsMS = new WebService();			
				wsMS.wsdl = Application.application.wsStr.wsdlServ.toString();
				wsMS.loadWSDL();
			}	
			
			public function limpiaDatosDir():void{
				txtEntFed.text = "";
				txtMunicipio.text = "";
				txtLocalidad.text = "";
				txtColonia.text = "";	
						
				datos.cdgDirEntFed = "";		
				datos.cdgMun = "";
				datos.cdgLoc = "";
				datos.cdgCol = "";	
			}
			
			public function obtieneColonia():void{
				var wsCat:WebService = new WebService();
				var params:Array = new Array();
				
				du.initWsCat(wsCat);
				du.sCursor();
				
				colObj.removeAll();
				colObj.refresh();
					
				du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
					_xmlColonia = new XML(evt.result.toString());
					
					if(_xmlColonia.elements().length() > 0){
						formateaColonia();
						dgColonia.dataProvider = null;
						dgColonia.dataProvider = colObj;
					}
					
					du.rCursor();
					du.closeWs(wsCat);
					wsCat = null;	
				});
				//obtiene informacion de las colonias coincidentes
				params[0] = datos.cdgDirEntFed;
				params[1] = datos.cdgMun;
				params[2] = datos.cdgLoc;
				params[3] = txtCodPostal.text;
				wsCat.getCatalogoGral.send(5, params);
			}
			
			public function obtieneLocalidad():void{
				var wsCat:WebService = new WebService();
				var params:Array = new Array();
				
				du.initWsCat(wsCat);
				du.sCursor();
				
				locObj.removeAll();
				locObj.refresh();
					
				du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
					_xmlLocalidad = new XML(evt.result.toString());
					
					if(_xmlLocalidad.elements().length() > 0){
						formateaLocalidad();
						dgLocalidad.dataProvider = null;
						dgLocalidad.dataProvider = locObj;
					}
					
					du.rCursor();
					du.closeWs(wsCat);
					wsCat = null;
				});
				//Obtiene la informacion de las localidades coincidentes
				params[0] = datos.cdgDirEntFed;
				params[1] = datos.cdgMun;
				params[2] = txtCodPostal.text;
				wsCat.getCatalogoGral.send(4, params);
			}
			
			public function obtieneMunicipio():void{
				var wsCat:WebService = new WebService();
				var params:Array = new Array();
				
				du.initWsCat(wsCat);
				du.sCursor();
				
				munObj.removeAll();
				munObj.refresh();
					
				du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
					_xmlMunicipio = new XML(evt.result.toString());
					
					if(_xmlMunicipio.elements().length() > 0){
						formateaMunicipio();
						dgMunicipio.dataProvider = null;
						dgMunicipio.dataProvider = munObj;
					}
					
					du.rCursor();
					du.closeWs(wsCat);
					wsCat = null;	
				});
				params[0] = datos.cdgDirEntFed;
				params[1] = txtCodPostal.text;
				//obtiene informacion del municipio
				wsCat.getCatalogoGral.send(3, params);
			}
			
			private function presColonia(event:KeyboardEvent):void{
				if(event.keyCode == Keyboard.DOWN){
					dgColonia.setFocus();
				}				
			}
			
			private function presDGColonia(event:KeyboardEvent):void{
				if(event.keyCode == Keyboard.ENTER){
					selecColonia();
					txtColonia.setFocus();
				}					
			}
			
			private function presEntidad(event:KeyboardEvent):void{
				if(event.keyCode == Keyboard.DOWN){
					dgEntidad.setFocus();
				}				
			}
			
			private function presDGEntidad(event:KeyboardEvent):void{
				if(event.keyCode == Keyboard.ENTER){
					selecEntidad();
					txtEntFed.setFocus();
				}					
			}
			
			private function presLocalidad(event:KeyboardEvent):void{
				if(event.keyCode == Keyboard.DOWN){
					dgLocalidad.setFocus();
				}				
			}
			
			private function presDGLocalidad(event:KeyboardEvent):void{
				if(event.keyCode == Keyboard.ENTER){
					selecLocalidad();
					txtLocalidad.setFocus();
				}					
			}
			
			private function presMunicipio(event:KeyboardEvent):void{
				if(event.keyCode == Keyboard.DOWN){
					dgMunicipio.setFocus();
				}				
			}
			
			private function presDGMunicipio(event:KeyboardEvent):void{
				if(event.keyCode == Keyboard.ENTER){
					selecMunic();
					txtMunicipio.setFocus();
				}					
			}
			
			public function selecColonia():void{
				if(dgColonia.selectedIndex >= 0){
					var indice:int = dgColonia.selectedIndex;
					txtColonia.text = colObj[indice].nombre;
					datos.cdgCol = colObj[indice].codigo;
					txtCodPostal.text = colObj[indice].codPostal;
					dgColonia.visible = false;
				}
			}
			
			public function selecEntidad():void{
				if(dgEntidad.selectedIndex >= 0){
					var indice:int = dgEntidad.selectedIndex;
					
					if (datos.cdgDirEntFed != entObj[indice].codigo){			
						txtEntFed.text = entObj[indice].nombre;
						datos.cdgDirEntFed = entObj[indice].codigo;
						
						txtMunicipio.text = "";
						txtLocalidad.text = "";
						txtColonia.text = "";
						datos.cdgMun = "";
						datos.cdgLoc = "";
						datos.cdgCol = "";
						
						obtieneMunicipio();
					}
					else
						txtEntFed.text = entObj[indice].nombre;
					dgEntidad.visible = false;
				}
			}
			
			public function selecLocalidad():void{
				if(dgLocalidad.selectedIndex >= 0){
					var indice:int = dgLocalidad.selectedIndex;
				
					if (datos.cdgLoc != locObj[indice].codigo){
						txtLocalidad.text = locObj[indice].nombre;
						datos.cdgLoc = locObj[indice].codigo;
						
						txtColonia.text = "";
						datos.cdgCol = "";
						
						obtieneColonia();
					}
					else
						txtLocalidad.text = locObj[indice].nombre;
					dgLocalidad.visible = false;
				}
			}
			
			public function selecMunic():void{
				if(dgMunicipio.selectedIndex >= 0){
					var indice:int = dgMunicipio.selectedIndex;
					if (datos.cdgMun != munObj[indice].codigo){
						txtMunicipio.text = munObj[indice].nombre;
						datos.cdgMun = munObj[indice].codigo;
	
						txtLocalidad.text = "";
						txtColonia.text = "";
						datos.cdgLoc = "";
						datos.cdgCol = "";
					
						obtieneLocalidad();
					}
					else
						txtMunicipio.text = munObj[indice].nombre;
					dgMunicipio.visible = false;
				}
			}		
			
			public function verificaEntidad():void{
				if (dgEntidad.selectedIndex < 0){
					dgEntidad.visible = false;
					texto = txtEntFed.text;
					entObj.filterFunction = filtraCaptura;
					entObj.refresh();
					if (entObj.length == 0){
						txtEntFed.text = "";
						datos.cdgDirEntFed = "";
					}
					entObj.filterFunction = null;
					entObj.refresh();
				}
			}
			
			public function verificaLocalidad():void{
				if (dgLocalidad.selectedIndex < 0){
					dgLocalidad.visible = false;
					texto = txtLocalidad.text;
					locObj.filterFunction = filtraCaptura;
					locObj.refresh();
					if (locObj.length == 0){
						txtLocalidad.text = "";
						datos.cdgLoc = "";
					}
					locObj.filterFunction = null;
					locObj.refresh();
				}
			}
			
			public function verificaMunicipio():void{
				if (dgMunicipio.selectedIndex < 0){
					dgMunicipio.visible = false;
					texto = txtMunicipio.text;
					munObj.filterFunction = filtraCaptura;
					munObj.refresh();
					if (munObj.length == 0){
						txtMunicipio.text = "";
						datos.cdgMun = "";
					}
					munObj.filterFunction = null;
					munObj.refresh();
				}
			}
			
			public function verificaColonia():void{
				if (dgColonia.selectedIndex < 0){					
					dgColonia.visible = false;
					texto = txtColonia.text;
					colObj.filterFunction = filtraCaptura;
					colObj.refresh();
					if (colObj.length == 0){
						txtColonia.text = "";
						datos.cdgCol = "";
					}
					colObj.filterFunction = null;
					colObj.refresh();
				}
			}	
	]]>
	</mx:Script>
	
	<mx:FormItem label="Calle:" id="calle" visible="true" x="111.5" y="16" width="224">

            <mx:TextInput id="txtCalle" maxChars="80" restrict="A-Z;a-z;Ñ;ñ;0-9; " width="170"/>

      </mx:FormItem>

      <mx:FormItem label="Entre las callles:" id="entreCalles" visible="true" x="59.5" y="48" width="276">

            <mx:TextInput id="txtEntreCalles" maxChars="50" restrict="A-Z;a-z;Ñ;ñ;0-9; " width="170"/>    

      </mx:FormItem>

      <mx:FormItem label="Número Exterior:" id="NoExt" visible="true" x="57.5" y="80" width="249">

            <mx:TextInput id="txtNoExt" maxChars="20" width="90"/>

      </mx:FormItem>

      <mx:FormItem label="Número Interior:" id="NoInt" visible="true" x="61.5" y="112" width="249">

            <mx:TextInput id="txtNoInt" maxChars="20" width="90"/>

      </mx:FormItem>

      <mx:FormItem label="Teléfono:" id="telefono" visible="true" x="91.5" y="144">

            <mx:TextInput id="txtTelefono" restrict="0-9" maxChars="20"/>

      </mx:FormItem>

      <mx:FormItem label="Código Postal:" id="codPostal" visible="true" x="68.5" y="176" width="188">

            <mx:TextInput id="txtCodPostal" enter="buscaCodPostal()" focusOut="buscaCodPostal()" width="95" maxChars="5" restrict="0-9"/>

      </mx:FormItem>

      <mx:FormItem label="Entidad Federativa:" id="EntFed" visible="true" x="44.5" y="208" width="290">

            <mx:TextInput id="txtEntFed" width="170" change="buscaEntidad()" enter="selecEntidad()" focusOut="verificaEntidad()"

                  restrict="A-Z;a-z;Ñ;ñ; " keyDown="presEntidad(event)"/>

      </mx:FormItem>

      <mx:FormItem label="Municipio:" id="municipio" visible="true" x="88.5" y="240" width="246">

            <mx:TextInput id="txtMunicipio" width="170" change="buscaMunicipio()" enter="selecMunic()" focusOut="verificaMunicipio()"

                  restrict="A-Z;a-z;Ñ;ñ; " keyDown="presMunicipio(event)"/>

      </mx:FormItem>

      <mx:FormItem label="Localidad:" id="localidad" visible="true" x="88.5" y="272" width="247">

            <mx:TextInput id="txtLocalidad" width="170" change="buscaLocalidad()" enter="selecLocalidad()" focusOut="verificaLocalidad()"

                  restrict="0-9;A-Z;a-z;Ñ;ñ; " keyDown="presLocalidad(event)"/>

      </mx:FormItem>

      <mx:FormItem label="Colonia:" id="colonia" visible="true" x="98.5" y="304" width="237">

            <mx:TextInput id="txtColonia" width="170" change="buscaColonia()" enter="selecColonia()" focusOut="verificaColonia()"

                  restrict="0-9;A-Z;a-z;Ñ;ñ; " keyDown="presColonia(event)"/>

      </mx:FormItem>


</mx:Canvas>