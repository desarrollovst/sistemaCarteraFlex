<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="380" 
	height="478" creationPolicy="all">
	
	<mx:Validator id="vNomina" source="{txtNomina}" property="text" 
	invalid="{txtNomina.setFocus()}" triggerEvent="" requiredFieldError="Campo requerido"/>
	
	<mx:Script>
	<![CDATA[
		import mx.charts.DateTimeAxis;
		import Data.Globales;
		import Data.Utils;
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.core.Application;
		import mx.effects.*;
		import mx.events.EffectEvent;
		import mx.graphics.Stroke;
		import mx.managers.PopUpManager;	
		import mx.rpc.events.ResultEvent;
		import mx.rpc.soap.WebService;
		import mx.validators.Validator;	
		import mx.events.ValidationResultEvent;
		import mx.events.FlexEvent;
		
		private var _xmlInfo:XML = new XML();
		
		private var vResult:ValidationResultEvent;
		
		private var wsMS:WebService = new WebService();
		private var titulo:String;	
		private var du:Utils;
		private var global:Globales;
		
		private var openEffect:Effect = new WipeDown();
		private var closeEffect:Effect = new WipeDown();
		
		private var tipoAccion:int;
				
		private function buscaPersonal():void{
			if(txtNomina.text != ""){
				initConexionRep();
				du.sCursor();
				
				txtNombre.text = "";
				
				var vCodigo:String = "";
				var vNombre:String = "";
				var vNomina:String = txtNomina.text;
					
				du.ejecutaWsMethod(wsMS,function(evt:ResultEvent):void {											
					_xmlInfo = new XML(evt.result.toString());
					
					du.rCursor();
					du.closeWs(wsMS);	
					Application.application.desbloquear();
						
					var cont:int = _xmlInfo.elements().length();
					
					if(cont > 0){	
						txtNombre.text = _xmlInfo.Table[0].NOMBRE;
					}					
				});
				wsMS.getPersonal.send(vCodigo, vNombre, vNomina);	
			}
		}
				
		private function cerrar():void{
			var playReverse:Boolean = true;   
            closeEffect.duration = 500;
            closeEffect.play([this], playReverse);
            closeEffect.addEventListener(EffectEvent.EFFECT_END, terminarEfecto);
		}
		
		public function edicion(pXmlInfo:XML):void{
			tipoAccion = 2;
			du = new Utils(); 
			global = new Globales();
			this.title = "Edición Ponderación Incentivo Total";
			openEffect.duration = 1000;
			openEffect.play([this]);
			
			txtNomina.text = pXmlInfo.NOMINA;
			txtNombre.text = pXmlInfo.NOMBRE;
			if(pXmlInfo.CONVENIO == "S") chkConvenio.selected = true else chkConvenio.selected = false;
			if(pXmlInfo.INCENTIVO == "S") chkIncentivo.selected = true else chkIncentivo.selected = false;
			if(pXmlInfo.PROMOCION == "S") chkPromocion.selected = true else chkPromocion.selected = false;
			if(pXmlInfo.MICROSEGURO == "S") chkMicroseguro.selected = true else chkMicroseguro.selected = false; 
			rdgEstatus.selectedValue = pXmlInfo.ESTATUS;
			txtObservaciones.text = pXmlInfo.OBSERVACION;
			
			var acMes:ArrayCollection = global.formateaMes();
			cbxMes.dataProvider = acMes;
			for(var i:int = 0; i < acMes.length; i++){   
				if (acMes[i].id.toString() == pXmlInfo.MES){
					cbxMes.selectedIndex = i;
					break;
				}
			}
			
			var acAnio:ArrayCollection = global.formateaAnio();
			cbxAnio.dataProvider = acAnio;
			for(var j:int = 0; j < acAnio.length; j++){   
				if (acAnio[j].id.toString() == pXmlInfo.ANIO){
					cbxAnio.selectedIndex = j;
					break;
				}
			}
			
			txtNomina.editable = false;
			cbxMes.enabled = false;
			cbxAnio.enabled = false;
		}
		
		private function enviar():void{
			if(valida()){
				var mNomina:String = txtNomina.text;
				var mMes:String = cbxMes.selectedItem.id;
				var mAnio:String = cbxAnio.selectedItem.id;
				var mConvenio:String = "";
				var mIncentivo:String = "";
				var mPromocion:String = "";
				var mMicroseguro:String = "";
				var mEstatus:String = rdgEstatus.selectedValue.toString();
				var mObservacion:String = txtObservaciones.text;
				var mUsuario:String = Application.application.U_ID;
				
				if(chkConvenio.selected) mConvenio = "S"; else mConvenio = "N";
				if(chkIncentivo.selected) mIncentivo = "S"; else mIncentivo = "N";
				if(chkPromocion.selected) mPromocion = "S"; else mPromocion = "N";
				if(chkMicroseguro.selected) mMicroseguro = "S"; else mMicroseguro = "N";
				
		    	initConexion();
		    	du.sCursor();
				Application.application.bloquear();
				wsMS.addEventListener(ResultEvent.RESULT, setAccionPondIncTot);
				
				wsMS.setAccionPondIncTot.send(mNomina, mMes, mAnio, mConvenio, mIncentivo, mPromocion, mMicroseguro
				, mEstatus, mObservacion, mUsuario, tipoAccion);
			}
		}
		
		public function initConexion():void{				
			wsMS = new WebService();			
			wsMS.wsdl = Application.application.wsStr.wsdlIncR.toString();
			wsMS.loadWSDL();
		}
		
		public function initConexionRep():void{				
			wsMS = new WebService();			
			wsMS.wsdl = Application.application.wsStr.wsdlIncC.toString();
			wsMS.loadWSDL();
		}
		
		public function nuevo():void{
			tipoAccion = 1;
			du = new Utils(); 
			global = new Globales();
			this.title = "Nueva Ponderación de Incentivo Total";
			openEffect.duration = 1000;
			openEffect.play([this]);
			
			cbxAnio.dataProvider = global.formateaAnio();
			cbxMes.dataProvider = global.formateaMes();
		}
		
		private function setAccionPondIncTot(event:ResultEvent):void{
			wsMS.disconnect();
			du.rCursor();
			Application.application.desbloquear();
			
			wsMS.removeEventListener(ResultEvent.RESULT, setAccionPondIncTot);
			wsMS = null;
			
			var res:String = event.result.toString();

			if (res.substr(0,1) == "1")
				cerrar();
			else
				Alert.show(res.substr(2,res.length-1), titulo,4,null,null,global.iAlert);		
		}
		
		private function terminarEfecto(event:EffectEvent):void{
			closeEffect.removeEventListener(EffectEvent.EFFECT_END, terminarEfecto);
			PopUpManager.removePopUp(this);
		}
		
		private function valida():Boolean{
			var iaNomina:Array = Validator.validateAll([vNomina]);
			
			if (iaNomina.length != 0){
				Alert.show("Debe capturar el número de nómina.",titulo,4,null,null,global.iAlert);
				return false;
			}
			
			if(txtNombre.text == ""){
				Alert.show("Número de nómina invalido.",titulo,4,null,null,global.iAlert);
				return false;
			}
			
			if(cbxMes.selectedIndex == 0){
				Alert.show("Mes invalido.",titulo,4,null,null,global.iAlert);
				return false;
			}
			
			if(cbxAnio.selectedIndex == 0){
				Alert.show("Año invalido.",titulo,4,null,null,global.iAlert);
				return false;
			}
			
			if(!rdgEstatus.selection){
				Alert.show("Debe seleccionar el estatus del adicional.",titulo,4,null,null,global.iAlert);
				return false;
			}
			
			if(tipoAccion == 2){
				if(txtObservaciones.text == ""){
					Alert.show("Debe escribir la observación de la actualización.",titulo,4,null,null,global.iAlert);
					return false;
				}	
			}
				
			return true;
		}
	]]>
	</mx:Script>
	
	<mx:NumberValidator id="numVal" property="text" precision="2" required="false"
        allowNegative="true" domain="real" decimalSeparator="." thousandsSeparator=","/>
	
	<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="360" height="108" x="10" y="10" styleName="canvasMod">
		<mx:Label x="21.5" y="13" text="Nómina:" id="lblNomina"/>
		<mx:TextInput id="txtNomina" x="70.5" y="10" width="69" editable="true" enter="buscaPersonal()" focusOut="buscaPersonal()"/>
		<mx:Label x="19.5" y="43" text="Nombre:" id="lblNombre"/>
		<mx:TextInput id="txtNombre" x="70.5" y="40" width="268" editable="false"/>
		<mx:Label x="32.45" y="75" text="Mes:" width="30" height="20" id="lblMes"/>
		<mx:ComboBox id="cbxMes" labelField="nombre" x="69.45" y="72" width="139.05"/>
		<mx:Label x="225.5" y="75" text="Año:" width="31" height="20" id="lblAnio"/>
		<mx:ComboBox x="265.5" y="72" width="72" id="cbxAnio" labelField="id"></mx:ComboBox>
	</mx:Canvas>
	<mx:Canvas x="10" y="126" width="360" height="273" styleName="canvasMod">
		<mx:Label x="9.95" y="6" text="Ponderaciones:" width="107" height="20" id="lblPonderacion"/>
		<mx:Canvas x="10" y="26" width="338" height="42" styleName="canvasMod">
			<mx:CheckBox x="9.5" y="7" label="Convenio" id="chkConvenio"/>
			<mx:CheckBox x="87.5" y="7" label="Incentivo" id="chkIncentivo"/>
			<mx:CheckBox x="163.5" y="7" label="Promoción" id="chkPromocion"/>
			<mx:CheckBox x="241.5" y="7" label="Microseguro" id="chkMicroseguro"/>
		</mx:Canvas>
		<mx:Label x="10" y="74" text="Estatus:" id="lblEstatus"/>
		<mx:RadioButtonGroup id="rdgEstatus"/>
		<mx:Canvas x="10" y="94" width="338" height="42" styleName="canvasMod">
			<mx:RadioButton x="101.5" y="8" label="Activo" id="rdActivo" groupName="rdgEstatus" value="A"/>
			<mx:RadioButton x="173.5" y="8" label="Inactivo" id="rdInactivo" groupName="rdgEstatus" value="I"/>
		</mx:Canvas>
		<mx:Label x="10" y="145" text="Observaciones:" id="lblObservacion"/>
		<mx:TextInput id="txtObservaciones" x="10" y="164" width="338" editable="true" height="95"/>
	</mx:Canvas>
	<mx:Button id="btnAceptar" x="282" y="407" icon="@Embed(source='assets/images/iconAccept.png')" click="enviar()" width="40"/>
	<mx:Button id="btnCancelar" x="330" y="407" icon="@Embed(source='assets/images/iconCancel.png')" click="cerrar()" width="40"/>
</mx:TitleWindow>