<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" xmlns:control="Controls.*"
	 creationPolicy="all" creationComplete="initApp()" xmlns:Data="Data.*" x="10" y="107">
	
	<mx:Script>    
    <![CDATA[
    	import mx.messaging.channels.StreamingAMFChannel;
    	import mx.charts.chartClasses.DataDescription;
    	import as3xls.xls.Cell;
        import as3xls.xls.ExcelFile;
        import as3xls.xls.Sheet;
    	import Data.ExcelExportXls;
    	import Data.Globales;
    	import Data.Utils; 
    	import mx.collections.ArrayCollection;
        import mx.controls.Alert; 
        import mx.controls.dataGridClasses.DataGridColumn;
        import mx.core.Application; 
        import mx.events.ListEvent;		
        import mx.managers.PopUpManager;
		import mx.rpc.events.ResultEvent;
		import mx.rpc.soap.WebService; 
         
      	private var fileReference:FileReference;
      	private var sheet:Sheet;
      	private var wsMS:WebService;
      	private var wsRep:WebService;
      	private var titulo:String;
		private var du:Utils;
		private var global:Globales;
      	
      	private var infoObj:ArrayCollection = new ArrayCollection();
      	
      	private var aCDGCO:Array;
      	private var aMeta:Array;
      	        	
		private var _xmlInfo:XML = new XML();
      	 
       	private function buscarArchivo():void{
       		var fileFilter:FileFilter = new FileFilter("Excel (.xls)", "*.xls;");
       		
       		try{
	       		fileReference = new FileReference();
	            fileReference.addEventListener(Event.SELECT,fileReference_Select);
	            fileReference.addEventListener(Event.CANCEL,fileReference_Cancel);
	            fileReference.browse([fileFilter]);
	    	}
         	catch (error:Error){
         		 Alert.show(error.message,titulo,4,null,null,global.iAlert);
         		 return;
         	}
        }
                
        private function cargarInfo():void{
        	if(compMesAnio.valida()){
	        	if(formateaInfo()){
	        		var mMes:String = compMesAnio.obtieneMes();
	        		var mAnio:String = compMesAnio.obtieneAnio();

					initConexion();
					du.sCursor();
					Application.application.bloquear();
					
					//Servicio de registro del estado de cuenta
					du.ejecutaWsMethod(wsMS,function(evt:ResultEvent):void {											
						var res:String = evt.result.toString();
								
						wsMS.disconnect();
						du.rCursor();
						Application.application.desbloquear();
						
						if(res.substr(0,1) == "1"){
							
							btnCargar.visible = false;
							btnBuscar.enabled = false;
							btnExportar.visible = true;
							btnLimpiar.visible = true;
							
							initConexionRep();
							du.sCursor();
							Application.application.bloquear();
							
							du.ejecutaWsMethod(wsRep,function(event:ResultEvent):void{		
								_xmlInfo = new XML(event.result);
				
								du.closeWs(wsRep);
								du.rCursor();
								Application.application.desbloquear();
				
								if(_xmlInfo.elements().length() > 0){
									dgInfo.dataProvider = null;
									dgInfo.dataProvider = _xmlInfo.Table;
									var cont:int = _xmlInfo.elements().length();
									
									lblResultado.text = cont + " Registro(s) Procesado(s)";	
									
									Alert.show("Proceso finalizado exitosamente.",titulo,4,null,null,global.iInfo);	
								}
							});
							wsRep.getIncentivoMetasColocacion.send('S', Application.application.U_ID);	
						}
						else{
							Alert.show(res.substr(2,res.length -1),titulo,4,null,null,global.iAlert);
							Application.application.desbloquear();
						}				
					});
					wsMS.setAccionIncentivoMetasColocacion.send('S', mMes, mAnio, aCDGCO, aMeta, Application.application.U_ID);
	        	}
        	}
        }
        
		private function exportar():void{
			var dgE:ExcelExportXls = new ExcelExportXls();
			dgE.loadDGInExcel(dgInfo,null,titulo);		
		}

        private function formateaInfo():Boolean{
        	var info:ArrayCollection = dgInfo.dataProvider as ArrayCollection;

        	aCDGCO = new Array;
      		aMeta = new Array;

			for (var i:int = 0; i < info.length; i++){
				aCDGCO[i] = info[i].CDGCO != null ? info[i].CDGCO : "";
	      		aMeta[i] = info[i].META != null ? info[i].META : "";
			}
			
			return true;
        }
        
        private function fileReference_Select(event:Event):void{
	    	fileReference.addEventListener(ProgressEvent.PROGRESS,fileReference_Progress);
	        fileReference.addEventListener(Event.COMPLETE,fileReference_Complete);
	        fileReference.addEventListener(IOErrorEvent.IO_ERROR, onLoadError);
	        fileReference.load(); 
	        txtArchivo.text = fileReference.name;	        
        }
        
        private function fileReference_Cancel(event:Event):void{
            fileReference = null;
        }
        
        private function fileReference_Progress(event:ProgressEvent):void{
            //progressBar.visible = true;
            //progressBar.includeInLayout = true;
        }
        
        private function onLoadError():void{
        }
        
        private function fileReference_Complete(event:Event):void{
            try{
	            dgInfo.dataProvider = null;
	            infoObj.removeAll();
	            infoObj.refresh();
	            	            
            	btnCargar.enabled = true;
            	btnBuscar.enabled = true;
	            
	            var fileData:ByteArray = fileReference.data;
	            var excelFile:ExcelFile = new ExcelFile();
	            var cont:int;
	            var filas:int;
	            var columnas:int;
	            var band:Boolean = false;
	            
	            if(fileData != null && fileData.length > 0){
	            	excelFile.loadFromByteArray(fileData);
	                var sheet:Sheet = excelFile.sheets[0];
	                if(sheet != null){
	                	cont = 0;
	            	    filas = sheet.rows;
	                    columnas = sheet.cols;
	                    for(var i:int = 1; i < filas; i++){
	                	    var cellObject:Object = {};
	                        for(var col:int = 0; col < columnas; col++){
	                    	    var cell:Cell = new Cell();
	                            var cellValue:String = new String();
	                            cell = sheet.getCell(i, col);
	                            if(cell != null){
	                            	cellValue =(cell.value).toString();
	                            	if(col == 0 && cellValue == ""){
	                            		band = true;
	                            		break;
	                            	}
	                                else
	                                	addProperty(cellObject, col, cellValue);
	                            }
	                     	}  
	                        if(!band){
	                        	infoObj.addItem(cellObject);
	                        	cont += 1;
	                        } 
	                        else 
	                        	band = false;
	                        dgInfo.dataProvider = infoObj;
	                    } 
	                    lblResultado.text = cont + " Registro(s) Encontrado(s)";
	                }    
	            } 
	            dgInfo.includeInLayout = true;
	            dgInfo.visible = true;
	            fileReference = null;
	            
	            btnCargar.enabled = true;
            }
            catch (error:Error){
         		 Alert.show(error.message,titulo,4,null,null,global.iAlert);
         		 return;
         	} 
        }  
        
        private function addProperty(cellObject:Object,index:int,cellValue:String):void{
            if(index == 0)
                cellObject.CDGCO = cellValue;
            if(index == 1)
                cellObject.NOMCO = cellValue;
            else if(index == 2)
                cellObject.META = cellValue;
        }
      
      	private function initApp():void{
	    	global = new Globales();
	    	du = new Utils();
	        titulo = "Carga Archivo Metas ColocaciÃ³n";
	      	lblTitulo.text = titulo.toUpperCase();
	    }    
	    
	    private function initConexion():void{				
			wsMS = new WebService();			
			wsMS.wsdl = Application.application.wsStr.wsdlIncR.toString();
			wsMS.loadWSDL();
		}	
		
		private function initConexionRep():void{				
			wsRep = new WebService();			
			wsRep.wsdl = Application.application.wsStr.wsdlIncC.toString();
			wsRep.loadWSDL();
		}	
		
		private function limpiar():void{
			dgInfo.dataProvider = null;
			
			lblResultado.text = "";
			txtArchivo.text = "";
			btnCargar.visible = true;
			btnCargar.enabled = false;
			btnBuscar.enabled = true;
			btnExportar.visible = false;
            btnLimpiar.visible = false;
      		compMesAnio.limpiar();
		}
    ]]>
  	</mx:Script>
  	<mx:Canvas id="cnvCarga" backgroundColor="#FFFFFF" backgroundAlpha="1.0" width="540" height="517">
  	  	<mx:Canvas x="10" y="39" width="255" height="60" styleName="canvasMod" id="canvas2">
  	  		<control:FiltroMesAnio id="compMesAnio" y="4" x="10" width="236.1"/>
	  	</mx:Canvas>
	  	<mx:Label id="lblTitulo" x="10" y="10" width="520" fontSize="12" fontWeight="bold" fontStyle="italic"/>
	  	<mx:Canvas x="10" y="110" width="520" height="399" styleName="canvasMod" id="canvas1">
	  		<mx:Button label="Cargar Archivo" id="btnCargar" enabled="false" x="205" y="363" click="cargarInfo()"/>
	  		<mx:Button label="Buscar" id="btnBuscar" enabled="true" click="buscarArchivo()" x="311" y="331"/>
	  		<mx:TextInput id="txtArchivo" editable="false" enabled="true" x="143" y="331" width="160"/>
	  		<mx:DataGrid id="dgInfo" x="10" y="10" width="498" height="282" >
	  			<mx:columns>
	  				<mx:DataGridColumn headerText="COD. SUCURSAL" dataField="CDGCO" width="115"/>
	  				<mx:DataGridColumn headerText="SUCURSAL" dataField="NOMCO" width="180"/>
	  				<mx:DataGridColumn headerText="COLOCACION META" dataField="META" width="140"/>
	  				<mx:DataGridColumn headerText="ESTATUS" dataField="ESTATUS" width="120"/>
	  			</mx:columns>
	  		</mx:DataGrid>
	  		<mx:Label id="lblResultado" x="10" y="300" width="498" fontStyle="italic" fontWeight="bold" fontSize="12" textAlign="center"/>
	  		<mx:Button label="Exportar" id="btnExportar" visible="false" x="185" y="363" click="exportar()"/>
	  		<mx:Button label="Limpiar" id="btnLimpiar" visible="false" x="265" y="363" click="limpiar()"/>
	  	</mx:Canvas>
  	</mx:Canvas>
</mx:Canvas>