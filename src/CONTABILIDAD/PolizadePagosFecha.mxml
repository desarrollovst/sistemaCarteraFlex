<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="300" height="204" backgroundAlpha="1.0" 
	backgroundColor="#FFFFFF" creationPolicy="all" creationComplete="initApp()" xmlns:Data="Data.*">
	
	<mx:Script>
		<![CDATA[
			import Data.ExcelExportXls;
			import Data.Globales;
			import Data.TxtExport;
			import Data.Utils;
			import mx.collections.ArrayCollection;
			import mx.containers.TitleWindow;
			import mx.controls.Alert;
			import mx.core.Application;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.soap.WebService;
			
			public var wsMS:WebService;
			public var titulo:String;
			private var fecIni:String;
			private var fecFin:String;
			private var info:String;
			private var du:Utils;
			private var global:Globales;
			
			private var _xmlRes:XML = new XML();
			private var infoObj:ArrayCollection = new ArrayCollection();
			private var tipoObj:ArrayCollection = new ArrayCollection();
			
			private function exportar():void{
				var exp:TxtExport = new TxtExport();
				exp.cargaCadena(info, "POLIZA DE " + String(cboTipo.selectedItem.descTitulo).toUpperCase());
			}
			
			private function exportarXls():void{
				var dgE:ExcelExportXls = new ExcelExportXls(); 
				dgE.setIsXls(true);
				dgE.hideHeader(true);
				dgE.loadDGInExcel(dgReporte, null, "Poliza" + cboTipo.selectedItem.descTitulo + global.formatearFecha(dtfFecFin.selectedDate,"DDMMMYYYY"));		
			}
			
			private function formatearInfo():void{
				var cont:int = _xmlRes.elements().length(); 
				var oItem:Object;
				var item:Array = new Array();
				info = "";
						
				for(var i:int = 0; i < cont; i++){
					var cadena:String = _xmlRes.Table[i].CADENAFINAL;
					var subStr:Array = cadena.split("|");
					
					oItem = new Object();				
					oItem.COL1 = subStr[0] != null ? subStr[0] : "";
					oItem.COL2 = subStr[1] != null ? "'" + subStr[1] : "";
					oItem.COL3 = subStr[2] != null ? subStr[2] : "";
					oItem.COL4 = subStr[3] != null ? subStr[3] : "";
					oItem.COL5 = subStr[4] != null ? subStr[4] : "";
					oItem.COL6 = subStr[5] != null ? subStr[5] : "";
					oItem.COL7 = subStr[6] != null ? subStr[6] : "";
					oItem.COL8 = subStr[7] != null ? subStr[7] : "";
					oItem.COL9 = subStr[8] != null ? subStr[8] : "";
					oItem.COL10 = subStr[9] != null ? subStr[9] : "";
					item.push(oItem);
				}
				infoObj = new ArrayCollection(item);
			}
			
			private function formatearTipo():void{
				var oItem:Object;
				var item:Array = new Array();
				
				oItem = new Object();
				oItem.codigo = "0";	
				oItem.descripcion = "--Seleccionar--";
				item.push(oItem);
				
				/*oItem = new Object();
				oItem.codigo = "2";	
				oItem.descripcion = "No Identificados";
				oItem.descTitulo = "PagosNoIdentificados";
				item.push(oItem);*/
				
				oItem = new Object();
				oItem.codigo = "3";	
				oItem.descripcion = "Pagos";
				oItem.descTitulo = "Pagos";
				item.push(oItem);
				
				/*oItem = new Object();
				oItem.codigo = "6";	
				oItem.descripcion = "Pagos Identificados";
				oItem.descTitulo = "PagosIdentificados";
				item.push(oItem);*/
				
				oItem = new Object();
				oItem.codigo = "4";	
				oItem.descripcion = "Garantías";
				oItem.descTitulo = "Garantias";
				item.push(oItem);
				
				/*oItem = new Object();
				oItem.codigo = "13";	
				oItem.descripcion = "Garantías Identificadas";
				oItem.descTitulo = "GarantiasIdentificadas";
				item.push(oItem);*/
				
				oItem = new Object();
				oItem.codigo = "5";	
				oItem.descripcion = "Garantía a Pago";
				oItem.descTitulo = "GarantiasAPago";
				item.push(oItem);
				
				oItem = new Object();
				oItem.codigo = "7";	
				oItem.descripcion = "Pago a Garantía";
				oItem.descTitulo = "PagoAGarantias";
				item.push(oItem);
				
				oItem = new Object();
				oItem.codigo = "11";	
				oItem.descripcion = "Garantía a Garantía";
				oItem.descTitulo = "GarantiasAGarantias";
				item.push(oItem);
				
				oItem = new Object();
				oItem.codigo = "12";	
				oItem.descripcion = "Pago a Pago";
				oItem.descTitulo = "PagoAPago";
				item.push(oItem);
				
				tipoObj = new ArrayCollection(item);
				cboTipo.dataProvider = tipoObj;
			}
			
			private function generar():void{
				if(validar()){			
					var tipo:String = cboTipo.selectedItem.codigo;
					fecIni = dtfFecIni.text;
					fecFin = dtfFecFin.text;
					
					initConexion();
					du.sCursor();
					global.bloquear();
					
					du.ejecutaWsMethod(wsMS,function(evt:ResultEvent):void{																				
						_xmlRes = new XML(evt.result);
						
						du.rCursor();
						du.closeWs(wsMS);
						global.desbloquear();
						
						if(_xmlRes.elements().length() >0){
							formatearInfo();
							dgReporte.dataProvider = infoObj;
							exportarXls();
						}
						else{
							Alert.show("No se pudo generar la póliza requerida.",titulo,4,null,null,global.iAlert);	
						}
					});
					wsMS.getPolizaPagosFecha.send(fecIni, fecFin, tipo, global.obtenerUsuario()); 
				}
			} 
				
			public function initApp():void{
				global = new Globales();
				du = new Utils();
				titulo = "Póliza de Pagos";
				lblTitulo.text = titulo.toUpperCase();
				formatearTipo();
				limpiar();
			}		
			
			private function initConexion():void{				
				wsMS = new WebService();			
				wsMS.wsdl = Application.application.wsStr.wsdlRepCont.toString();
				wsMS.loadWSDL();
			}
			
			private function limpiar():void{
				var fec:Date;
				fec = global.obtenerFechaSistema();
				dtfFecIni.selectedDate = global.seleccionarDiaHabil(new Date(fec.fullYear,fec.month,fec.date - 1));
				dtfFecFin.selectedDate = global.seleccionarDiaHabil(new Date(fec.fullYear,fec.month,fec.date - 1));
				cboTipo.selectedIndex = 0;
			}
				
			private function validar():Boolean{
				if(dtfFecIni.text == ""){
					Alert.show("Seleccione la fecha inicial.",titulo,4,null,null,global.iAlert);
					return false;
				}
				if(dtfFecFin.text == ""){
					Alert.show("Seleccione la fecha final.",titulo,4,null,null,global.iAlert);
					return false;
				}
				if(cboTipo.selectedIndex == 0){
					Alert.show("Seleccione el tipo de póliza.",titulo,4,null,null,global.iAlert);
					return false;
				}
				return true;
			}
		]]>
	</mx:Script>
	<mx:Label id="lblTitulo" x="18" y="10" width="264" fontSize="12" fontWeight="bold" fontStyle="italic"/>
	<mx:Canvas x="17.95" y="53" width="264.05" height="105.5" styleName="canvasMod">
		<mx:Label x="13.5" y="71.5" text="Tipo Registro:" textAlign="right"/>
		<mx:ComboBox id="cboTipo" x="92.5" y="68.5" labelField="descripcion"/>
		<mx:Label x="19.5" y="11" text="Fecha Inicio:" textAlign="right"/>
		<mx:DateField id="dtfFecIni" x="92.5" y="10" width="111"/>
		<mx:Label x="29.5" y="39.5" text="Fecha Fin:" textAlign="right"/>
		<mx:DateField id="dtfFecFin" x="92.5" y="38.5" width="111"/>
	</mx:Canvas>
	<mx:Button x="76.5" y="168.5" label="Generar" click="generar()"/>
	<mx:Button x="155.5" y="169" label="Limpiar" click="limpiar()"/>
	<mx:Label x="18" y="34" text="Criterios de Selección"/>
	<Data:RowColorDataGrid id="dgReporte" visible="false" width="10" height="10">
		<Data:columns>
			<mx:DataGridColumn headerText="COL1" dataField="COL1" width="100"/>
			<mx:DataGridColumn headerText="COL2" dataField="COL2" width="180"/>
			<mx:DataGridColumn headerText="COL3" dataField="COL3" width="60"/>
			<mx:DataGridColumn headerText="COL4" dataField="COL4" width="60"/>
			<mx:DataGridColumn headerText="COL5" dataField="COL5" width="60"/>
			<mx:DataGridColumn headerText="COL6" dataField="COL6" width="60"/>
			<mx:DataGridColumn headerText="COL7" dataField="COL7" width="60"/>
			<mx:DataGridColumn headerText="COL8" dataField="COL8" width="60"/>
			<mx:DataGridColumn headerText="COL9" dataField="COL9" width="60"/>
			<mx:DataGridColumn headerText="COL10" dataField="COL10" width="60"/>
		</Data:columns>	
	</Data:RowColorDataGrid>
</mx:Canvas>