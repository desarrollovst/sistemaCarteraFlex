<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="800" height="480" backgroundAlpha="1.0" 
	backgroundColor="#FFFFFF" creationPolicy="all" creationComplete="initApp()" 
	verticalScrollPolicy="off" horizontalScrollPolicy="off" xmlns:Data="Data.*">
	
	<mx:Script>
		<![CDATA[
			import mx.controls.DataGrid;
			import Data.ExcelExportXls;
			import Data.Globales;
			import Data.Utils;
			import mx.collections.ArrayCollection;
			import mx.core.Application;
			import mx.containers.TitleWindow;			
			import mx.managers.PopUpManager;
			import mx.formatters.NumberFormatter;
			import mx.controls.Alert;
			import mx.effects.easing.Elastic;
			import mx.rpc.soap.WebService;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.utils.ObjectUtil;
			
			private var _xmlExc:XML =  new XML();
			private var _xmlRep:XML =  new XML();
			
			public var excObj:ArrayCollection = new ArrayCollection();
			
			public var wsMS:WebService;
			public var titulo:String;
			private var du:Utils;
			private var global:Globales;

			public function cargaExcepcion():void{
				var wsCat:WebService = new WebService;
				var params:Array = new Array;
				
				du.initWsCat(wsCat);
				du.sCursor();
					
				du.ejecutaWsMethod(wsCat,function(evt:ResultEvent):void {											
					_xmlExc = XML(evt.result.toString());
						
					du.rCursor();
					du.closeWs(wsCat);

					formateaExcepcion();
					cboExcepcion.dataProvider = excObj;		
					wsMS = null;				
				});
				wsCat.getCatalogoGral.send(26);
			}

			public function exportar():void{
				var dgE:ExcelExportXls = new ExcelExportXls();
				dgE.loadDGInExcel(dgReporte,null,titulo);		
			}
			
			public function formateaExcepcion():void{
				var cont:int = _xmlExc.elements().length();
				var oItem:Object;
				var item:Array = new Array;
				
				oItem = new Object();
				oItem.id = "000";	
				oItem.descripcion = "--Todas--";
				item.push(oItem);
		
				for (var i:int = 0; i < cont; i++){
					oItem = new Object();
					oItem.id = _xmlExc.Table[i].CODIGO;	
					oItem.descripcion = _xmlExc.Table[i].DESCRIPCION;
					item.push(oItem);
				}
				excObj = new ArrayCollection(item);
			}
		
			public function generar():void{
				if(valida() == true){
					var excepcion:String;
					var grupo:String;
					var ciclo:String;
					var fecIni:String;
					var fecFin:String;
					
					initConexionRep();
					du.sCursor();
					 
					excepcion = cboExcepcion.selectedItem.id;
					grupo = txtGrupo.text;
					ciclo = txtCiclo.text;
					fecIni = dtfFecha.text;
					fecFin = dtfFechaFinal.text;
							
					du.ejecutaWsMethod(wsMS,function(evt:ResultEvent):void {											
						_xmlRep = new XML(evt.result.toString());
						
						du.rCursor();
						du.closeWs(wsMS);
						
						dgReporte.dataProvider = null;
						btnExportar.enabled = false;
						lblTotal.text = "";
													
						if(_xmlRep.elements().length() > 0){
							var cont:int = _xmlRep.elements().length();
							btnExportar.enabled = true;
							lblTotal.text = cont + " Excepción(es)";
							dgReporte.dataProvider = _xmlRep.Table;	
						}
						else{
							Alert.show("No se encontraron registros que coincidan con los criterios de consulta.\n\nVerifique los datos seleccionados.",titulo,4,null,null,global.iAlert);
							lblTotal.text = "";
						}
						wsMS = null;
					});
					wsMS.getRepExcepciones.send(excepcion, grupo, ciclo, fecIni, fecFin);	
				}
			}			
						
			public function initApp():void{
				global = new Globales();
				du = new Utils();
				titulo = "Reporte de Excepciones";
				lblTitulo.text = titulo.toUpperCase();
				limpiar();
				cargaExcepcion();
			}		
			
			private function initConexion():void{				
				wsMS = new WebService();			
				wsMS.wsdl = Application.application.wsStr.wsdlServ.toString();
				wsMS.loadWSDL();
			}	
			
			private function initConexionRep():void{
				wsMS = new WebService();			
				wsMS.wsdl = Application.application.wsStr.wsdlRep.toString();
				wsMS.loadWSDL();
			}
		
			public function limpiar():void{
				var fec:Date = Application.application._Current_Fecha;
				dtfFecha.selectedDate = global.seleccionaDiaHabil(new Date(fec.fullYear,fec.month,fec.date));
				dtfFechaFinal.selectedDate = global.seleccionaDiaHabil(new Date(fec.fullYear,fec.month,fec.date));
				dgReporte.dataProvider = null;
				btnExportar.enabled = false;
				lblTotal.text = "";
				cboExcepcion.selectedIndex = 0;
				txtGrupo.text = "";
				txtCiclo.text = "";
			}
				
			public function valida():Boolean{
				if(txtGrupo.text != "" && txtCiclo.text == ""){
					Alert.show("Capture el ciclo del préstamo.",titulo,4,null,null,global.iAlert);
					return false;
				}
				if(txtCiclo.text != "" && txtGrupo.text == ""){
					Alert.show("Capture el número de grupo.",titulo,4,null,null,global.iAlert);
					return false;
				}
				return true;
			}
			
			public function validaFecha():void{
				if(dtfFecha.selectedDate > dtfFechaFinal.selectedDate){
					Alert.show("La fecha inicial debe ser menor o igual a la fecha final.",titulo,4,null,null,global.iAlert);
					dtfFecha.selectedDate = dtfFechaFinal.selectedDate;
				}
			}
			
		]]>
	</mx:Script>
	<mx:Label id="lblTitulo" x="18" y="10" width="247" fontSize="12" fontWeight="bold" fontStyle="italic"/>
	<mx:Canvas x="17.95" y="53.5" width="280.05" height="170" styleName="canvasMod">
		<mx:ComboBox id="cboExcepcion" x="10" y="79" width="254.05" labelField="descripcion"/>
		<mx:Label x="10" y="60.5" text="Excepciones" width="117.05" height="20"/>
		<mx:Canvas x="10" y="118" width="254.05" height="38.5" styleName="canvasMod">
			<mx:Label x="14" y="8" text="Grupo:"/>
			<mx:TextInput id="txtGrupo" x="60" y="6" width="70"/>
			<mx:Label x="143.05" y="8" text="Ciclo:"/>
			<mx:TextInput id="txtCiclo" x="184.05" y="6" width="45"/>
		</mx:Canvas>
		<mx:Label x="10" y="10" text="Fecha Inicial" width="81" height="20"/>
		<mx:Label x="141.05" y="10" text="Fecha Final" width="81" height="20"/>
		<mx:DateField id="dtfFecha" x="10" y="28.5" width="111" change="validaFecha()"/>
		<mx:DateField id="dtfFechaFinal" x="141.05" y="28.5" width="111" change="validaFecha()"/>
	</mx:Canvas>
	<mx:Button x="71.75" y="231.5" label="Generar" click="generar()"/>
	<mx:Button x="150.75" y="231.5" label="Limpiar" width="71" height="24" click="limpiar()"/>
	<mx:Label x="18" y="34" text="Criterios de Selección" width="124.25"/>
	<Data:RowColorDataGrid id="dgReporte" x="18.45" y="263.5" width="763.05" visible="true" 
		height="177.5" horizontalScrollPolicy="on">
		<Data:columns>
			<mx:DataGridColumn headerText="GRUPO" dataField="CDGNS" width="100"/>
			<mx:DataGridColumn headerText="NOMBRE GRUPO" dataField="GRUPO" width="150"/>
			<mx:DataGridColumn headerText="CICLO" dataField="CICLO" width="50"/>
			<mx:DataGridColumn headerText="EXCEPCION" dataField="EXCEPCION" width="150"/>
			<mx:DataGridColumn headerText="OBSERVACION" dataField="OBSERVACION" width="250"/>
			<mx:DataGridColumn headerText="SUCURSAL" dataField="COORD" width="70"/>
			<mx:DataGridColumn headerText="NOMBRE SUCURAL" dataField="NOMCO" width="150"/>
			<mx:DataGridColumn headerText="REGION" dataField="REGION" width="150"/>
			<mx:DataGridColumn headerText="ASESOR" dataField="ASESOR" width="70"/>
			<mx:DataGridColumn headerText="NOMBRE ASESOR" dataField="NOMPE" width="150"/>
		</Data:columns>
	</Data:RowColorDataGrid>
	<mx:Button id="btnExportar" x="678.5" y="231.5" label="Exportar Excel" click="exportar()" enabled="false"/>
	<mx:Label id="lblTotal" x="18.45" y="449" width="470.05" fontWeight="bold" fontStyle="italic" fontSize="12"/>
</mx:Canvas>