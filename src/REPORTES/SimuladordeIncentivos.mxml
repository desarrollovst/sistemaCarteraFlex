<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" creationComplete="initApp()"
	verticalScrollPolicy="auto" horizontalScrollPolicy="auto" xmlns:control="Controls.*">
	<mx:states>
		<mx:State name="Coord">
			<mx:SetProperty target="{cvGeneral}" name="width" value="946"/>
			<mx:SetProperty target="{cvGeneral}" name="height" value="514"/>
			<mx:AddChild relativeTo="{cvGeneral}" position="lastChild">
				<mx:Canvas x="10" y="279" width="924" height="226" styleName="canvasMod" id="cvGeneralCoord">
					<mx:Button x="764" y="190" label="Generar" click="generarCoord()" id="btnGenerarC"/>
					<mx:Button x="844" y="190" label="Limpiar" click="limpiar()" id="btnLimpiarC"/>
					<mx:DataGrid id="dgDatos" x="10" y="10" width="902" height="172" horizontalScrollPolicy="on"  sortableColumns="false" 
						draggableColumns="false" resizableColumns="false" verticalScrollPolicy="on" editable="true">										
						<mx:columns>
							<mx:DataGridColumn headerText="CÓDIGO" dataField="CODIGO" width="60" editable="false"/>
							<mx:DataGridColumn headerText="NOMBRE" dataField="NOMBREC" width="250" editable="false"/>
							<mx:DataGridColumn headerText="SEMANA 1" dataField="SEM1" width="70" editable="true">
								<mx:itemEditor>
									<mx:Component>
										<mx:TextInput width="70" fontSize="10" verticalCenter="0" change="outerDocument.validaMonto(event)" restrict="0-9;."/> 
									</mx:Component>
								</mx:itemEditor>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText="SEMANA 2" dataField="SEM2" width="70" editable="true">
								<mx:itemEditor>
									<mx:Component>
										<mx:TextInput width="70" fontSize="10" verticalCenter="0" change="outerDocument.validaMonto(event)" restrict="0-9;."/> 
									</mx:Component>
								</mx:itemEditor>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText="SEMANA 3" dataField="SEM3" width="70" editable="true">
								<mx:itemEditor>
									<mx:Component>
										<mx:TextInput width="70" fontSize="10" verticalCenter="0" change="outerDocument.validaMonto(event)" restrict="0-9;."/> 
									</mx:Component>
								</mx:itemEditor>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText="SEMANA 4" dataField="SEM4" width="70" editable="true">
								<mx:itemEditor>
									<mx:Component>
										<mx:TextInput width="70" fontSize="10" verticalCenter="0" change="outerDocument.validaMonto(event)" restrict="0-9;."/> 
									</mx:Component>
								</mx:itemEditor>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText="% MORA" dataField="MORA" width="60" editable="true">
								<mx:itemEditor>
									<mx:Component>
										<mx:TextInput width="60" fontSize="10" verticalCenter="0" change="outerDocument.validaMonto(event)" restrict="0-9;." /> 
									</mx:Component>
								</mx:itemEditor>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText="% PAGO" dataField="PAGO" width="60" editable="true">
								<mx:itemEditor>
									<mx:Component>
										<mx:TextInput width="60" fontSize="10" verticalCenter="0" change="outerDocument.validaMonto(event)" restrict="0-9;." /> 
									</mx:Component>
								</mx:itemEditor>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText="INT. COBRADO" dataField="INTERES" width="95" editable="false"/>
							<mx:DataGridColumn headerText="INCENTIVO" dataField="INCENTIVO" width="70" editable="false"/>
							<mx:DataGridColumn headerText="CLASIFICACIÓN INICIO" dataField="CLASIFICACION_I" width="140" editable="false"/>
							<mx:DataGridColumn headerText="CLASIFICACIÓN FIN" dataField="CLASIFICACION_F" width="140" editable="false"/>
						</mx:columns>
					</mx:DataGrid>
				</mx:Canvas>
			</mx:AddChild>
		</mx:State>
		<mx:State name="Asesor">
			<mx:SetProperty target="{cvGeneral}" name="width" value="738"/>
			<mx:SetProperty target="{cvGeneral}" name="height" value="562"/>
			<mx:AddChild relativeTo="{cvGeneral}" position="lastChild">
				<mx:Canvas x="10" y="279" width="716" height="273" styleName="canvasMod" id="cvGeneralAsesor">
					<mx:Button x="556" y="237" label="Generar" click="generarAsesor()" id="btnGenerarA"/>
					<mx:Button x="636" y="237" label="Limpiar" click="limpiar()" id="btnLimpiarA"/>
					<mx:Canvas x="10" y="32" width="200" height="197" styleName="canvasMod">
						<mx:Label id="lblSem1" x="16.5" y="11" text="Semana 1:" fontSize="12"/>
						<mx:TextInput id="txtSem1" x="89.5" y="10" restrict="0-9;." width="92" change="validaMonto(event)"/>
						<mx:Label id="lblSem2" x="16.5" y="41" text="Semana 2:" fontSize="12"/>
						<mx:TextInput id="txtSem2" x="89.5" y="40" restrict="0-9;." width="92" change="validaMonto(event)"/>
						<mx:Label id="lblSem3" x="16.5" y="71" text="Semana 3:" fontSize="12"/>
						<mx:TextInput id="txtSem3" x="89.5" y="70" restrict="0-9;." width="92" change="validaMonto(event)"/>
						<mx:Label id="lblSem4" x="16.5" y="101" text="Semana 4:" fontSize="12"/>
						<mx:TextInput id="txtSem4" x="89.5" y="100" restrict="0-9;." width="92" change="validaMonto(event)"/>
						<mx:Label id="lblMora" x="32.5" y="131" text="% Mora:" fontSize="12"/>
						<mx:TextInput id="txtMora" x="89.5" y="130" restrict="0-9;." width="92" change="validaMonto(event)"/>
						<mx:Label id="lblPagos" x="23.5" y="161" text="% Pagos:" fontSize="12"/>
						<mx:TextInput id="txtPagos" x="89.5" y="160" restrict="0-9;." width="92" change="validaMonto(event)"/>
					</mx:Canvas>
					<mx:Label x="10" y="10" text="Criterios:"/>
					<mx:Canvas x="218" y="32" width="486" height="197" styleName="canvasMod">
						<mx:Label id="lblClaI" x="10" y="29" text="CLASIFICACIÓN INICIAL:" fontSize="16"/>
						<mx:Label id="lblClasificacionI" x="10" y="52" width="220" height="40" textAlign="center" fontSize="29"/>
						<mx:Label id="lblClaF" x="10" y="100" text="CLASIFICACIÓN FINAL:" fontSize="16"/>
						<mx:Label id="lblClasificacionF" x="10" y="123" width="220" height="40" textAlign="center" fontSize="29"/>
						<mx:Label id="lblInte" x="254" y="29" text="INTERÉS GENERADO:" fontSize="16"/>
						<mx:Label id="lblInteres" x="254" y="52" width="220" height="40" textAlign="center" fontSize="32"/>
						<mx:Label id="lblInce" x="254" y="100" text="INCENTIVO:" fontSize="16"/>
						<mx:Label id="lblIncentivo" x="254" y="123" width="220" height="40" textAlign="center" fontSize="32"/>
					</mx:Canvas>
					<mx:Label x="218" y="10" text="Resultado:"/>
				</mx:Canvas>
			</mx:AddChild>
		</mx:State>
	</mx:states>
	<mx:transitions>
		<mx:Transition fromState="*" toState="*">		
			<mx:Sequence>
				<mx:Resize duration="500" target="{cvGeneral}"/> 
				<mx:AddChildAction duration="500" target="{cvGeneralCoord}"/>
				<mx:AddChildAction duration="500" target="{cvGeneralAsesor}"/>
			</mx:Sequence>		
		</mx:Transition>
	</mx:transitions>
	
	<mx:Script>
		<![CDATA[
			import mx.controls.DateField;
			import mx.controls.dataGridClasses.DataGridColumn;
			import Data.Globales;
			import Data.Utils;
			import Data.DatosParamMarcABC;
			import Data.EventParamMarcABC;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.ComboBox;
			import mx.controls.DataGrid;    				
			import mx.core.Application;
			import mx.effects.easing.Elastic;
			import mx.events.CloseEvent;
			import mx.events.DataGridEvent;				
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.events.ValidationResultEvent;
			import mx.formatters.NumberFormatter;
			import mx.formatters.SwitchSymbolFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent
			import mx.rpc.Fault;
			import mx.rpc.soap.WebService;
			import Data.ExcelExportXls;
			import mx.controls.TextInput;
			
			private var wsMS:WebService;
			private var titulo:String;
			private var du:Utils;
			private var global:Globales;
			
			private var vResult:ValidationResultEvent;
			
			public var acAsesor:ArrayCollection = new ArrayCollection();
			public var acReporte:ArrayCollection = new ArrayCollection();
			
			public var _xmlRep:XML = new XML();

			private var aAsesor:Array;
			private var aNomAsesor:Array;
			private var aSemana1:Array;
			private var aSemana2:Array;
			private var aSemana3:Array;
			private var aSemana4:Array;
			private var aMora:Array;
			private var aPago:Array;

			private function cargaAsesor(ev:Event):void{
				modificarEstado()
				acAsesor = new ArrayCollection();
				
				if(ctrlFiltro.obtieneIndCoord() > 0){
					formateaAsesores();
					dgDatos.dataProvider = acAsesor;
				}
			}
			
			private function cargaCoord(ev:Event):void{
				modificarEstado()
				acAsesor = new ArrayCollection();
			}
			
			private function cargaRegion(ev:Event):void{
				modificarEstado()
				acAsesor = new ArrayCollection();
			}
			
			private function formateaAsesor():void{
				var cont:int = ctrlFiltro._xmlAsesor.elements().length();
				var oItem:Object;
				var item:Array = new Array();
				
				for(var i:int = 0; i < cont; i++){
					if(ctrlFiltro._xmlAsesor.Table[i].CODIGO == ctrlFiltro.cboAsesor.selectedItem.codigo){
						oItem = new Object(); 
						oItem.CODIGO = ctrlFiltro._xmlAsesor.Table[i].CODIGO;
						oItem.NOMBREC = ctrlFiltro._xmlAsesor.Table[i].NOMBREC;
						item.push(oItem);
					}
				}
				
				acAsesor.source = acAsesor.source.concat(item);
			}
			
			private function formateaAsesorReporte():void{
				var cont:int = _xmlRep.elements().length();
				var oItem:Object;
				var item:Array = new Array();
				
				for(var i:int = 0; i < cont; i++){
					oItem = new Object(); 
					oItem.CODIGO = _xmlRep.Table[i].CODIGO;
					oItem.NOMBREC = _xmlRep.Table[i].NOMBREC;
					oItem.SEM1 = _xmlRep.Table[i].SEM1;
					oItem.SEM2 = _xmlRep.Table[i].SEM2;
					oItem.SEM3 = _xmlRep.Table[i].SEM3;
					oItem.SEM4 = _xmlRep.Table[i].SEM4;
					oItem.MORA = _xmlRep.Table[i].MORA;
					oItem.PAGO = _xmlRep.Table[i].PAGO;
					oItem.INTERES = _xmlRep.Table[i].INTERES;
					oItem.INCENTIVO = _xmlRep.Table[i].INCENTIVO;
					oItem.CLASIFICACION_I = _xmlRep.Table[i].CLASIFICACION_I;
					oItem.CLASIFICACION_F = _xmlRep.Table[i].CLASIFICACION_F;
					item.push(oItem);
				}
				
				acReporte.source = acReporte.source.concat(item);
			}
			
			private function formateaAsesores():void{
				var cont:int = ctrlFiltro._xmlAsesor.elements().length();
				var oItem:Object;
				var item:Array = new Array();
				
				for(var i:int = 0; i < cont; i++){
					if(ctrlFiltro._xmlAsesor.Table[i].PUESTO.toString() == "A" && Number(ctrlFiltro._xmlAsesor.Table[i].TELEFONO.toString()) <= 9000){
						oItem = new Object();
						oItem.CODIGO = ctrlFiltro._xmlAsesor.Table[i].CODIGO;
						oItem.NOMBREC = ctrlFiltro._xmlAsesor.Table[i].NOMBREC;
						item.push(oItem);
					}
				}
				
				acAsesor.source = acAsesor.source.concat(item);
			}
			
			private function generarAsesor():void{
				if(ctrlFiltro.obtieneIndAsesor() == 0){
					Alert.show("Debe de selecciónar un asesor." ,titulo,4,null,null,global.iAlert);
					return;
				}
				
				if(validaAsesor()){
					
					var vFecha:Date = Application.application._Current_Fecha;
					var vTipo:Number = 1; // Calcula solo el registro del asesor
					
					aAsesor = new Array;
					aNomAsesor = new Array;
					aSemana1 = new Array;
					aSemana2 = new Array;
					aSemana3 = new Array;
					aSemana4 = new Array;
					aMora = new Array;
					aPago = new Array;
										
					aAsesor[0] = ctrlFiltro.cboAsesor.selectedItem.codigo;
					aNomAsesor[0] = ctrlFiltro.cboAsesor.selectedItem.nombre;
					aSemana1[0] = QuitaMontoFormato(txtSem1.text);
					aSemana2[0] = QuitaMontoFormato(txtSem2.text);
					aSemana3[0] = QuitaMontoFormato(txtSem3.text);
					aSemana4[0] = QuitaMontoFormato(txtSem4.text);
					aMora[0] = QuitaMontoFormato(txtMora.text);
					aPago[0] = QuitaMontoFormato(txtPagos.text);
					
					initConexion();
					du.sCursor();
					Application.application.bloquear();
					
					wsMS.addEventListener(ResultEvent.RESULT, setSimuladorIncentivosAsesor);
					wsMS.setSimuladorIncentivo.send(aAsesor, aNomAsesor, aSemana1, aSemana2, aSemana3, aSemana4, aMora, aPago, vFecha, Application.application.U_ID, vTipo);
				}
			}
			
			private function generarCoord():void{
				
				if(ctrlFiltro.obtieneIndCoord() == 0){
					Alert.show("Debe de selecciónar un coordinador." ,titulo,4,null,null,global.iAlert);
					return;
				}
				
				var acDatos:ArrayCollection = dgDatos.dataProvider as ArrayCollection;
				var vFecha:Date = Application.application._Current_Fecha;
				var vTipo:Number = 2; // Permite calcular el incentivo del coordinador
				
				trace("acDatos: " + acDatos.length);
				
				if(acDatos.length > 0){
				
					aAsesor = new Array;
					aNomAsesor = new Array;
					aSemana1 = new Array;
					aSemana2 = new Array;
					aSemana3 = new Array;
					aSemana4 = new Array;
					aMora = new Array;
					aPago = new Array;
					
					var n:int = 0;
					
					for(var i:int = 0; i < acDatos.length; i++){
						
						if(acDatos[i].CODIGO != "TOTAL"){
													
							trace("SEM1: " + acDatos[i].SEM1);
							trace("SEM2: " + acDatos[i].SEM2);
							trace("SEM3: " + acDatos[i].SEM3);
							trace("SEM4: " + acDatos[i].SEM4);
							trace("MORA: " + acDatos[i].MORA);
							trace("PAGO: " + acDatos[i].PAGO);
							
							if ((acDatos[i].SEM1 == "" || acDatos[i].SEM1 == " " || acDatos[i].SEM1 == undefined) &&
							    (acDatos[i].SEM2 == "" || acDatos[i].SEM2 == " " || acDatos[i].SEM2 == undefined) &&
							    (acDatos[i].SEM3 == "" || acDatos[i].SEM3 == " " || acDatos[i].SEM3 == undefined) &&
							    (acDatos[i].SEM4 == "" || acDatos[i].SEM4 == " " || acDatos[i].SEM4 == undefined) &&
							    (acDatos[i].MORA == "" || acDatos[i].MORA == " " || acDatos[i].MORA == undefined) &&
							    (acDatos[i].PAGO == "" || acDatos[i].PAGO == " " || acDatos[i].PAGO == undefined)){
							
								
								
							}
							else{
								
								if((acDatos[i].MORA == "" || acDatos[i].MORA == " " || acDatos[i].MORA == undefined)){
									Alert.show(acDatos[i].NOMBREC + ". No cuenta con un formato valido en monto de % mora." ,titulo,4,null,null,global.iAlert);
									return;
								}
								
								if((acDatos[i].PAGO == "" || acDatos[i].PAGO == " " || acDatos[i].PAGO == undefined)){
									Alert.show(acDatos[i].NOMBREC + ". No cuenta con un formato valido en monto de % pagos." ,titulo,4,null,null,global.iAlert);
									return;
								}
								
								if((acDatos[i].SEM1 == "" || acDatos[i].SEM1 == " " || acDatos[i].SEM1 == undefined)){
									acDatos[i].SEM1 = 0;
								}
								
								if((acDatos[i].SEM2 == "" || acDatos[i].SEM2 == " " || acDatos[i].SEM2 == undefined)){
									acDatos[i].SEM2 = 0;
								}
								
								if((acDatos[i].SEM3 == "" || acDatos[i].SEM3 == " " || acDatos[i].SEM3 == undefined)){
									acDatos[i].SEM3 = 0;
								}
								
								if((acDatos[i].SEM4 == "" || acDatos[i].SEM4 == " " || acDatos[i].SEM4 == undefined)){
									acDatos[i].SEM4 = 0;
								}
							    	
							    aAsesor[n] = acDatos[i].CODIGO;
								aNomAsesor[n] = acDatos[i].NOMBREC;
								aSemana1[n] = QuitaMontoFormato(acDatos[i].SEM1);
								aSemana2[n] = QuitaMontoFormato(acDatos[i].SEM2);
								aSemana3[n] = QuitaMontoFormato(acDatos[i].SEM3);
								aSemana4[n] = QuitaMontoFormato(acDatos[i].SEM4);
								aMora[n] = QuitaMontoFormato(acDatos[i].MORA);
								aPago[n] = QuitaMontoFormato(acDatos[i].PAGO);
								
								n++;
							}
							
							trace("SEM1: " + acDatos[i].SEM1);
							trace("SEM2: " + acDatos[i].SEM2);
							trace("SEM3: " + acDatos[i].SEM3);
							trace("SEM4: " + acDatos[i].SEM4);
							trace("MORA: " + acDatos[i].MORA);
							trace("PAGO: " + acDatos[i].PAGO);
						}
					}
					
					if(aAsesor.length > 0){
						initConexion();
						du.sCursor();
						Application.application.bloquear();
						
						trace("TIPO: " + vTipo);
						
						wsMS.addEventListener(ResultEvent.RESULT, setSimuladorIncentivosCoord);
						wsMS.setSimuladorIncentivo.send(aAsesor, aNomAsesor, aSemana1, aSemana2, aSemana3, aSemana4, aMora, aPago, vFecha, Application.application.U_ID, vTipo);
					}
					else
						Alert.show("Se deben proporcionar al menos los datos de un asesor",titulo,4,null,null,global.iAlert);
				}
				else
					Alert.show("Se debe elegir al menos un asesor",titulo,4,null,null,global.iAlert);
			}
			
			private function initApp():void{
				global = new Globales();
				du = new Utils();
				titulo = "Simulador de Incentivos";
				lblTitulo.text = titulo.toUpperCase();
				ctrlFiltro.init(true);
				ctrlFiltro.limpiar();
				ctrlFiltro.addEventListener("selecAsesor",seleccionaAsesor);
				ctrlFiltro.addEventListener("cargaAsesor",cargaAsesor);
				ctrlFiltro.addEventListener("cargaRegion",cargaRegion);
				ctrlFiltro.addEventListener("cargaCoord",cargaCoord);
				
				// Se calcula el número de semanas que contiene el mes
				var semanas:int = 0;
				var fechaActual:Date = Application.application._Current_Fecha;
				var fechaInicio:Date = new Date(fechaActual.getFullYear(), fechaActual.month, 1);
				var fechaFin:Date = new Date(fechaActual.getFullYear(), fechaActual.month + 1, 1 - 1);
				var Dias:int = fechaFin.getDate();
				var DiaInicio:int = fechaInicio.day;
				var i:int = 0;
							
				for(i = 0; i <= Dias; i++){
					fechaInicio = new Date(fechaInicio.fullYear, fechaInicio.month, fechaInicio.date + 1);
					
					if(fechaInicio.day == DiaInicio)
						semanas = semanas + 1;
				}
			}
			
			private function initConexion():void{				
				wsMS = new WebService();			
				wsMS.wsdl = Application.application.wsStr.wsdlIncR.toString();
				wsMS.loadWSDL();
			}
			
			private function initConexionRep():void{				
				wsMS = new WebService();			
				wsMS.wsdl = Application.application.wsStr.wsdlIncC.toString();
				wsMS.loadWSDL();
			}
			
			private function limpiar():void{
				ctrlFiltro.limpiar();
				btnGenerarC.enabled = true;
			}
			
			private function modificarEstado():void{
				var idReg:Number = ctrlFiltro.obtieneIndRegion();
				var idSuc:Number = ctrlFiltro.obtieneIndSucursal();
				var idCoord:Number = ctrlFiltro.obtieneIndCoord();
				var idAsesor:Number = ctrlFiltro.obtieneIndAsesor();
				
				if(idReg == 0){
					currentState = null;
				}			
				else if(idSuc == 0){
					currentState = null;
				}
				else if(idCoord == 0){
					currentState = null;
				}
				else if(idAsesor > 0){ //Coordinador
					currentState = "Asesor";
					
					txtSem1.text = "";
					txtSem2.text = "";
					txtSem3.text = "";
					txtSem4.text = "";
					txtMora.text = "";
					txtPagos.text = "";
					lblInteres.text = "";
					lblIncentivo.text = "";
					lblClasificacionI.text = "";
					lblClasificacionF.text = "";
					
					btnGenerarA.enabled = true;
				}
				else{
					currentState = "Coord";
					dgDatos.dataProvider = null;
					
					btnGenerarC.enabled = true;
				}
			}
			
			private function QuitaMontoFormato(valor:String):Number{
				var occurs:int = valor.split(",").length - 1;
				
				for(var i:int = 0; i<= occurs; i++){
					valor = valor.replace(',','');
				}
				
				return Number(valor);
			}
			
			private function seleccionaAsesor(ev:Event):void{
				modificarEstado()
				dgDatos.dataProvider = null;
				acAsesor = new ArrayCollection();
				
				if(ctrlFiltro.obtieneIndAsesor() > 0){
					formateaAsesor();
					dgDatos.dataProvider = acAsesor;
				}
				else{
					formateaAsesores();
					dgDatos.dataProvider = acAsesor;
				}
			}
				
			private function setSimuladorIncentivosAsesor(event:ResultEvent):void{
				wsMS.disconnect();
				du.rCursor();
				Application.application.desbloquear();
								
				wsMS.removeEventListener(ResultEvent.RESULT, setSimuladorIncentivosAsesor);
				wsMS = null;
				var res:String = event.result.toString();
				
				if (res.substr(0,1) == "1"){
					initConexionRep();
					du.sCursor();
					Application.application.bloquear();
					lblInteres.text = "";
					lblIncentivo.text = "";
					lblClasificacionI.text = "";
					lblClasificacionF.text = "";
						
					du.ejecutaWsMethod(wsMS,function(evt:ResultEvent):void {											
						_xmlRep = new XML(evt.result.toString());
						
						du.rCursor();
						du.closeWs(wsMS);	
						Application.application.desbloquear();
							
						var cont:int = _xmlRep.elements().length();
						if(cont > 0){
							
							txtSem1.text = _xmlRep.Table[0].SEM1;
							txtSem2.text = _xmlRep.Table[0].SEM2;
							txtSem3.text = _xmlRep.Table[0].SEM3;
							txtSem4.text = _xmlRep.Table[0].SEM4;
							txtMora.text = _xmlRep.Table[0].MORA;
							txtPagos.text = _xmlRep.Table[0].PAGO;
							
							lblClasificacionI.text = _xmlRep.Table[0].CLASIFICACION_I;
							lblClasificacionF.text = _xmlRep.Table[0].CLASIFICACION_F;
							lblInteres.text = _xmlRep.Table[0].INTERES;
							lblIncentivo.text = _xmlRep.Table[0].INCENTIVO;
						}
						else
							Alert.show("No se encontraron registros.",titulo,4,null,null,global.iAlert);
						
					});
					wsMS.getSimuladorIncentivos.send(Application.application.U_ID);
				}	
				else
					Alert.show(res.substr(2,res.length -1),titulo,4,null,null,global.iAlert);		
			}
				
			private function setSimuladorIncentivosCoord(event:ResultEvent):void{
				wsMS.disconnect();
				du.rCursor();
				Application.application.desbloquear();
								
				wsMS.removeEventListener(ResultEvent.RESULT, setSimuladorIncentivosCoord);
				wsMS = null;
				var res:String = event.result.toString();
				
				if (res.substr(0,1) == "1"){
					initConexionRep();
					du.sCursor();
					Application.application.bloquear();
					
					dgDatos.dataProvider = null;
					acReporte = new ArrayCollection();	
						
					du.ejecutaWsMethod(wsMS,function(evt:ResultEvent):void {											
						_xmlRep = new XML(evt.result.toString());
						
						du.rCursor();
						du.closeWs(wsMS);	
						Application.application.desbloquear();
							
						var cont:int = _xmlRep.elements().length();
						if(cont > 0){
							formateaAsesorReporte();
							dgDatos.dataProvider = acReporte;
						}
						else
							Alert.show("No se encontraron registros.",titulo,4,null,null,global.iAlert);
					});
					wsMS.getSimuladorIncentivos.send(Application.application.U_ID);
				}	
				else
					Alert.show(res.substr(2,res.length -1),titulo,4,null,null,global.iAlert);		
			}
			
			private function validaAsesor():Boolean{
				if(txtSem1.text == ""){
					Alert.show("Debe de asignar la cartera de la semana 1." ,titulo,4,null,null,global.iAlert);
					return false;
				}
				if(txtSem2.text == ""){
					Alert.show("Debe de asignar la cartera de la semana 2." ,titulo,4,null,null,global.iAlert);
					return false;
				}
				if(txtSem3.text == ""){
					Alert.show("Debe de asignar la cartera de la semana 3." ,titulo,4,null,null,global.iAlert);
					return false;
				}
				if(txtSem4.text == ""){
					Alert.show("Debe de asignar la cartera de la semana 4." ,titulo,4,null,null,global.iAlert);
					return false;
				}
				if(txtMora.text == ""){
					Alert.show("Debe de asignar el porcentaje de mora." ,titulo,4,null,null,global.iAlert);
					return false;
				}
				if(txtPagos.text == ""){
					Alert.show("Debe de asignar el porcentaje de pagos." ,titulo,4,null,null,global.iAlert);
					return false;
				}
				
				return true;
			}
			
			public function validaMonto(event:Event):void{	
				numVal.source = TextInput(event.currentTarget);
				vResult = numVal.validate();

				if (vResult.type!=ValidationResultEvent.VALID)
                	TextInput(event.currentTarget).text = "";
			}
		]]>
	</mx:Script>
	
	<mx:NumberValidator id="numVal" property="text" precision="2"
	        allowNegative="true" domain="real" decimalSeparator="." thousandsSeparator="," required="false"/>
	<mx:Canvas x="0" y="0" width="330" height="281" id="cvGeneral" backgroundColor="#FFFFFF">
		<mx:Label id="lblTitulo" x="10" y="10" width="307" fontSize="12" fontWeight="bold" fontStyle="italic"/>
		<mx:Canvas x="10.45" y="59" width="307.05" height="212" styleName="canvasMod">
			<control:CtrlFiltroInfoRSCA id="ctrlFiltro" x="28.5" y="3" />
		</mx:Canvas>
		<mx:Label x="10" y="41" text="Criterios de Selección:"/>
	</mx:Canvas>
</mx:Canvas>