<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="320" height="200" backgroundAlpha="1.0" backgroundColor="#FFFFFF" 
	creationPolicy="all" xmlns:local="*" creationComplete="initApp()" xmlns:Data="Data.*">
	<mx:states>
		<mx:State name="historico">
			<mx:SetProperty name="width" value="406"/>
			<mx:SetProperty name="height" value="270"/>
			<mx:AddChild position="lastChild">
				<Data:RowColorDataGrid id="dgAcred" x="19" y="70" width="368" visible="true" height="158" 
									   sortableColumns="true" doubleClickEnabled="true" doubleClick="consultaBuro()">
					<Data:columns>
						<mx:DataGridColumn headerText="ACREDITADO" dataField="CDGCL"/>
						<mx:DataGridColumn headerText="CONSULTA" dataField="FECHACONS"/>
						<mx:DataGridColumn headerText="VIGENCIA" dataField="FECHAVIG"/>
					</Data:columns>
				</Data:RowColorDataGrid>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:Button x="307" y="236" label="Consultar" id="btnBuscar" click="consultaBuro()"/>
			</mx:AddChild>
			<mx:AddChild relativeTo="{btnBuscar}" position="before">
				<mx:Label id="lblReporte" x="17.75" y="39" width="370.5" fontSize="12" fontWeight="bold" fontStyle="italic"/>
			</mx:AddChild>
			<mx:RemoveChild target="{canvas1}"/>
			<mx:RemoveChild target="{label1}"/>
			<mx:RemoveChild target="{btnGenerar}"/>
			<mx:RemoveChild target="{btnLimpiar}"/>
		</mx:State>
	</mx:states>
	
	<mx:transitions>
		<mx:Transition toState="historico">		
			<mx:Sequence>
				<mx:Resize duration="1000" target="{this}"/> 
			</mx:Sequence>				
		</mx:Transition>
	</mx:transitions>
	
	<mx:Script>
		<![CDATA[
			import Data.Globales;
			import Data.Utils;
			import mx.collections.ArrayCollection;
			import mx.core.Application;	
			import mx.controls.Alert;
			import mx.controls.DataGrid;
			import mx.effects.easing.Elastic;
			import mx.formatters.NumberFormatter;	
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.soap.WebService;
			import mx.utils.ObjectUtil;
			
			private var _xmlAcred:XML = new XML();
			private var _xmlRes:XML = new XML();
			
			public var repObj:ArrayCollection = new ArrayCollection();
			
			public var wsMS:WebService;
			public var titulo:String;
			public var rep:String;
			public var tipoRep:String;
			private var du:Utils;
			private var global:Globales;
		
			private function consultaBuro():void{
				if(dgAcred.selectedIndex >= 0){
					var id:String = "&id=" + rep;
					var acred:String = "&acred=" + dgAcred.selectedItem.CDGCL;
					var usuario:String = "&usuario=" + global.obtenerUsuario();
					var nomUsuario:String = "&nomUsuario=" + global.obtenerNombreUsuario();
					var fecha:String = "&fecha=" + global.formatearFechaSep(global.convCadenaFecha(dgAcred.selectedItem.FECHACONS),"-");
					var tipo:String = "&tipo=C";
					var sic:String = "&sic=CC";
						
					var consulta:String = global.urlPdf + id + acred + usuario + nomUsuario + fecha + tipo + sic;
					Application.application.muestraPdf(consulta);
				}	
				else
					Alert.show("Debe seleccionar un registro de la lista.",titulo,4,null,null,global.iAlert);
			}
			
			private function consultar():void{
				if(validar()){
					var wsCat:WebService = new WebService;
					var params:Array = new Array;
					var acred:String = txtAcred.text;
					
					du.initWsCat(wsCat);
					du.sCursor();
					
					du.ejecutaWsMethod(wsCat,function(ev:ResultEvent):void{
						_xmlRes = new XML(ev.result.toString());
						
						du.rCursor();
						du.closeWs(wsCat);
						
						if(_xmlRes.elements().length() > 0){
							initConexion();
							du.sCursor();
									
							tipoRep = cboTipoRep.selectedItem.id;
									
							du.ejecutaWsMethod(wsMS,function(evt:ResultEvent):void {											
								_xmlAcred = new XML(evt.result.toString());
								
								du.rCursor();
								du.closeWs(wsMS);
															
								if(_xmlAcred.elements().length() > 0){
									var tipo:String = cboTipoRep.selectedLabel;
									currentState = "historico";
									lblReporte.text = tipo.toUpperCase();
									dgAcred.dataProvider = null;
									dgAcred.dataProvider = _xmlAcred.Table;
								}
								else{
									Alert.show("No se encontraron registros que coincidan con los criterios de consulta.\n\nVerifique los datos seleccionados.",titulo,4,null,null,global.iAlert);
								}
							});
							wsMS.getConsultaRepCreditoHist.send(acred, tipoRep);
						}
						else
							Alert.show("No es posible consultar la información del acreditado.\n\nVerifique los datos capturados.",titulo,4,null,null,global.iAlert);
					});
					params[0] = global.obtenerUsuario();
					params[1] = acred;
					params[2] = "G";
 					wsCat.getListado.send(52, params);
				}
			}
			
			private function formateaReporte():void{
				var oItem:Object;
				var item:Array = new Array();
				
				oItem = new Object();
				oItem.id = "0";	
				oItem.descripcion = "--Seleccionar--";
				item.push(oItem);
				
				/*oItem = new Object();
				oItem.descripcion = "Buro de Crédito";
				oItem.id = "BC";
				repObj.addItem(oItem);*/
				
				oItem = new Object();
				oItem.descripcion = "Circulo de Crédito";
				oItem.id = "CC";
				item.push(oItem);
				
				repObj = new ArrayCollection(item);
			}
		
			public function initApp():void{
				global = new Globales();
				du = new Utils();
				rep = "19";
				titulo = "Histórico de Reportes de Crédito";
				lblTitulo.text = titulo.toUpperCase();
				formateaReporte();
				cboTipoRep.dataProvider = repObj;
				limpiar();			
			}		
			
			private function initConexion():void{				
				wsMS = new WebService();			
				wsMS.wsdl = Application.application.wsStr.wsdlRep.toString();
				wsMS.loadWSDL();
			}	
			
			private function limpiar():void{
				txtAcred.text = "";
				if(repObj.length == 2)
					cboTipoRep.selectedIndex = 1;
			}
			
			private function validar():Boolean{
				if(txtAcred.text == ""){
					Alert.show("Debe capturar el código del acreditado",titulo,4,null,null,global.iAlert);
					return false;	
				}
				if(cboTipoRep.selectedIndex == 0){
					Alert.show("Debe seleccionar el tipo de reporte de crédito",titulo,4,null,null,global.iAlert);
					return false;
				}
				return true;
			} 
		]]>
	</mx:Script>
	<mx:Label id="lblTitulo" x="16.5" y="10" width="286.45" fontSize="12" fontWeight="bold" fontStyle="italic"/>
	<mx:Canvas x="17.95" y="53.5" width="285" height="104.5" styleName="canvasMod" id="canvas1">
		<mx:Label id="lblAcred" x="37" y="20.5" text="Acreditado:" width="63.5" height="20" textAlign="right"/>
		<mx:TextInput id="txtAcred" x="108.5" y="18.5" maxChars="6" restrict="0-9" enter="consultar()"/>
		<mx:Label id="lblTipoRep" x="10" y="62.5" text="Tipo de Reporte:" width="90.5" height="20" textAlign="right"/>
		<mx:ComboBox id="cboTipoRep" labelField="descripcion" x="108.5" y="59.5" />
	</mx:Canvas>
	<mx:Label x="16.5" y="34" text="Criterios de Selección" width="124.25" id="label1"/>
	<mx:Button x="85" y="166" label="Generar" click="consultar()"  id="btnGenerar"/>
	<mx:Button x="164" y="166" label="Limpiar" width="71" height="24" click="limpiar()" id="btnLimpiar"/>
	<!--<local:FiltroAcreditado id="comFiltroAcreditado"/>-->
</mx:Canvas>