<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" creationPolicy="all" 
	creationComplete="initApp()" verticalScrollPolicy="auto" horizontalScrollPolicy="auto" 
	xmlns:control="Controls.*">
	
	<!--Componente de Reporte de Bonos de Microseguros-->
	<mx:Script>
		<![CDATA[
			import Data.ExcelExportXls;
			import Data.Globales;
			import Data.Utils;
			import mx.collections.ArrayCollection;
			import mx.core.Application;
			import mx.controls.Alert;
			import mx.effects.easing.Elastic;
			import mx.events.IndexChangedEvent;		
			import mx.managers.PopUpManager;
			import mx.formatters.NumberFormatter;
			import mx.rpc.soap.WebService;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.utils.ObjectUtil;
			
			private var _xmlRep:XML = new XML();
			
			private var wsMS:WebService;
			private var mes:String;
			private var anio:String;
			private var titulo:String;
			private var du:Utils;
			private var global:Globales;
		
			private function exportar():void{
				var dgE:ExcelExportXls = new ExcelExportXls(); 
				dgE.loadDGInExcel(dgReporte,null,titulo + " de " + mes + " del " + anio);
			}
		
			private function generar():void{
				if(compMesAnio.valida()){
					initConexion();
					du.sCursor();
							
					du.ejecutaWsMethod(wsMS,function(evt:ResultEvent):void {											
						_xmlRep = new XML(evt.result.toString());
						
						du.rCursor();
						du.closeWs(wsMS);
					
						btnExportar.enabled = false;
													
						if(_xmlRep.elements().length() > 0){
							//se resta 1 debido a que el grid contiene un registro adicional
							//que corresponde al total
							var cont:int = _xmlRep.elements().length();							
							btnExportar.enabled = true;
							//dgReporte.dataProvider = _xmlRep.Table;
							 formateaReporte();
							lblTotal.text = cont + " Registro(s)";   
							mes = compMesAnio.obtieneNomMes();
							anio = compMesAnio.obtieneAnio();
						}
						else{
							Alert.show("No se encontraron registros que coincidan con los criterios de consulta.\n\nVerifique los datos seleccionados.",titulo,4,null,null,global.iAlert);
							dgReporte.dataProvider = null;
							lblTotal.text = "";
						}
					});
					wsMS.getRepBonosMicroseguros.send(compMesAnio.obtieneMes(), compMesAnio.obtieneAnio());
				}	
			}
			
			private function formateaReporte():void{
				var cont:int = _xmlRep.elements().length();
				var oItem:Object;
				var item:Array = new Array();
				var totalBono:Number = 0;
				var totalMicsgs:Number = 0;
			    var Arr:ArrayCollection;
			  			
				for(var i:int = 0; i < cont; i++){
				    oItem = new Object();				
					oItem.NO_NOMINA = _xmlRep.Table[i].NO_NOMINA;
					oItem.NOM_ASESOR = _xmlRep.Table[i].NOM_ASESOR;
					oItem.MSVENDIDOS = _xmlRep.Table[i].MSVENDIDOS;
					oItem.BONO = _xmlRep.Table[i].BONO;					
					totalBono += Number( _xmlRep.Table[i].BONO);
					totalMicsgs+= Number( _xmlRep.Table[i].MSVENDIDOS);
					item.push(oItem);
				}
				
				oItem = new Object();
				oItem.NO_NOMINA = "";
				oItem.NOM_ASESOR = "TOTAL:";
				oItem.MSVENDIDOS =  global.formatoDecimal(totalMicsgs.toString());
				oItem.BONO = global.formatoDecimal(totalBono.toString());
				item.push(oItem);			
					
				Arr = new ArrayCollection(item);
				dgReporte.dataProvider = Arr;
			}			
						
			public function initApp():void{
				global = new Globales();
				du = new Utils();
				titulo = "Reporte de Bonos de Microseguros";
				compMesAnio.init(titulo);
				lblTitulo.text = titulo.toUpperCase();
				limpiar();
			}		
			
			private function initConexion():void{				
				wsMS = new WebService();			
				wsMS.wsdl = Application.application.wsStr.wsdlRep.toString();
				wsMS.loadWSDL();
			}	
		
			private function limpiar():void{
				var fec:Date;
				dgReporte.dataProvider = null;
				btnExportar.enabled = false;
				lblTotal.text = "";
				compMesAnio.limpiar();
			}
			
		]]>
	</mx:Script>
	<mx:Canvas width="690" height="420" backgroundColor="#ffffff" backgroundAlpha="1.0" id="canvas1">
		<mx:Label id="lblTitulo" x="18" y="10" width="543" fontSize="12" fontWeight="bold" fontStyle="italic"/>
		<mx:Button x="71.75" y="130" label="Generar" click="generar()"/>
		<mx:Button x="150.25" y="130" label="Limpiar" width="71" height="24" click="limpiar()"/>
		<mx:Label x="18" y="34" text="Criterios de SelecciÃ³n" width="124.25"/>
		<mx:DataGrid id="dgReporte" x="18.45" y="162" width="656.55" visible="true" height="221" horizontalScrollPolicy="auto">
			<mx:columns>
				<mx:DataGridColumn headerText="NOMINA" dataField="NO_NOMINA" width="70"/>
				<mx:DataGridColumn headerText="ASESOR" dataField="NOM_ASESOR" width="250"/>
				<mx:DataGridColumn headerText="# MICROSEGUROS VENDIDOS" dataField="MSVENDIDOS" paddingRight="5" width="180" textAlign="right"/>
				<mx:DataGridColumn headerText="BONO MICROSEGUROS" dataField="BONO" width="100" paddingRight="5" textAlign="right"/>
			</mx:columns>
		</mx:DataGrid>
		<mx:Button id="btnExportar" x="572" y="130" label="Exportar Excel" click="exportar()" enabled="false"/>
		<mx:Label id="lblTotal" x="18.45" y="391" width="656.55" fontWeight="bold" fontStyle="italic" fontSize="12"/>
		<mx:Canvas x="18" y="53.5" width="247.05" height="68.5" styleName="canvasMod">
			<control:FiltroMesAnio id="compMesAnio" y="6.5" x="7.5" width="230"/>
		</mx:Canvas>
	</mx:Canvas>
</mx:Canvas>